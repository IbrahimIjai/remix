{
	"id": "4eeb44abecad09a385909d0bb61af7bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ico.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\ninterface IKRC20 is IERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ninterface IUSDT {\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint256) external;\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function approve(address to, uint256 value) external returns (bool);\r\n}\r\ninterface IDAZ {\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint256) external;\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function approve(address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract Amestarter is ReentrancyGuard {\r\n    \r\n    using SafeERC20 for IKRC20;\r\n\r\n    address public immutable USDT;\r\n    address public immutable DAZ;\r\n    uint public tokenPrice;\r\n    address private owner;\r\n    bool IDOStarted;\r\n    uint256 targetSale;\r\n    uint256 totalRaised;\r\n\r\n\r\n    //mappinng\r\n\r\n    mapping(address => uint256) private purchase;\r\n\r\n    //events\r\n    event latestPurchased(\r\n        address indexed buyer,\r\n        uint amount\r\n    );\r\n\r\n    event icoUpdate(\r\n        uint newTokenprice,\r\n        uint256 target\r\n    );\r\n    event ICOStartAlert(\r\n        string icoAlert\r\n    );\r\n\r\n    constructor(uint _tokenPrice, address _IUSDT, address _IDAZ, uint256 _targetSale){\r\n        owner = msg.sender;\r\n        tokenPrice = _tokenPrice * 10 ** 18;\r\n        USDT = _IUSDT;\r\n        DAZ =  _IDAZ;\r\n        targetSale = _targetSale * 10 ** 18;\r\n    }\r\n\r\n    function purchaseToken(uint _amount) external nonReentrant{\r\n        require(IDOStarted == true, \"IDO has not started\");\r\n        uint256 value = totalRaised + _amount;\r\n        require(value < targetSale, \"All tokens has been sold\");\r\n        IKRC20(USDT).approve(address(this), _amount);\r\n        IKRC20(USDT).safeTransferFrom(msg.sender, address(this), _amount);\r\n        purchase[msg.sender]  += _amount;\r\n        totalRaised += _amount;\r\n\r\n        emit latestPurchased(msg.sender, _amount);\r\n    }\r\n\r\n    function claimPurchasedToken() external nonReentrant {\r\n        require(IDOStarted == false, \"IDO Has  not ended, claim unavailable\");\r\n        require(purchase[msg.sender] > 0, \"you did \");\r\n    }\r\n\r\n    function editIco(uint _tokenPrice, uint256 _targetSale) public{\r\n        require(msg.sender == owner);\r\n\r\n        tokenPrice = _tokenPrice * 10 ** 18;\r\n        targetSale = _targetSale * 10 ** 18;\r\n\r\n        emit icoUpdate( _tokenPrice, _targetSale);\r\n\r\n    }\r\n\r\n    function BeginIDO() public {\r\n        require(msg.sender == owner);\r\n\r\n        IDOStarted = true;\r\n        emit ICOStartAlert(\"ICO is on\");\r\n    }\r\n\r\n    function StopIDO() public {\r\n        require(msg.sender == owner);\r\n\r\n        IDOStarted = false;\r\n        emit ICOStartAlert(\"ICO is paused\");\r\n    }\r\n\r\n    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_24:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_25:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_26:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_27:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_28:\n    /* \"#utility.yul\":957:984   */\n  tag_44\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_46\n  tag_27\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1030:1118   */\ntag_45:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_29:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_48\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_49\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_28\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_30:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_52\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1434:1490   */\ntag_51:\n    /* \"#utility.yul\":1508:1537   */\n  tag_53\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_31:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_55:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_58:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_32:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_60\n    /* \"#utility.yul\":2053:2102   */\n  tag_61\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_30\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2037:2103   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_63\n  tag_25\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2178:2290   */\ntag_62:\n    /* \"#utility.yul\":2299:2338   */\n  tag_64\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_33:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_67\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2447:2569   */\ntag_66:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_68\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_71\n  tag_22\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2849:2968   */\ntag_70:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_73\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3044:3161   */\ntag_72:\n    /* \"#utility.yul\":3185:3259   */\n  tag_74\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3346:3463   */\ntag_75:\n    /* \"#utility.yul\":3487:3561   */\n  tag_77\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_34:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_11:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_80:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_82\n  tag_34\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4000:4084   */\ntag_81:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4532:4545  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4548:4558  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4548:4560  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4532:4560  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4579:4584  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4612:4623  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3305:3312  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3324:3343  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5335:5350  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5353:5363  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5353:5365  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5335:5365  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5397:5404  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5460:5471  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3151:3156  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3168:3177  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5977:5990  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5993:6003  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5993:6005  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5977:6005  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6024:6029  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6050:6055  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6057:6064  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6096:6100  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6089:6100  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3517  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3518:3525  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3501:3526  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6703:6716  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6719:6731  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6719:6729  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6719:6731  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6703:6731  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6765  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6778:6783  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7014  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7003:7014  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3824:3837  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3850  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3840:3852  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3824:3852  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3872:3877  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3907:3911  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3900:3911  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4108  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4110:4117  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4118  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10258:10259  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10246  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10338:10339  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10326  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10420:10426  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10402:10407  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10409:10416  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10464  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10455  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10466:10472  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10977:10994  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7617:7618  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7605  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7694  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7681  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7784  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7767:7771  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7773:7775  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7777:7783  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7766  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7784  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7826  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7827:7831  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7832  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7865:7871  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7861  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7977  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7962  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8023:8029  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8015  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8018  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8102:8106  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8108:8110  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8112:8118  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8101  _afterTokenTransfer */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7583:8126  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12495:12615  function _afterTokenTransfer(... */\n    tag_138:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_141:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_142:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_143:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_181:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_181)\n    tag_183:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_184:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_144:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_145:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_187\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":879:950   */\n      tag_188\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_142\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_189\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_143\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1036:1065   */\n      tag_190\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_18:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_192\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_145\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_147:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_149:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_150:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_198\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_151:\n        /* \"#utility.yul\":2031:2055   */\n      tag_200\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_150\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_201:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_152:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_203\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_153:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_154:\n        /* \"#utility.yul\":2387:2411   */\n      tag_206\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_153\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_207:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_155:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_209\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_154\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_21:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_212\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2680:2799   */\n    tag_211:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_213\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_152\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_214\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_155\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_156:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_157:\n        /* \"#utility.yul\":3244:3265   */\n      tag_217\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_24:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_219\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_157\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_158:\n        /* \"#utility.yul\":3581:3605   */\n      tag_221\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_153\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_28:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_223\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_158\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_31:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_226\n      tag_147\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3956:4075   */\n    tag_225:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_227\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_152\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_228\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_152\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_229\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_159:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_160:\n        /* \"#utility.yul\":4646:4668   */\n      tag_232\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_37:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_234\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_160\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_44:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_237\n      tag_147\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4977:5096   */\n    tag_236:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_238\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5710   */\n    tag_60:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5361:5363   */\n      0x40\n        /* \"#utility.yul\":5349:5358   */\n      dup4\n        /* \"#utility.yul\":5340:5347   */\n      dup6\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_241\n      tag_147\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5329:5448   */\n    tag_240:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5565   */\n      tag_242\n        /* \"#utility.yul\":5557:5564   */\n      dup6\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      dup7\n        /* \"#utility.yul\":5533:5555   */\n      add\n        /* \"#utility.yul\":5512:5565   */\n      tag_152\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5502:5565   */\n      swap3\n      pop\n        /* \"#utility.yul\":5458:5575   */\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5640:5693   */\n      tag_243\n        /* \"#utility.yul\":5685:5692   */\n      dup6\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5665:5674   */\n      dup7\n        /* \"#utility.yul\":5661:5683   */\n      add\n        /* \"#utility.yul\":5640:5693   */\n      tag_152\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5630:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5703   */\n      pop\n        /* \"#utility.yul\":5236:5710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5896   */\n    tag_161:\n        /* \"#utility.yul\":5764:5841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5761:5762   */\n      0x00\n        /* \"#utility.yul\":5754:5842   */\n      mstore\n        /* \"#utility.yul\":5861:5865   */\n      0x22\n        /* \"#utility.yul\":5858:5859   */\n      0x04\n        /* \"#utility.yul\":5851:5866   */\n      mstore\n        /* \"#utility.yul\":5885:5889   */\n      0x24\n        /* \"#utility.yul\":5882:5883   */\n      0x00\n        /* \"#utility.yul\":5875:5890   */\n      revert\n        /* \"#utility.yul\":5902:6222   */\n    tag_65:\n        /* \"#utility.yul\":5946:5952   */\n      0x00\n        /* \"#utility.yul\":5983:5984   */\n      0x02\n        /* \"#utility.yul\":5977:5981   */\n      dup3\n        /* \"#utility.yul\":5973:5985   */\n      div\n        /* \"#utility.yul\":5963:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6030:6031   */\n      0x01\n        /* \"#utility.yul\":6024:6028   */\n      dup3\n        /* \"#utility.yul\":6020:6032   */\n      and\n        /* \"#utility.yul\":6051:6069   */\n      dup1\n        /* \"#utility.yul\":6041:6122   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6107:6111   */\n      0x7f\n        /* \"#utility.yul\":6099:6105   */\n      dup3\n        /* \"#utility.yul\":6095:6112   */\n      and\n        /* \"#utility.yul\":6085:6112   */\n      swap2\n      pop\n        /* \"#utility.yul\":6041:6122   */\n    tag_246:\n        /* \"#utility.yul\":6169:6171   */\n      0x20\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6158:6172   */\n      lt\n        /* \"#utility.yul\":6138:6156   */\n      dup2\n        /* \"#utility.yul\":6135:6173   */\n      sub\n        /* \"#utility.yul\":6132:6216   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6188:6206   */\n      tag_248\n      tag_161\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6132:6216   */\n    tag_247:\n        /* \"#utility.yul\":5953:6222   */\n      pop\n        /* \"#utility.yul\":5902:6222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6408   */\n    tag_162:\n        /* \"#utility.yul\":6276:6353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6266:6354   */\n      mstore\n        /* \"#utility.yul\":6373:6377   */\n      0x11\n        /* \"#utility.yul\":6370:6371   */\n      0x04\n        /* \"#utility.yul\":6363:6378   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x24\n        /* \"#utility.yul\":6394:6395   */\n      0x00\n        /* \"#utility.yul\":6387:6402   */\n      revert\n        /* \"#utility.yul\":6414:6719   */\n    tag_88:\n        /* \"#utility.yul\":6454:6457   */\n      0x00\n        /* \"#utility.yul\":6473:6493   */\n      tag_251\n        /* \"#utility.yul\":6491:6492   */\n      dup3\n        /* \"#utility.yul\":6473:6493   */\n      tag_153\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6468:6493   */\n      swap2\n      pop\n        /* \"#utility.yul\":6507:6527   */\n      tag_252\n        /* \"#utility.yul\":6525:6526   */\n      dup4\n        /* \"#utility.yul\":6507:6527   */\n      tag_153\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6502:6527   */\n      swap3\n      pop\n        /* \"#utility.yul\":6661:6662   */\n      dup3\n        /* \"#utility.yul\":6593:6659   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6589:6663   */\n      sub\n        /* \"#utility.yul\":6586:6587   */\n      dup3\n        /* \"#utility.yul\":6583:6664   */\n      gt\n        /* \"#utility.yul\":6580:6687   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6667:6685   */\n      tag_254\n      tag_162\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6580:6687   */\n    tag_253:\n        /* \"#utility.yul\":6711:6712   */\n      dup3\n        /* \"#utility.yul\":6708:6709   */\n      dup3\n        /* \"#utility.yul\":6704:6713   */\n      add\n        /* \"#utility.yul\":6697:6713   */\n      swap1\n      pop\n        /* \"#utility.yul\":6414:6719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6725:6949   */\n    tag_163:\n        /* \"#utility.yul\":6865:6899   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6853:6859   */\n      dup3\n        /* \"#utility.yul\":6849:6863   */\n      add\n        /* \"#utility.yul\":6842:6900   */\n      mstore\n        /* \"#utility.yul\":6934:6941   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6929:6931   */\n      0x20\n        /* \"#utility.yul\":6921:6927   */\n      dup3\n        /* \"#utility.yul\":6917:6932   */\n      add\n        /* \"#utility.yul\":6910:6942   */\n      mstore\n        /* \"#utility.yul\":6725:6949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6955:7321   */\n    tag_164:\n        /* \"#utility.yul\":7097:7100   */\n      0x00\n        /* \"#utility.yul\":7118:7185   */\n      tag_257\n        /* \"#utility.yul\":7182:7184   */\n      0x25\n        /* \"#utility.yul\":7177:7180   */\n      dup4\n        /* \"#utility.yul\":7118:7185   */\n      tag_142\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7111:7185   */\n      swap2\n      pop\n        /* \"#utility.yul\":7194:7287   */\n      tag_258\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7194:7287   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7312:7314   */\n      0x40\n        /* \"#utility.yul\":7307:7310   */\n      dup3\n        /* \"#utility.yul\":7303:7315   */\n      add\n        /* \"#utility.yul\":7296:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6955:7321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7746   */\n    tag_101:\n        /* \"#utility.yul\":7493:7497   */\n      0x00\n        /* \"#utility.yul\":7531:7533   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7516:7534   */\n      add\n        /* \"#utility.yul\":7508:7534   */\n      swap1\n      pop\n        /* \"#utility.yul\":7580:7589   */\n      dup2\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7570:7590   */\n      sub\n        /* \"#utility.yul\":7566:7567   */\n      0x00\n        /* \"#utility.yul\":7555:7564   */\n      dup4\n        /* \"#utility.yul\":7551:7568   */\n      add\n        /* \"#utility.yul\":7544:7591   */\n      mstore\n        /* \"#utility.yul\":7608:7739   */\n      tag_260\n        /* \"#utility.yul\":7734:7738   */\n      dup2\n        /* \"#utility.yul\":7608:7739   */\n      tag_164\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7600:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7752:7975   */\n    tag_165:\n        /* \"#utility.yul\":7892:7926   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7880:7886   */\n      dup3\n        /* \"#utility.yul\":7876:7890   */\n      add\n        /* \"#utility.yul\":7869:7927   */\n      mstore\n        /* \"#utility.yul\":7961:7967   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7948:7954   */\n      dup3\n        /* \"#utility.yul\":7944:7959   */\n      add\n        /* \"#utility.yul\":7937:7968   */\n      mstore\n        /* \"#utility.yul\":7752:7975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7981:8347   */\n    tag_166:\n        /* \"#utility.yul\":8123:8126   */\n      0x00\n        /* \"#utility.yul\":8144:8211   */\n      tag_263\n        /* \"#utility.yul\":8208:8210   */\n      0x24\n        /* \"#utility.yul\":8203:8206   */\n      dup4\n        /* \"#utility.yul\":8144:8211   */\n      tag_142\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8137:8211   */\n      swap2\n      pop\n        /* \"#utility.yul\":8220:8313   */\n      tag_264\n        /* \"#utility.yul\":8309:8312   */\n      dup3\n        /* \"#utility.yul\":8220:8313   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8338:8340   */\n      0x40\n        /* \"#utility.yul\":8333:8336   */\n      dup3\n        /* \"#utility.yul\":8329:8341   */\n      add\n        /* \"#utility.yul\":8322:8341   */\n      swap1\n      pop\n        /* \"#utility.yul\":7981:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8772   */\n    tag_111:\n        /* \"#utility.yul\":8519:8523   */\n      0x00\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8546:8555   */\n      dup3\n        /* \"#utility.yul\":8542:8560   */\n      add\n        /* \"#utility.yul\":8534:8560   */\n      swap1\n      pop\n        /* \"#utility.yul\":8606:8615   */\n      dup2\n        /* \"#utility.yul\":8600:8604   */\n      dup2\n        /* \"#utility.yul\":8596:8616   */\n      sub\n        /* \"#utility.yul\":8592:8593   */\n      0x00\n        /* \"#utility.yul\":8581:8590   */\n      dup4\n        /* \"#utility.yul\":8577:8594   */\n      add\n        /* \"#utility.yul\":8570:8617   */\n      mstore\n        /* \"#utility.yul\":8634:8765   */\n      tag_266\n        /* \"#utility.yul\":8760:8764   */\n      dup2\n        /* \"#utility.yul\":8634:8765   */\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8626:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8778:8999   */\n    tag_167:\n        /* \"#utility.yul\":8918:8952   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8914:8915   */\n      0x00\n        /* \"#utility.yul\":8906:8912   */\n      dup3\n        /* \"#utility.yul\":8902:8916   */\n      add\n        /* \"#utility.yul\":8895:8953   */\n      mstore\n        /* \"#utility.yul\":8987:8991   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8982:8984   */\n      0x20\n        /* \"#utility.yul\":8974:8980   */\n      dup3\n        /* \"#utility.yul\":8970:8985   */\n      add\n        /* \"#utility.yul\":8963:8992   */\n      mstore\n        /* \"#utility.yul\":8778:8999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9371   */\n    tag_168:\n        /* \"#utility.yul\":9147:9150   */\n      0x00\n        /* \"#utility.yul\":9168:9235   */\n      tag_269\n        /* \"#utility.yul\":9232:9234   */\n      0x22\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9168:9235   */\n      tag_142\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9161:9235   */\n      swap2\n      pop\n        /* \"#utility.yul\":9244:9337   */\n      tag_270\n        /* \"#utility.yul\":9333:9336   */\n      dup3\n        /* \"#utility.yul\":9244:9337   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9362:9364   */\n      0x40\n        /* \"#utility.yul\":9357:9360   */\n      dup3\n        /* \"#utility.yul\":9353:9365   */\n      add\n        /* \"#utility.yul\":9346:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_114:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_272\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:9981   */\n    tag_169:\n        /* \"#utility.yul\":9942:9973   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9930:9936   */\n      dup3\n        /* \"#utility.yul\":9926:9940   */\n      add\n        /* \"#utility.yul\":9919:9974   */\n      mstore\n        /* \"#utility.yul\":9802:9981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9987:10353   */\n    tag_170:\n        /* \"#utility.yul\":10129:10132   */\n      0x00\n        /* \"#utility.yul\":10150:10217   */\n      tag_275\n        /* \"#utility.yul\":10214:10216   */\n      0x1d\n        /* \"#utility.yul\":10209:10212   */\n      dup4\n        /* \"#utility.yul\":10150:10217   */\n      tag_142\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10143:10217   */\n      swap2\n      pop\n        /* \"#utility.yul\":10226:10319   */\n      tag_276\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10226:10319   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10344:10346   */\n      0x20\n        /* \"#utility.yul\":10339:10342   */\n      dup3\n        /* \"#utility.yul\":10335:10347   */\n      add\n        /* \"#utility.yul\":10328:10347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10359:10778   */\n    tag_121:\n        /* \"#utility.yul\":10525:10529   */\n      0x00\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"#utility.yul\":10552:10561   */\n      dup3\n        /* \"#utility.yul\":10548:10566   */\n      add\n        /* \"#utility.yul\":10540:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10612:10621   */\n      dup2\n        /* \"#utility.yul\":10606:10610   */\n      dup2\n        /* \"#utility.yul\":10602:10622   */\n      sub\n        /* \"#utility.yul\":10598:10599   */\n      0x00\n        /* \"#utility.yul\":10587:10596   */\n      dup4\n        /* \"#utility.yul\":10583:10600   */\n      add\n        /* \"#utility.yul\":10576:10623   */\n      mstore\n        /* \"#utility.yul\":10640:10771   */\n      tag_278\n        /* \"#utility.yul\":10766:10770   */\n      dup2\n        /* \"#utility.yul\":10640:10771   */\n      tag_170\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10632:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10359:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11008   */\n    tag_171:\n        /* \"#utility.yul\":10924:10958   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10920:10921   */\n      0x00\n        /* \"#utility.yul\":10912:10918   */\n      dup3\n        /* \"#utility.yul\":10908:10922   */\n      add\n        /* \"#utility.yul\":10901:10959   */\n      mstore\n        /* \"#utility.yul\":10993:11000   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"#utility.yul\":10980:10986   */\n      dup3\n        /* \"#utility.yul\":10976:10991   */\n      add\n        /* \"#utility.yul\":10969:11001   */\n      mstore\n        /* \"#utility.yul\":10784:11008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11014:11380   */\n    tag_172:\n        /* \"#utility.yul\":11156:11159   */\n      0x00\n        /* \"#utility.yul\":11177:11244   */\n      tag_281\n        /* \"#utility.yul\":11241:11243   */\n      0x25\n        /* \"#utility.yul\":11236:11239   */\n      dup4\n        /* \"#utility.yul\":11177:11244   */\n      tag_142\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11170:11244   */\n      swap2\n      pop\n        /* \"#utility.yul\":11253:11346   */\n      tag_282\n        /* \"#utility.yul\":11342:11345   */\n      dup3\n        /* \"#utility.yul\":11253:11346   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11371:11373   */\n      0x40\n        /* \"#utility.yul\":11366:11369   */\n      dup3\n        /* \"#utility.yul\":11362:11374   */\n      add\n        /* \"#utility.yul\":11355:11374   */\n      swap1\n      pop\n        /* \"#utility.yul\":11014:11380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11386:11805   */\n    tag_126:\n        /* \"#utility.yul\":11552:11556   */\n      0x00\n        /* \"#utility.yul\":11590:11592   */\n      0x20\n        /* \"#utility.yul\":11579:11588   */\n      dup3\n        /* \"#utility.yul\":11575:11593   */\n      add\n        /* \"#utility.yul\":11567:11593   */\n      swap1\n      pop\n        /* \"#utility.yul\":11639:11648   */\n      dup2\n        /* \"#utility.yul\":11633:11637   */\n      dup2\n        /* \"#utility.yul\":11629:11649   */\n      sub\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11614:11623   */\n      dup4\n        /* \"#utility.yul\":11610:11627   */\n      add\n        /* \"#utility.yul\":11603:11650   */\n      mstore\n        /* \"#utility.yul\":11667:11798   */\n      tag_284\n        /* \"#utility.yul\":11793:11797   */\n      dup2\n        /* \"#utility.yul\":11667:11798   */\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11659:11798   */\n      swap1\n      pop\n        /* \"#utility.yul\":11386:11805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12033   */\n    tag_173:\n        /* \"#utility.yul\":11951:11985   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11947:11948   */\n      0x00\n        /* \"#utility.yul\":11939:11945   */\n      dup3\n        /* \"#utility.yul\":11935:11949   */\n      add\n        /* \"#utility.yul\":11928:11986   */\n      mstore\n        /* \"#utility.yul\":12020:12025   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12015:12017   */\n      0x20\n        /* \"#utility.yul\":12007:12013   */\n      dup3\n        /* \"#utility.yul\":12003:12018   */\n      add\n        /* \"#utility.yul\":11996:12026   */\n      mstore\n        /* \"#utility.yul\":11811:12033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12405   */\n    tag_174:\n        /* \"#utility.yul\":12181:12184   */\n      0x00\n        /* \"#utility.yul\":12202:12269   */\n      tag_287\n        /* \"#utility.yul\":12266:12268   */\n      0x23\n        /* \"#utility.yul\":12261:12264   */\n      dup4\n        /* \"#utility.yul\":12202:12269   */\n      tag_142\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12195:12269   */\n      swap2\n      pop\n        /* \"#utility.yul\":12278:12371   */\n      tag_288\n        /* \"#utility.yul\":12367:12370   */\n      dup3\n        /* \"#utility.yul\":12278:12371   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12396:12398   */\n      0x40\n        /* \"#utility.yul\":12391:12394   */\n      dup3\n        /* \"#utility.yul\":12387:12399   */\n      add\n        /* \"#utility.yul\":12380:12399   */\n      swap1\n      pop\n        /* \"#utility.yul\":12039:12405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12411:12830   */\n    tag_129:\n        /* \"#utility.yul\":12577:12581   */\n      0x00\n        /* \"#utility.yul\":12615:12617   */\n      0x20\n        /* \"#utility.yul\":12604:12613   */\n      dup3\n        /* \"#utility.yul\":12600:12618   */\n      add\n        /* \"#utility.yul\":12592:12618   */\n      swap1\n      pop\n        /* \"#utility.yul\":12664:12673   */\n      dup2\n        /* \"#utility.yul\":12658:12662   */\n      dup2\n        /* \"#utility.yul\":12654:12674   */\n      sub\n        /* \"#utility.yul\":12650:12651   */\n      0x00\n        /* \"#utility.yul\":12639:12648   */\n      dup4\n        /* \"#utility.yul\":12635:12652   */\n      add\n        /* \"#utility.yul\":12628:12675   */\n      mstore\n        /* \"#utility.yul\":12692:12823   */\n      tag_290\n        /* \"#utility.yul\":12818:12822   */\n      dup2\n        /* \"#utility.yul\":12692:12823   */\n      tag_174\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12684:12823   */\n      swap1\n      pop\n        /* \"#utility.yul\":12411:12830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12836:13061   */\n    tag_175:\n        /* \"#utility.yul\":12976:13010   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12972:12973   */\n      0x00\n        /* \"#utility.yul\":12964:12970   */\n      dup3\n        /* \"#utility.yul\":12960:12974   */\n      add\n        /* \"#utility.yul\":12953:13011   */\n      mstore\n        /* \"#utility.yul\":13045:13053   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13040:13042   */\n      0x20\n        /* \"#utility.yul\":13032:13038   */\n      dup3\n        /* \"#utility.yul\":13028:13043   */\n      add\n        /* \"#utility.yul\":13021:13054   */\n      mstore\n        /* \"#utility.yul\":12836:13061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13067:13433   */\n    tag_176:\n        /* \"#utility.yul\":13209:13212   */\n      0x00\n        /* \"#utility.yul\":13230:13297   */\n      tag_293\n        /* \"#utility.yul\":13294:13296   */\n      0x26\n        /* \"#utility.yul\":13289:13292   */\n      dup4\n        /* \"#utility.yul\":13230:13297   */\n      tag_142\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13223:13297   */\n      swap2\n      pop\n        /* \"#utility.yul\":13306:13399   */\n      tag_294\n        /* \"#utility.yul\":13395:13398   */\n      dup3\n        /* \"#utility.yul\":13306:13399   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13424:13426   */\n      0x40\n        /* \"#utility.yul\":13419:13422   */\n      dup3\n        /* \"#utility.yul\":13415:13427   */\n      add\n        /* \"#utility.yul\":13408:13427   */\n      swap1\n      pop\n        /* \"#utility.yul\":13067:13433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13439:13858   */\n    tag_134:\n        /* \"#utility.yul\":13605:13609   */\n      0x00\n        /* \"#utility.yul\":13643:13645   */\n      0x20\n        /* \"#utility.yul\":13632:13641   */\n      dup3\n        /* \"#utility.yul\":13628:13646   */\n      add\n        /* \"#utility.yul\":13620:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13692:13701   */\n      dup2\n        /* \"#utility.yul\":13686:13690   */\n      dup2\n        /* \"#utility.yul\":13682:13702   */\n      sub\n        /* \"#utility.yul\":13678:13679   */\n      0x00\n        /* \"#utility.yul\":13667:13676   */\n      dup4\n        /* \"#utility.yul\":13663:13680   */\n      add\n        /* \"#utility.yul\":13656:13703   */\n      mstore\n        /* \"#utility.yul\":13720:13851   */\n      tag_296\n        /* \"#utility.yul\":13846:13850   */\n      dup2\n        /* \"#utility.yul\":13720:13851   */\n      tag_176\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13712:13851   */\n      swap1\n      pop\n        /* \"#utility.yul\":13439:13858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220499281118f2806ab1e9a686fcde619f23cabdcf78a28f2311bfe14de54bfead864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:9",
																"statements": []
															},
															"src": "1688:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:9"
															},
															"nodeType": "YulIf",
															"src": "1810:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:9",
														"type": ""
													}
												],
												"src": "1610:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:9"
															},
															"nodeType": "YulIf",
															"src": "2178:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:9",
														"type": ""
													}
												],
												"src": "1923:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:9"
															},
															"nodeType": "YulIf",
															"src": "2447:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:9",
														"type": ""
													}
												],
												"src": "2364:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:9"
															},
															"nodeType": "YulIf",
															"src": "2849:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:9",
														"type": ""
													}
												],
												"src": "2725:853:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:9"
															},
															"nodeType": "YulIf",
															"src": "3909:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:9"
															},
															"nodeType": "YulIf",
															"src": "4000:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:9",
														"type": ""
													}
												],
												"src": "3770:320:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200161a3803806200161a8339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a7565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b602082108103620003a157620003a062000343565b5b50919050565b61126380620003b76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1e565b60405180910390f35b6100e660048036038101906100e19190610bd9565b610308565b6040516100f39190610c34565b60405180910390f35b61010461032b565b6040516101119190610c5e565b60405180910390f35b610134600480360381019061012f9190610c79565b610335565b6040516101419190610c34565b60405180910390f35b610152610364565b60405161015f9190610ce8565b60405180910390f35b610182600480360381019061017d9190610bd9565b61036d565b60405161018f9190610c34565b60405180910390f35b6101b260048036038101906101ad9190610d03565b6103a4565b6040516101bf9190610c5e565b60405180910390f35b6101d06103ec565b6040516101dd9190610b1e565b60405180910390f35b61020060048036038101906101fb9190610bd9565b61047e565b60405161020d9190610c34565b60405180910390f35b610230600480360381019061022b9190610bd9565b6104f5565b60405161023d9190610c34565b60405180910390f35b610260600480360381019061025b9190610d30565b610518565b60405161026d9190610c5e565b60405180910390f35b60606003805461028590610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dff565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9f565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec7565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610feb565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c5e565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611057565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d19061117b565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061120d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610dff565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c5e565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b83811115610ace576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af082610a85565b610afa8185610a90565b9350610b0a818560208601610aa1565b610b1381610ad4565b840191505092915050565b60006020820190508181036000830152610b388184610ae5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7082610b45565b9050919050565b610b8081610b65565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b6000819050919050565b610bb681610ba3565b8114610bc157600080fd5b50565b600081359050610bd381610bad565b92915050565b60008060408385031215610bf057610bef610b40565b5b6000610bfe85828601610b8e565b9250506020610c0f85828601610bc4565b9150509250929050565b60008115159050919050565b610c2e81610c19565b82525050565b6000602082019050610c496000830184610c25565b92915050565b610c5881610ba3565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b600080600060608486031215610c9257610c91610b40565b5b6000610ca086828701610b8e565b9350506020610cb186828701610b8e565b9250506040610cc286828701610bc4565b9150509250925092565b600060ff82169050919050565b610ce281610ccc565b82525050565b6000602082019050610cfd6000830184610cd9565b92915050565b600060208284031215610d1957610d18610b40565b5b6000610d2784828501610b8e565b91505092915050565b60008060408385031215610d4757610d46610b40565b5b6000610d5585828601610b8e565b9250506020610d6685828601610b8e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db757607f821691505b602082108103610dca57610dc9610d70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba3565b9150610e1583610ba3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a90565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a90565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a90565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a90565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a90565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a90565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a90565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea2646970667358221220499281118f2806ab1e9a686fcde619f23cabdcf78a28f2311bfe14de54bfead864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x161A CODESIZE SUB DUP1 PUSH3 0x161A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A7 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3A1 JUMPI PUSH3 0x3A0 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1263 DUP1 PUSH3 0x3B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAFA DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2E DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB1 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC2 DUP7 DUP3 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SWAP3 DUP2 GT DUP16 0x28 MOD 0xAB 0x1E SWAP11 PUSH9 0x6FCDE619F23CABDCF7 DUP11 0x28 CALLCODE BALANCE SHL INVALID EQ 0xDE SLOAD 0xBF 0xEA 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1403:11214:1:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1403:11214:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_624": {
									"entryPoint": 2688,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_559": {
									"entryPoint": 1447,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_613": {
									"entryPoint": 2683,
									"id": 613,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1352": {
									"entryPoint": 1439,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_602": {
									"entryPoint": 1904,
									"id": 602,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_386": {
									"entryPoint": 2044,
									"id": 386,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_181": {
									"entryPoint": 1304,
									"id": 181,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_206": {
									"entryPoint": 776,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_138": {
									"entryPoint": 932,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_114": {
									"entryPoint": 868,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_309": {
									"entryPoint": 1150,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_268": {
									"entryPoint": 877,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_94": {
									"entryPoint": 630,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_104": {
									"entryPoint": 1004,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_124": {
									"entryPoint": 811,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_239": {
									"entryPoint": 821,
									"id": 239,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_163": {
									"entryPoint": 1269,
									"id": 163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13861:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:9",
																"statements": []
															},
															"src": "365:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:9"
															},
															"nodeType": "YulIf",
															"src": "487:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:9",
														"type": ""
													}
												],
												"src": "287:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:9",
														"type": ""
													}
												],
												"src": "600:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:9",
														"type": ""
													}
												],
												"src": "708:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:9",
														"type": ""
													}
												],
												"src": "1078:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:9",
														"type": ""
													}
												],
												"src": "1397:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:9",
														"type": ""
													}
												],
												"src": "1724:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:9",
														"type": ""
													}
												],
												"src": "1856:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:9"
															},
															"nodeType": "YulIf",
															"src": "2011:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:9",
														"type": ""
													}
												],
												"src": "1958:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:9",
														"type": ""
													}
												],
												"src": "2086:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:9",
														"type": ""
													}
												],
												"src": "2231:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:9"
															},
															"nodeType": "YulIf",
															"src": "2367:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:9",
														"type": ""
													}
												],
												"src": "2314:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:9",
														"type": ""
													}
												],
												"src": "2442:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:9"
															},
															"nodeType": "YulIf",
															"src": "2680:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:9",
														"type": ""
													}
												],
												"src": "2587:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:9",
														"type": ""
													}
												],
												"src": "3067:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:9",
														"type": ""
													}
												],
												"src": "3163:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:9",
														"type": ""
													}
												],
												"src": "3278:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:9",
														"type": ""
													}
												],
												"src": "3494:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:9",
														"type": ""
													}
												],
												"src": "3618:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:9"
															},
															"nodeType": "YulIf",
															"src": "3956:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:9",
														"type": ""
													}
												],
												"src": "3846:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:9",
														"type": ""
													}
												],
												"src": "4471:86:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:9",
														"type": ""
													}
												],
												"src": "4563:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:9",
														"type": ""
													}
												],
												"src": "4681:214:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:9"
															},
															"nodeType": "YulIf",
															"src": "4977:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:9",
														"type": ""
													}
												],
												"src": "4901:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:9"
															},
															"nodeType": "YulIf",
															"src": "5329:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5537:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5533:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5512:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5585:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5600:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5604:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5630:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5665:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5661:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5685:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5640:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5292:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5304:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5312:6:9",
														"type": ""
													}
												],
												"src": "5236:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5744:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5761:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5754:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5861:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5851:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5882:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5875:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5716:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5953:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5963:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5977:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5994:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6024:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5998:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6071:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6085:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6099:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6107:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6095:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6095:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6085:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6051:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:26:9"
															},
															"nodeType": "YulIf",
															"src": "6041:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6174:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6188:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6188:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6138:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6161:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6158:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6135:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:38:9"
															},
															"nodeType": "YulIf",
															"src": "6132:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5937:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5946:6:9",
														"type": ""
													}
												],
												"src": "5902:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6256:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6273:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6276:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6266:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6228:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6491:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6473:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6468:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6502:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6525:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6507:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6502:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6665:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6667:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6667:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6667:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6586:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6593:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6661:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6583:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:81:9"
															},
															"nodeType": "YulIf",
															"src": "6580:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6697:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6708:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6711:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6445:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6448:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6454:3:9",
														"type": ""
													}
												],
												"src": "6414:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6861:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:14:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6865:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6921:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6929:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6917:15:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6934:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6910:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6823:6:9",
														"type": ""
													}
												],
												"src": "6725:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7101:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7111:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7177:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7182:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7118:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7194:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7296:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7307:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7312:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7089:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7097:3:9",
														"type": ""
													}
												],
												"src": "6955:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7508:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7520:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7508:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7555:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7566:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7551:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7574:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7580:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7570:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7570:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7544:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7600:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7734:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7608:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7608:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7600:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7478:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7493:4:9",
														"type": ""
													}
												],
												"src": "7327:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7888:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:14:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7892:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7961:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7937:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7850:6:9",
														"type": ""
													}
												],
												"src": "7752:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8127:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8137:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8203:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8208:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8144:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8309:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8220:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8220:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8322:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8329:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8115:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8123:3:9",
														"type": ""
													}
												],
												"src": "7981:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8534:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8546:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8534:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8581:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8592:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8577:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8600:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8596:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8596:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8626:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8760:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8634:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8626:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8504:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8519:4:9",
														"type": ""
													}
												],
												"src": "8353:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8884:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8906:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8914:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8902:14:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8918:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8895:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8974:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8970:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8970:15:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8987:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8876:6:9",
														"type": ""
													}
												],
												"src": "8778:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9151:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9161:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9244:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9139:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9147:3:9",
														"type": ""
													}
												],
												"src": "9005:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9548:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9558:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9528:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:9",
														"type": ""
													}
												],
												"src": "9377:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:14:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9942:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9919:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9919:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9900:6:9",
														"type": ""
													}
												],
												"src": "9802:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10133:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10143:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10150:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10143:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10226:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10226:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10226:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10328:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10339:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10121:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10129:3:9",
														"type": ""
													}
												],
												"src": "9987:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10530:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10540:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10552:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10540:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10598:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10583:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10606:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10602:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10576:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10632:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10766:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10640:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10640:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10510:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10525:4:9",
														"type": ""
													}
												],
												"src": "10359:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10890:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10912:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10920:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10924:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10901:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10901:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10980:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10988:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10976:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10976:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10993:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10969:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10882:6:9",
														"type": ""
													}
												],
												"src": "10784:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11160:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11170:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11236:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11241:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11177:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11170:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11342:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11253:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11355:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11366:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11355:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11148:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11156:3:9",
														"type": ""
													}
												],
												"src": "11014:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11557:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11567:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11579:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11575:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11567:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11633:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11639:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11629:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11659:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11793:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11667:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11537:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11552:4:9",
														"type": ""
													}
												],
												"src": "11386:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11917:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11939:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11947:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11935:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11935:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11951:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11928:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11928:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12007:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12015:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12003:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12003:15:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12020:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11996:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11996:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11996:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11909:6:9",
														"type": ""
													}
												],
												"src": "11811:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12185:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12195:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12261:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12202:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12202:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12195:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12367:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12278:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12380:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12391:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12173:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12181:3:9",
														"type": ""
													}
												],
												"src": "12039:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12582:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12592:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12592:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12639:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12650:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12658:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12664:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12654:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12654:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12684:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12818:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12692:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12692:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12684:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12562:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12577:4:9",
														"type": ""
													}
												],
												"src": "12411:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12964:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12972:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12960:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12960:14:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12976:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12953:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12953:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13032:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13040:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13028:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13028:15:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13045:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13021:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12934:6:9",
														"type": ""
													}
												],
												"src": "12836:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13213:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13223:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13289:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13294:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13230:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13230:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13223:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13395:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13306:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13306:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13408:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13419:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13424:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13415:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13408:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13201:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13209:3:9",
														"type": ""
													}
												],
												"src": "13067:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13610:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13620:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13632:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13628:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13620:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13667:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13678:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13686:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13692:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13682:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13656:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13712:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13846:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13720:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13712:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13590:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13605:4:9",
														"type": ""
													}
												],
												"src": "13439:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1e565b60405180910390f35b6100e660048036038101906100e19190610bd9565b610308565b6040516100f39190610c34565b60405180910390f35b61010461032b565b6040516101119190610c5e565b60405180910390f35b610134600480360381019061012f9190610c79565b610335565b6040516101419190610c34565b60405180910390f35b610152610364565b60405161015f9190610ce8565b60405180910390f35b610182600480360381019061017d9190610bd9565b61036d565b60405161018f9190610c34565b60405180910390f35b6101b260048036038101906101ad9190610d03565b6103a4565b6040516101bf9190610c5e565b60405180910390f35b6101d06103ec565b6040516101dd9190610b1e565b60405180910390f35b61020060048036038101906101fb9190610bd9565b61047e565b60405161020d9190610c34565b60405180910390f35b610230600480360381019061022b9190610bd9565b6104f5565b60405161023d9190610c34565b60405180910390f35b610260600480360381019061025b9190610d30565b610518565b60405161026d9190610c5e565b60405180910390f35b60606003805461028590610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dff565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9f565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec7565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610feb565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c5e565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611057565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d19061117b565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061120d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610dff565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c5e565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b83811115610ace576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af082610a85565b610afa8185610a90565b9350610b0a818560208601610aa1565b610b1381610ad4565b840191505092915050565b60006020820190508181036000830152610b388184610ae5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7082610b45565b9050919050565b610b8081610b65565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b6000819050919050565b610bb681610ba3565b8114610bc157600080fd5b50565b600081359050610bd381610bad565b92915050565b60008060408385031215610bf057610bef610b40565b5b6000610bfe85828601610b8e565b9250506020610c0f85828601610bc4565b9150509250929050565b60008115159050919050565b610c2e81610c19565b82525050565b6000602082019050610c496000830184610c25565b92915050565b610c5881610ba3565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b600080600060608486031215610c9257610c91610b40565b5b6000610ca086828701610b8e565b9350506020610cb186828701610b8e565b9250506040610cc286828701610bc4565b9150509250925092565b600060ff82169050919050565b610ce281610ccc565b82525050565b6000602082019050610cfd6000830184610cd9565b92915050565b600060208284031215610d1957610d18610b40565b5b6000610d2784828501610b8e565b91505092915050565b60008060408385031215610d4757610d46610b40565b5b6000610d5585828601610b8e565b9250506020610d6685828601610b8e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db757607f821691505b602082108103610dca57610dc9610d70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba3565b9150610e1583610ba3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a90565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a90565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a90565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a90565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a90565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a90565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a90565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea2646970667358221220499281118f2806ab1e9a686fcde619f23cabdcf78a28f2311bfe14de54bfead864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAFA DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2E DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB1 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC2 DUP7 DUP3 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SWAP3 DUP2 GT DUP16 0x28 MOD 0xAB 0x1E SWAP11 PUSH9 0x6FCDE619F23CABDCF7 DUP11 0x28 CALLCODE BALANCE SHL INVALID EQ 0xDE SLOAD 0xBF 0xEA 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1403:11214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;10110:370:1:-;10258:1;10241:19;;:5;:19;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10881:321;10761:441;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7583:543;7475:651;;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "941400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220499281118f2806ab1e9a686fcde619f23cabdcf78a28f2311bfe14de54bfead864736f6c634300080d0033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4548,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4579,
											"end": 4584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5353,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5353,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5460,
											"end": 5471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3168,
											"end": 3177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5993,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6024,
											"end": 6029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6064,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6703,
											"end": 6716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6719,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6719,
											"end": 6731,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6719,
											"end": 6731,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6719,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7010,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7003,
											"end": 7014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3872,
											"end": 3877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10258,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10407,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10409,
											"end": 10416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7767,
											"end": 7771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7827,
											"end": 7831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8108,
											"end": 8110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 8126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12615,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5841,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5977,
											"end": 5981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6135,
											"end": 6173,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 6222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6370,
											"end": 6371,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6363,
											"end": 6378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6402,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6659,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6663,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6664,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6704,
											"end": 6713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "PUSH",
											"source": 9,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6917,
											"end": 6932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7182,
											"end": 7184,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 7177,
											"end": 7180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7312,
											"end": 7314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7303,
											"end": 7315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7590,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7926,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "PUSH",
											"source": 9,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8208,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8309,
											"end": 8312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8581,
											"end": 8590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8918,
											"end": 8952,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8982,
											"end": 8984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8970,
											"end": 8985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8963,
											"end": 8992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9973,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9919,
											"end": 9974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10602,
											"end": 10622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 10600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10576,
											"end": 10623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10766,
											"end": 10770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 10958,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10908,
											"end": 10922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 10991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 11001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11241,
											"end": 11243,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11236,
											"end": 11239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11362,
											"end": 11374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11592,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11603,
											"end": 11650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11985,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11935,
											"end": 11949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11928,
											"end": 11986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12025,
											"name": "PUSH",
											"source": 9,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12003,
											"end": 12018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12391,
											"end": 12394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12615,
											"end": 12617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12604,
											"end": 12613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12654,
											"end": 12674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 12818,
											"end": 12822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12972,
											"end": 12973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 12970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12960,
											"end": 12974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12953,
											"end": 13011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13045,
											"end": 13053,
											"name": "PUSH",
											"source": 9,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13040,
											"end": 13042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13032,
											"end": 13038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13021,
											"end": 13054,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 13294,
											"end": 13296,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 13289,
											"end": 13292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 13395,
											"end": 13398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13628,
											"end": 13646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13678,
											"end": 13679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13656,
											"end": 13703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 13846,
											"end": 13850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 55,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 61,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 63,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 65,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 67,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5ece5255bbfd2abdb3e2b0cc50d074e92da2ce1de3ffd463c8edd403d04542364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ece5255bbfd2abdb3e2b0cc50d074e92da2ce1de3ffd463c8edd403d04542364736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEC 0xE5 0x25 JUMPDEST 0xBF 0xD2 0xAB 0xDB RETURNDATACOPY 0x2B 0xC 0xC5 0xD SMOD 0x4E SWAP3 0xDA 0x2C 0xE1 0xDE EXTCODEHASH REVERT CHAINID EXTCODECOPY DUP15 0xDD BLOCKHASH RETURNDATASIZE DIV SLOAD 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ece5255bbfd2abdb3e2b0cc50d074e92da2ce1de3ffd463c8edd403d04542364736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xEC 0xE5 0x25 JUMPDEST 0xBF 0xD2 0xAB 0xDB RETURNDATACOPY 0x2B 0xC 0xC5 0xD SMOD 0x4E SWAP3 0xDA 0x2C 0xE1 0xDE EXTCODEHASH REVERT CHAINID EXTCODECOPY DUP15 0xDD BLOCKHASH RETURNDATASIZE DIV SLOAD 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5ece5255bbfd2abdb3e2b0cc50d074e92da2ce1de3ffd463c8edd403d04542364736f6c634300080d0033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065d129a5b03090ff6347f4692a7ce5a0ffa6e5b9b1c365d05392297b8969322d64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065d129a5b03090ff6347f4692a7ce5a0ffa6e5b9b1c365d05392297b8969322d64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xD129A5B03090 SELFDESTRUCT PUSH4 0x47F4692A PUSH29 0xE5A0FFA6E5B9B1C365D05392297B8969322D64736F6C634300080D0033 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065d129a5b03090ff6347f4692a7ce5a0ffa6e5b9b1c365d05392297b8969322d64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xD129A5B03090 SELFDESTRUCT PUSH4 0x47F4692A PUSH29 0xE5A0FFA6E5B9B1C365D05392297B8969322D64736F6C634300080D0033 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065d129a5b03090ff6347f4692a7ce5a0ffa6e5b9b1c365d05392297b8969322d64736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ico.sol": {
				"Amestarter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_IUSDT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_IDAZ",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_targetSale",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "icoAlert",
									"type": "string"
								}
							],
							"name": "ICOStartAlert",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTokenprice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "target",
									"type": "uint256"
								}
							],
							"name": "icoUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "latestPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BeginIDO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAZ",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StopIDO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimPurchasedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetSale",
									"type": "uint256"
								}
							],
							"name": "editIco",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "purchaseToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ico.sol\":1245:3419  contract Amestarter is ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ico.sol\":1857:2114  constructor(uint _tokenPrice, address _IUSDT, address _IDAZ, uint256 _targetSale){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1957:1967  msg.sender */\n  caller\n    /* \"contracts/ico.sol\":1949:1954  owner */\n  0x02\n  0x00\n    /* \"contracts/ico.sol\":1949:1967  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":2005:2013  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/ico.sol\":1991:2002  _tokenPrice */\n  dup5\n    /* \"contracts/ico.sol\":1991:2013  _tokenPrice * 10 ** 18 */\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/ico.sol\":1978:1988  tokenPrice */\n  0x01\n    /* \"contracts/ico.sol\":1978:2013  tokenPrice = _tokenPrice * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":2031:2037  _IUSDT */\n  dup3\n    /* \"contracts/ico.sol\":2024:2037  USDT = _IUSDT */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ico.sol\":2055:2060  _IDAZ */\n  dup2\n    /* \"contracts/ico.sol\":2048:2060  DAZ =  _IDAZ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ico.sol\":2098:2106  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/ico.sol\":2084:2095  _targetSale */\n  dup2\n    /* \"contracts/ico.sol\":2084:2106  _targetSale * 10 ** 18 */\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n    /* \"contracts/ico.sol\":2071:2081  targetSale */\n  0x03\n    /* \"contracts/ico.sol\":2071:2106  targetSale = _targetSale * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ico.sol\":1857:2114  constructor(uint _tokenPrice, address _IUSDT, address _IDAZ, uint256 _targetSale){... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ico.sol\":1245:3419  contract Amestarter is ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_16:\n    /* \"#utility.yul\":490:514   */\n  tag_29\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_30:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_17:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_32\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_16\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_18:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_19:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_35\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_18\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_20:\n    /* \"#utility.yul\":1001:1025   */\n  tag_37\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_19\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_38:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_21:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_40\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_43\n  tag_13\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1343:1463   */\ntag_42:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_44\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_17\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_45\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_46\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_21\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_47\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_17\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2211   */\ntag_22:\n    /* \"#utility.yul\":2079:2156   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2076:2077   */\n  0x00\n    /* \"#utility.yul\":2069:2157   */\n  mstore\n    /* \"#utility.yul\":2176:2180   */\n  0x11\n    /* \"#utility.yul\":2173:2174   */\n  0x04\n    /* \"#utility.yul\":2166:2181   */\n  mstore\n    /* \"#utility.yul\":2200:2204   */\n  0x24\n    /* \"#utility.yul\":2197:2198   */\n  0x00\n    /* \"#utility.yul\":2190:2205   */\n  revert\n    /* \"#utility.yul\":2217:2565   */\ntag_9:\n    /* \"#utility.yul\":2257:2264   */\n  0x00\n    /* \"#utility.yul\":2280:2300   */\n  tag_50\n    /* \"#utility.yul\":2298:2299   */\n  dup3\n    /* \"#utility.yul\":2280:2300   */\n  tag_15\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2275:2300   */\n  swap2\n  pop\n    /* \"#utility.yul\":2314:2334   */\n  tag_51\n    /* \"#utility.yul\":2332:2333   */\n  dup4\n    /* \"#utility.yul\":2314:2334   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2309:2334   */\n  swap3\n  pop\n    /* \"#utility.yul\":2502:2503   */\n  dup2\n    /* \"#utility.yul\":2434:2500   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2430:2504   */\n  div\n    /* \"#utility.yul\":2427:2428   */\n  dup4\n    /* \"#utility.yul\":2424:2505   */\n  gt\n    /* \"#utility.yul\":2419:2420   */\n  dup3\n    /* \"#utility.yul\":2412:2421   */\n  iszero\n    /* \"#utility.yul\":2405:2422   */\n  iszero\n    /* \"#utility.yul\":2401:2506   */\n  and\n    /* \"#utility.yul\":2398:2529   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2509:2527   */\n  tag_53\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2398:2529   */\ntag_52:\n    /* \"#utility.yul\":2557:2558   */\n  dup3\n    /* \"#utility.yul\":2554:2555   */\n  dup3\n    /* \"#utility.yul\":2550:2559   */\n  mul\n    /* \"#utility.yul\":2539:2559   */\n  swap1\n  pop\n    /* \"#utility.yul\":2217:2565   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ico.sol\":1245:3419  contract Amestarter is ReentrancyGuard {... */\ntag_11:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb2defa75886dc68fff8e07e15f8c710632f536eafc1958aaf9db286a05b10ca2\")\n  0x00\n  assignImmutable(\"0xc8a6f112e7620748ca3ae6a49a58464897133c24b6f43e9fa71155cd2626380a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ico.sol\":1245:3419  contract Amestarter is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc3a17441\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc3a17441\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd7997f7e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdc55920f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x6385f2fb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x76d812ea\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc2db2c42\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ico.sol\":1368:1396  address public immutable DAZ */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":3258:3408  function StopIDO() public {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/ico.sol\":1403:1425  uint public tokenPrice */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":2122:2624  function purchaseToken(uint _amount) external nonReentrant{... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/ico.sol\":2837:3096  function editIco(uint _tokenPrice, uint256 _targetSale) public{... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/ico.sol\":1332:1361  address public immutable USDT */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ico.sol\":2632:2829  function claimPurchasedToken() external nonReentrant {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/ico.sol\":3104:3250  function BeginIDO() public {... */\n    tag_10:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/ico.sol\":1368:1396  address public immutable DAZ */\n    tag_13:\n      immutable(\"0xb2defa75886dc68fff8e07e15f8c710632f536eafc1958aaf9db286a05b10ca2\")\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":3258:3408  function StopIDO() public {... */\n    tag_17:\n        /* \"contracts/ico.sol\":3317:3322  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":3303:3322  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":3303:3313  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":3303:3322  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ico.sol\":3295:3323  require(msg.sender == owner) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"contracts/ico.sol\":3349:3354  false */\n      0x00\n        /* \"contracts/ico.sol\":3336:3346  IDOStarted */\n      0x02\n      0x14\n        /* \"contracts/ico.sol\":3336:3354  IDOStarted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":3370:3400  ICOStartAlert(\"ICO is paused\") */\n      0x71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc\n      mload(0x40)\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ico.sol\":3258:3408  function StopIDO() public {... */\n      jump\t// out\n        /* \"contracts/ico.sol\":1403:1425  uint public tokenPrice */\n    tag_19:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":2122:2624  function purchaseToken(uint _amount) external nonReentrant{... */\n    tag_25:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2213:2217  true */\n      0x01\n        /* \"contracts/ico.sol\":2199:2217  IDOStarted == true */\n      iszero\n      iszero\n        /* \"contracts/ico.sol\":2199:2209  IDOStarted */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ico.sol\":2199:2217  IDOStarted == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ico.sol\":2191:2241  require(IDOStarted == true, \"IDO has not started\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/ico.sol\":2252:2265  uint256 value */\n      0x00\n        /* \"contracts/ico.sol\":2282:2289  _amount */\n      dup2\n        /* \"contracts/ico.sol\":2268:2279  totalRaised */\n      sload(0x04)\n        /* \"contracts/ico.sol\":2268:2289  totalRaised + _amount */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/ico.sol\":2252:2289  uint256 value = totalRaised + _amount */\n      swap1\n      pop\n        /* \"contracts/ico.sol\":2316:2326  targetSale */\n      sload(0x03)\n        /* \"contracts/ico.sol\":2308:2313  value */\n      dup2\n        /* \"contracts/ico.sol\":2308:2326  value < targetSale */\n      lt\n        /* \"contracts/ico.sol\":2300:2355  require(value < targetSale, \"All tokens has been sold\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/ico.sol\":2373:2377  USDT */\n      immutable(\"0xc8a6f112e7620748ca3ae6a49a58464897133c24b6f43e9fa71155cd2626380a\")\n        /* \"contracts/ico.sol\":2366:2386  IKRC20(USDT).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/ico.sol\":2395:2399  this */\n      address\n        /* \"contracts/ico.sol\":2402:2409  _amount */\n      dup5\n        /* \"contracts/ico.sol\":2366:2410  IKRC20(USDT).approve(address(this), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      pop\n        /* \"contracts/ico.sol\":2421:2486  IKRC20(USDT).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_60\n        /* \"contracts/ico.sol\":2451:2461  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":2471:2475  this */\n      address\n        /* \"contracts/ico.sol\":2478:2485  _amount */\n      dup5\n        /* \"contracts/ico.sol\":2428:2432  USDT */\n      immutable(\"0xc8a6f112e7620748ca3ae6a49a58464897133c24b6f43e9fa71155cd2626380a\")\n        /* \"contracts/ico.sol\":2421:2450  IKRC20(USDT).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_61\n      swap1\n        /* \"contracts/ico.sol\":2421:2486  IKRC20(USDT).safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"contracts/ico.sol\":2522:2529  _amount */\n      dup2\n        /* \"contracts/ico.sol\":2497:2505  purchase */\n      0x05\n        /* \"contracts/ico.sol\":2497:2517  purchase[msg.sender] */\n      0x00\n        /* \"contracts/ico.sol\":2506:2516  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":2497:2517  purchase[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ico.sol\":2497:2529  purchase[msg.sender]  += _amount */\n      dup3\n      dup3\n      sload\n      tag_62\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_62:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2555:2562  _amount */\n      dup2\n        /* \"contracts/ico.sol\":2540:2551  totalRaised */\n      0x04\n      0x00\n        /* \"contracts/ico.sol\":2540:2562  totalRaised += _amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2596:2606  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":2580:2616  latestPurchased(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xda4cadf0d4383cb43c8249e3cc678f6690bdbaa01421c99fd9b14edac62cde80\n        /* \"contracts/ico.sol\":2608:2615  _amount */\n      dup4\n        /* \"contracts/ico.sol\":2580:2616  latestPurchased(msg.sender, _amount) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ico.sol\":2180:2624  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2122:2624  function purchaseToken(uint _amount) external nonReentrant{... */\n      pop\n      jump\t// out\n        /* \"contracts/ico.sol\":2837:3096  function editIco(uint _tokenPrice, uint256 _targetSale) public{... */\n    tag_29:\n        /* \"contracts/ico.sol\":2932:2937  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":2918:2937  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":2918:2928  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":2918:2937  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ico.sol\":2910:2938  require(msg.sender == owner) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"contracts/ico.sol\":2978:2986  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ico.sol\":2964:2975  _tokenPrice */\n      dup3\n        /* \"contracts/ico.sol\":2964:2986  _tokenPrice * 10 ** 18 */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/ico.sol\":2951:2961  tokenPrice */\n      0x01\n        /* \"contracts/ico.sol\":2951:2986  tokenPrice = _tokenPrice * 10 ** 18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":3024:3032  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ico.sol\":3010:3021  _targetSale */\n      dup2\n        /* \"contracts/ico.sol\":3010:3032  _targetSale * 10 ** 18 */\n      tag_69\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_69:\n        /* \"contracts/ico.sol\":2997:3007  targetSale */\n      0x03\n        /* \"contracts/ico.sol\":2997:3032  targetSale = _targetSale * 10 ** 18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":3050:3086  icoUpdate( _tokenPrice, _targetSale) */\n      0x314bf1ccc32c608a6175053b0da1933b3a745b3f799011003a4c39aab0c518a3\n        /* \"contracts/ico.sol\":3061:3072  _tokenPrice */\n      dup3\n        /* \"contracts/ico.sol\":3074:3085  _targetSale */\n      dup3\n        /* \"contracts/ico.sol\":3050:3086  icoUpdate( _tokenPrice, _targetSale) */\n      mload(0x40)\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ico.sol\":2837:3096  function editIco(uint _tokenPrice, uint256 _targetSale) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ico.sol\":1332:1361  address public immutable USDT */\n    tag_31:\n      immutable(\"0xc8a6f112e7620748ca3ae6a49a58464897133c24b6f43e9fa71155cd2626380a\")\n      dup2\n      jump\t// out\n        /* \"contracts/ico.sol\":2632:2829  function claimPurchasedToken() external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2718:2723  false */\n      0x00\n        /* \"contracts/ico.sol\":2704:2723  IDOStarted == false */\n      iszero\n      iszero\n        /* \"contracts/ico.sol\":2704:2714  IDOStarted */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ico.sol\":2704:2723  IDOStarted == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/ico.sol\":2696:2765  require(IDOStarted == false, \"IDO Has  not ended, claim unavailable\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/ico.sol\":2807:2808  0 */\n      0x00\n        /* \"contracts/ico.sol\":2784:2792  purchase */\n      0x05\n        /* \"contracts/ico.sol\":2784:2804  purchase[msg.sender] */\n      0x00\n        /* \"contracts/ico.sol\":2793:2803  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":2784:2804  purchase[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ico.sol\":2784:2808  purchase[msg.sender] > 0 */\n      gt\n        /* \"contracts/ico.sol\":2776:2821  require(purchase[msg.sender] > 0, \"you did \") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":2632:2829  function claimPurchasedToken() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/ico.sol\":3104:3250  function BeginIDO() public {... */\n    tag_36:\n        /* \"contracts/ico.sol\":3164:3169  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":3150:3169  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ico.sol\":3150:3160  msg.sender */\n      caller\n        /* \"contracts/ico.sol\":3150:3169  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ico.sol\":3142:3170  require(msg.sender == owner) */\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n        /* \"contracts/ico.sol\":3196:3200  true */\n      0x01\n        /* \"contracts/ico.sol\":3183:3193  IDOStarted */\n      0x02\n      0x14\n        /* \"contracts/ico.sol\":3183:3200  IDOStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ico.sol\":3216:3242  ICOStartAlert(\"ICO is on\") */\n      0x71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc\n      mload(0x40)\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ico.sol\":3104:3250  function BeginIDO() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_88\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_93\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_115\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_114)\n    tag_115:\n      0x60\n      swap2\n      pop\n    tag_114:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_119)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_119:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_126:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_127:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_171\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_126\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_128:\n        /* \"#utility.yul\":328:352   */\n      tag_173\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_127\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_15:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_175\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_128\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_129:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_130:\n        /* \"#utility.yul\":763:787   */\n      tag_178\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_129\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_21:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_180\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_130\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_132:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_134:\n        /* \"#utility.yul\":1428:1452   */\n      tag_185\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_129\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_186:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_135:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_188\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_134\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_24:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_191\n      tag_132\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1704:1823   */\n    tag_190:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_192\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_135\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2437   */\n    tag_28:\n        /* \"#utility.yul\":2031:2037   */\n      0x00\n        /* \"#utility.yul\":2039:2045   */\n      dup1\n        /* \"#utility.yul\":2088:2090   */\n      0x40\n        /* \"#utility.yul\":2076:2085   */\n      dup4\n        /* \"#utility.yul\":2067:2074   */\n      dup6\n        /* \"#utility.yul\":2063:2086   */\n      sub\n        /* \"#utility.yul\":2059:2091   */\n      slt\n        /* \"#utility.yul\":2056:2175   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2094:2173   */\n      tag_195\n      tag_132\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2056:2175   */\n    tag_194:\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2239:2292   */\n      tag_196\n        /* \"#utility.yul\":2284:2291   */\n      dup6\n        /* \"#utility.yul\":2275:2281   */\n      dup3\n        /* \"#utility.yul\":2264:2273   */\n      dup7\n        /* \"#utility.yul\":2260:2282   */\n      add\n        /* \"#utility.yul\":2239:2292   */\n      tag_135\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2229:2292   */\n      swap3\n      pop\n        /* \"#utility.yul\":2185:2302   */\n      pop\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2367:2420   */\n      tag_197\n        /* \"#utility.yul\":2412:2419   */\n      dup6\n        /* \"#utility.yul\":2403:2409   */\n      dup3\n        /* \"#utility.yul\":2392:2401   */\n      dup7\n        /* \"#utility.yul\":2388:2410   */\n      add\n        /* \"#utility.yul\":2367:2420   */\n      tag_135\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2357:2420   */\n      swap2\n      pop\n        /* \"#utility.yul\":2312:2430   */\n      pop\n        /* \"#utility.yul\":1963:2437   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2612   */\n    tag_136:\n        /* \"#utility.yul\":2527:2538   */\n      0x00\n        /* \"#utility.yul\":2561:2567   */\n      dup3\n        /* \"#utility.yul\":2556:2559   */\n      dup3\n        /* \"#utility.yul\":2549:2568   */\n      mstore\n        /* \"#utility.yul\":2601:2605   */\n      0x20\n        /* \"#utility.yul\":2596:2599   */\n      dup3\n        /* \"#utility.yul\":2592:2606   */\n      add\n        /* \"#utility.yul\":2577:2606   */\n      swap1\n      pop\n        /* \"#utility.yul\":2443:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2781   */\n    tag_137:\n        /* \"#utility.yul\":2758:2773   */\n      0x49434f2069732070617573656400000000000000000000000000000000000000\n        /* \"#utility.yul\":2754:2755   */\n      0x00\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2742:2756   */\n      add\n        /* \"#utility.yul\":2735:2774   */\n      mstore\n        /* \"#utility.yul\":2618:2781   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2787:3153   */\n    tag_138:\n        /* \"#utility.yul\":2929:2932   */\n      0x00\n        /* \"#utility.yul\":2950:3017   */\n      tag_201\n        /* \"#utility.yul\":3014:3016   */\n      0x0d\n        /* \"#utility.yul\":3009:3012   */\n      dup4\n        /* \"#utility.yul\":2950:3017   */\n      tag_136\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2943:3017   */\n      swap2\n      pop\n        /* \"#utility.yul\":3026:3119   */\n      tag_202\n        /* \"#utility.yul\":3115:3118   */\n      dup3\n        /* \"#utility.yul\":3026:3119   */\n      tag_137\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3144:3146   */\n      0x20\n        /* \"#utility.yul\":3139:3142   */\n      dup3\n        /* \"#utility.yul\":3135:3147   */\n      add\n        /* \"#utility.yul\":3128:3147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2787:3153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3578   */\n    tag_40:\n        /* \"#utility.yul\":3325:3329   */\n      0x00\n        /* \"#utility.yul\":3363:3365   */\n      0x20\n        /* \"#utility.yul\":3352:3361   */\n      dup3\n        /* \"#utility.yul\":3348:3366   */\n      add\n        /* \"#utility.yul\":3340:3366   */\n      swap1\n      pop\n        /* \"#utility.yul\":3412:3421   */\n      dup2\n        /* \"#utility.yul\":3406:3410   */\n      dup2\n        /* \"#utility.yul\":3402:3422   */\n      sub\n        /* \"#utility.yul\":3398:3399   */\n      0x00\n        /* \"#utility.yul\":3387:3396   */\n      dup4\n        /* \"#utility.yul\":3383:3400   */\n      add\n        /* \"#utility.yul\":3376:3423   */\n      mstore\n        /* \"#utility.yul\":3440:3571   */\n      tag_204\n        /* \"#utility.yul\":3566:3570   */\n      dup2\n        /* \"#utility.yul\":3440:3571   */\n      tag_138\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3432:3571   */\n      swap1\n      pop\n        /* \"#utility.yul\":3159:3578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:3765   */\n    tag_139:\n        /* \"#utility.yul\":3724:3757   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3720:3721   */\n      0x00\n        /* \"#utility.yul\":3712:3718   */\n      dup3\n        /* \"#utility.yul\":3708:3722   */\n      add\n        /* \"#utility.yul\":3701:3758   */\n      mstore\n        /* \"#utility.yul\":3584:3765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4137   */\n    tag_140:\n        /* \"#utility.yul\":3913:3916   */\n      0x00\n        /* \"#utility.yul\":3934:4001   */\n      tag_207\n        /* \"#utility.yul\":3998:4000   */\n      0x1f\n        /* \"#utility.yul\":3993:3996   */\n      dup4\n        /* \"#utility.yul\":3934:4001   */\n      tag_136\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3927:4001   */\n      swap2\n      pop\n        /* \"#utility.yul\":4010:4103   */\n      tag_208\n        /* \"#utility.yul\":4099:4102   */\n      dup3\n        /* \"#utility.yul\":4010:4103   */\n      tag_139\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4128:4130   */\n      0x20\n        /* \"#utility.yul\":4123:4126   */\n      dup3\n        /* \"#utility.yul\":4119:4131   */\n      add\n        /* \"#utility.yul\":4112:4131   */\n      swap1\n      pop\n        /* \"#utility.yul\":3771:4137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4143:4562   */\n    tag_44:\n        /* \"#utility.yul\":4309:4313   */\n      0x00\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4336:4345   */\n      dup3\n        /* \"#utility.yul\":4332:4350   */\n      add\n        /* \"#utility.yul\":4324:4350   */\n      swap1\n      pop\n        /* \"#utility.yul\":4396:4405   */\n      dup2\n        /* \"#utility.yul\":4390:4394   */\n      dup2\n        /* \"#utility.yul\":4386:4406   */\n      sub\n        /* \"#utility.yul\":4382:4383   */\n      0x00\n        /* \"#utility.yul\":4371:4380   */\n      dup4\n        /* \"#utility.yul\":4367:4384   */\n      add\n        /* \"#utility.yul\":4360:4407   */\n      mstore\n        /* \"#utility.yul\":4424:4555   */\n      tag_210\n        /* \"#utility.yul\":4550:4554   */\n      dup2\n        /* \"#utility.yul\":4424:4555   */\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4416:4555   */\n      swap1\n      pop\n        /* \"#utility.yul\":4143:4562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4568:4737   */\n    tag_141:\n        /* \"#utility.yul\":4708:4729   */\n      0x49444f20686173206e6f74207374617274656400000000000000000000000000\n        /* \"#utility.yul\":4704:4705   */\n      0x00\n        /* \"#utility.yul\":4696:4702   */\n      dup3\n        /* \"#utility.yul\":4692:4706   */\n      add\n        /* \"#utility.yul\":4685:4730   */\n      mstore\n        /* \"#utility.yul\":4568:4737   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:5109   */\n    tag_142:\n        /* \"#utility.yul\":4885:4888   */\n      0x00\n        /* \"#utility.yul\":4906:4973   */\n      tag_213\n        /* \"#utility.yul\":4970:4972   */\n      0x13\n        /* \"#utility.yul\":4965:4968   */\n      dup4\n        /* \"#utility.yul\":4906:4973   */\n      tag_136\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4899:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4982:5075   */\n      tag_214\n        /* \"#utility.yul\":5071:5074   */\n      dup3\n        /* \"#utility.yul\":4982:5075   */\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5100:5102   */\n      0x20\n        /* \"#utility.yul\":5095:5098   */\n      dup3\n        /* \"#utility.yul\":5091:5103   */\n      add\n        /* \"#utility.yul\":5084:5103   */\n      swap1\n      pop\n        /* \"#utility.yul\":4743:5109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5115:5534   */\n    tag_48:\n        /* \"#utility.yul\":5281:5285   */\n      0x00\n        /* \"#utility.yul\":5319:5321   */\n      0x20\n        /* \"#utility.yul\":5308:5317   */\n      dup3\n        /* \"#utility.yul\":5304:5322   */\n      add\n        /* \"#utility.yul\":5296:5322   */\n      swap1\n      pop\n        /* \"#utility.yul\":5368:5377   */\n      dup2\n        /* \"#utility.yul\":5362:5366   */\n      dup2\n        /* \"#utility.yul\":5358:5378   */\n      sub\n        /* \"#utility.yul\":5354:5355   */\n      0x00\n        /* \"#utility.yul\":5343:5352   */\n      dup4\n        /* \"#utility.yul\":5339:5356   */\n      add\n        /* \"#utility.yul\":5332:5379   */\n      mstore\n        /* \"#utility.yul\":5396:5527   */\n      tag_216\n        /* \"#utility.yul\":5522:5526   */\n      dup2\n        /* \"#utility.yul\":5396:5527   */\n      tag_142\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5388:5527   */\n      swap1\n      pop\n        /* \"#utility.yul\":5115:5534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5720   */\n    tag_143:\n        /* \"#utility.yul\":5588:5665   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5585:5586   */\n      0x00\n        /* \"#utility.yul\":5578:5666   */\n      mstore\n        /* \"#utility.yul\":5685:5689   */\n      0x11\n        /* \"#utility.yul\":5682:5683   */\n      0x04\n        /* \"#utility.yul\":5675:5690   */\n      mstore\n        /* \"#utility.yul\":5709:5713   */\n      0x24\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5699:5714   */\n      revert\n        /* \"#utility.yul\":5726:6031   */\n    tag_50:\n        /* \"#utility.yul\":5766:5769   */\n      0x00\n        /* \"#utility.yul\":5785:5805   */\n      tag_219\n        /* \"#utility.yul\":5803:5804   */\n      dup3\n        /* \"#utility.yul\":5785:5805   */\n      tag_129\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5780:5805   */\n      swap2\n      pop\n        /* \"#utility.yul\":5819:5839   */\n      tag_220\n        /* \"#utility.yul\":5837:5838   */\n      dup4\n        /* \"#utility.yul\":5819:5839   */\n      tag_129\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5814:5839   */\n      swap3\n      pop\n        /* \"#utility.yul\":5973:5974   */\n      dup3\n        /* \"#utility.yul\":5905:5971   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5901:5975   */\n      sub\n        /* \"#utility.yul\":5898:5899   */\n      dup3\n        /* \"#utility.yul\":5895:5976   */\n      gt\n        /* \"#utility.yul\":5892:5999   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":5979:5997   */\n      tag_222\n      tag_143\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5892:5999   */\n    tag_221:\n        /* \"#utility.yul\":6023:6024   */\n      dup3\n        /* \"#utility.yul\":6020:6021   */\n      dup3\n        /* \"#utility.yul\":6016:6025   */\n      add\n        /* \"#utility.yul\":6009:6025   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:6031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6037:6211   */\n    tag_144:\n        /* \"#utility.yul\":6177:6203   */\n      0x416c6c20746f6b656e7320686173206265656e20736f6c640000000000000000\n        /* \"#utility.yul\":6173:6174   */\n      0x00\n        /* \"#utility.yul\":6165:6171   */\n      dup3\n        /* \"#utility.yul\":6161:6175   */\n      add\n        /* \"#utility.yul\":6154:6204   */\n      mstore\n        /* \"#utility.yul\":6037:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6583   */\n    tag_145:\n        /* \"#utility.yul\":6359:6362   */\n      0x00\n        /* \"#utility.yul\":6380:6447   */\n      tag_225\n        /* \"#utility.yul\":6444:6446   */\n      0x18\n        /* \"#utility.yul\":6439:6442   */\n      dup4\n        /* \"#utility.yul\":6380:6447   */\n      tag_136\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6373:6447   */\n      swap2\n      pop\n        /* \"#utility.yul\":6456:6549   */\n      tag_226\n        /* \"#utility.yul\":6545:6548   */\n      dup3\n        /* \"#utility.yul\":6456:6549   */\n      tag_144\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6574:6576   */\n      0x20\n        /* \"#utility.yul\":6569:6572   */\n      dup3\n        /* \"#utility.yul\":6565:6577   */\n      add\n        /* \"#utility.yul\":6558:6577   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6589:7008   */\n    tag_53:\n        /* \"#utility.yul\":6755:6759   */\n      0x00\n        /* \"#utility.yul\":6793:6795   */\n      0x20\n        /* \"#utility.yul\":6782:6791   */\n      dup3\n        /* \"#utility.yul\":6778:6796   */\n      add\n        /* \"#utility.yul\":6770:6796   */\n      swap1\n      pop\n        /* \"#utility.yul\":6842:6851   */\n      dup2\n        /* \"#utility.yul\":6836:6840   */\n      dup2\n        /* \"#utility.yul\":6832:6852   */\n      sub\n        /* \"#utility.yul\":6828:6829   */\n      0x00\n        /* \"#utility.yul\":6817:6826   */\n      dup4\n        /* \"#utility.yul\":6813:6830   */\n      add\n        /* \"#utility.yul\":6806:6853   */\n      mstore\n        /* \"#utility.yul\":6870:7001   */\n      tag_228\n        /* \"#utility.yul\":6996:7000   */\n      dup2\n        /* \"#utility.yul\":6870:7001   */\n      tag_145\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6862:7001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6589:7008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7014:7346   */\n    tag_55:\n        /* \"#utility.yul\":7135:7139   */\n      0x00\n        /* \"#utility.yul\":7173:7175   */\n      0x40\n        /* \"#utility.yul\":7162:7171   */\n      dup3\n        /* \"#utility.yul\":7158:7176   */\n      add\n        /* \"#utility.yul\":7150:7176   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7257   */\n      tag_230\n        /* \"#utility.yul\":7254:7255   */\n      0x00\n        /* \"#utility.yul\":7243:7252   */\n      dup4\n        /* \"#utility.yul\":7239:7256   */\n      add\n        /* \"#utility.yul\":7230:7236   */\n      dup6\n        /* \"#utility.yul\":7186:7257   */\n      tag_128\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7267:7339   */\n      tag_231\n        /* \"#utility.yul\":7335:7337   */\n      0x20\n        /* \"#utility.yul\":7324:7333   */\n      dup4\n        /* \"#utility.yul\":7320:7338   */\n      add\n        /* \"#utility.yul\":7311:7317   */\n      dup5\n        /* \"#utility.yul\":7267:7339   */\n      tag_130\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7014:7346   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7352:7442   */\n    tag_146:\n        /* \"#utility.yul\":7386:7393   */\n      0x00\n        /* \"#utility.yul\":7429:7434   */\n      dup2\n        /* \"#utility.yul\":7422:7435   */\n      iszero\n        /* \"#utility.yul\":7415:7436   */\n      iszero\n        /* \"#utility.yul\":7404:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7352:7442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7448:7564   */\n    tag_147:\n        /* \"#utility.yul\":7518:7539   */\n      tag_234\n        /* \"#utility.yul\":7533:7538   */\n      dup2\n        /* \"#utility.yul\":7518:7539   */\n      tag_146\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7511:7516   */\n      dup2\n        /* \"#utility.yul\":7508:7540   */\n      eq\n        /* \"#utility.yul\":7498:7558   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7551:7552   */\n      dup1\n        /* \"#utility.yul\":7544:7556   */\n      revert\n        /* \"#utility.yul\":7498:7558   */\n    tag_235:\n        /* \"#utility.yul\":7448:7564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7570:7707   */\n    tag_148:\n        /* \"#utility.yul\":7624:7629   */\n      0x00\n        /* \"#utility.yul\":7655:7661   */\n      dup2\n        /* \"#utility.yul\":7649:7662   */\n      mload\n        /* \"#utility.yul\":7640:7662   */\n      swap1\n      pop\n        /* \"#utility.yul\":7671:7701   */\n      tag_237\n        /* \"#utility.yul\":7695:7700   */\n      dup2\n        /* \"#utility.yul\":7671:7701   */\n      tag_147\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7570:7707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:8058   */\n    tag_59:\n        /* \"#utility.yul\":7780:7786   */\n      0x00\n        /* \"#utility.yul\":7829:7831   */\n      0x20\n        /* \"#utility.yul\":7817:7826   */\n      dup3\n        /* \"#utility.yul\":7808:7815   */\n      dup5\n        /* \"#utility.yul\":7804:7827   */\n      sub\n        /* \"#utility.yul\":7800:7832   */\n      slt\n        /* \"#utility.yul\":7797:7916   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7835:7914   */\n      tag_240\n      tag_132\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7797:7916   */\n    tag_239:\n        /* \"#utility.yul\":7955:7956   */\n      0x00\n        /* \"#utility.yul\":7980:8041   */\n      tag_241\n        /* \"#utility.yul\":8033:8040   */\n      dup5\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8013:8022   */\n      dup6\n        /* \"#utility.yul\":8009:8031   */\n      add\n        /* \"#utility.yul\":7980:8041   */\n      tag_148\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7970:8041   */\n      swap2\n      pop\n        /* \"#utility.yul\":7926:8051   */\n      pop\n        /* \"#utility.yul\":7713:8058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8064:8412   */\n    tag_68:\n        /* \"#utility.yul\":8104:8111   */\n      0x00\n        /* \"#utility.yul\":8127:8147   */\n      tag_243\n        /* \"#utility.yul\":8145:8146   */\n      dup3\n        /* \"#utility.yul\":8127:8147   */\n      tag_129\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8122:8147   */\n      swap2\n      pop\n        /* \"#utility.yul\":8161:8181   */\n      tag_244\n        /* \"#utility.yul\":8179:8180   */\n      dup4\n        /* \"#utility.yul\":8161:8181   */\n      tag_129\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8156:8181   */\n      swap3\n      pop\n        /* \"#utility.yul\":8349:8350   */\n      dup2\n        /* \"#utility.yul\":8281:8347   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8277:8351   */\n      div\n        /* \"#utility.yul\":8274:8275   */\n      dup4\n        /* \"#utility.yul\":8271:8352   */\n      gt\n        /* \"#utility.yul\":8266:8267   */\n      dup3\n        /* \"#utility.yul\":8259:8268   */\n      iszero\n        /* \"#utility.yul\":8252:8269   */\n      iszero\n        /* \"#utility.yul\":8248:8353   */\n      and\n        /* \"#utility.yul\":8245:8376   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8356:8374   */\n      tag_246\n      tag_143\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8245:8376   */\n    tag_245:\n        /* \"#utility.yul\":8404:8405   */\n      dup3\n        /* \"#utility.yul\":8401:8402   */\n      dup3\n        /* \"#utility.yul\":8397:8406   */\n      mul\n        /* \"#utility.yul\":8386:8406   */\n      swap1\n      pop\n        /* \"#utility.yul\":8064:8412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8418:8750   */\n    tag_71:\n        /* \"#utility.yul\":8539:8543   */\n      0x00\n        /* \"#utility.yul\":8577:8579   */\n      0x40\n        /* \"#utility.yul\":8566:8575   */\n      dup3\n        /* \"#utility.yul\":8562:8580   */\n      add\n        /* \"#utility.yul\":8554:8580   */\n      swap1\n      pop\n        /* \"#utility.yul\":8590:8661   */\n      tag_248\n        /* \"#utility.yul\":8658:8659   */\n      0x00\n        /* \"#utility.yul\":8647:8656   */\n      dup4\n        /* \"#utility.yul\":8643:8660   */\n      add\n        /* \"#utility.yul\":8634:8640   */\n      dup6\n        /* \"#utility.yul\":8590:8661   */\n      tag_130\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8671:8743   */\n      tag_249\n        /* \"#utility.yul\":8739:8741   */\n      0x20\n        /* \"#utility.yul\":8728:8737   */\n      dup4\n        /* \"#utility.yul\":8724:8742   */\n      add\n        /* \"#utility.yul\":8715:8721   */\n      dup5\n        /* \"#utility.yul\":8671:8743   */\n      tag_130\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8418:8750   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8756:8980   */\n    tag_149:\n        /* \"#utility.yul\":8896:8930   */\n      0x49444f2048617320206e6f7420656e6465642c20636c61696d20756e61766169\n        /* \"#utility.yul\":8892:8893   */\n      0x00\n        /* \"#utility.yul\":8884:8890   */\n      dup3\n        /* \"#utility.yul\":8880:8894   */\n      add\n        /* \"#utility.yul\":8873:8931   */\n      mstore\n        /* \"#utility.yul\":8965:8972   */\n      0x6c61626c65000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8960:8962   */\n      0x20\n        /* \"#utility.yul\":8952:8958   */\n      dup3\n        /* \"#utility.yul\":8948:8963   */\n      add\n        /* \"#utility.yul\":8941:8973   */\n      mstore\n        /* \"#utility.yul\":8756:8980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8986:9352   */\n    tag_150:\n        /* \"#utility.yul\":9128:9131   */\n      0x00\n        /* \"#utility.yul\":9149:9216   */\n      tag_252\n        /* \"#utility.yul\":9213:9215   */\n      0x25\n        /* \"#utility.yul\":9208:9211   */\n      dup4\n        /* \"#utility.yul\":9149:9216   */\n      tag_136\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9142:9216   */\n      swap2\n      pop\n        /* \"#utility.yul\":9225:9318   */\n      tag_253\n        /* \"#utility.yul\":9314:9317   */\n      dup3\n        /* \"#utility.yul\":9225:9318   */\n      tag_149\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9343:9345   */\n      0x40\n        /* \"#utility.yul\":9338:9341   */\n      dup3\n        /* \"#utility.yul\":9334:9346   */\n      add\n        /* \"#utility.yul\":9327:9346   */\n      swap1\n      pop\n        /* \"#utility.yul\":8986:9352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9358:9777   */\n    tag_78:\n        /* \"#utility.yul\":9524:9528   */\n      0x00\n        /* \"#utility.yul\":9562:9564   */\n      0x20\n        /* \"#utility.yul\":9551:9560   */\n      dup3\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9539:9565   */\n      swap1\n      pop\n        /* \"#utility.yul\":9611:9620   */\n      dup2\n        /* \"#utility.yul\":9605:9609   */\n      dup2\n        /* \"#utility.yul\":9601:9621   */\n      sub\n        /* \"#utility.yul\":9597:9598   */\n      0x00\n        /* \"#utility.yul\":9586:9595   */\n      dup4\n        /* \"#utility.yul\":9582:9599   */\n      add\n        /* \"#utility.yul\":9575:9622   */\n      mstore\n        /* \"#utility.yul\":9639:9770   */\n      tag_255\n        /* \"#utility.yul\":9765:9769   */\n      dup2\n        /* \"#utility.yul\":9639:9770   */\n      tag_150\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9631:9770   */\n      swap1\n      pop\n        /* \"#utility.yul\":9358:9777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9783:9941   */\n    tag_151:\n        /* \"#utility.yul\":9923:9933   */\n      0x796f752064696420000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9919:9920   */\n      0x00\n        /* \"#utility.yul\":9911:9917   */\n      dup3\n        /* \"#utility.yul\":9907:9921   */\n      add\n        /* \"#utility.yul\":9900:9934   */\n      mstore\n        /* \"#utility.yul\":9783:9941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9947:10312   */\n    tag_152:\n        /* \"#utility.yul\":10089:10092   */\n      0x00\n        /* \"#utility.yul\":10110:10176   */\n      tag_258\n        /* \"#utility.yul\":10174:10175   */\n      0x08\n        /* \"#utility.yul\":10169:10172   */\n      dup4\n        /* \"#utility.yul\":10110:10176   */\n      tag_136\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10103:10176   */\n      swap2\n      pop\n        /* \"#utility.yul\":10185:10278   */\n      tag_259\n        /* \"#utility.yul\":10274:10277   */\n      dup3\n        /* \"#utility.yul\":10185:10278   */\n      tag_151\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10303:10305   */\n      0x20\n        /* \"#utility.yul\":10298:10301   */\n      dup3\n        /* \"#utility.yul\":10294:10306   */\n      add\n        /* \"#utility.yul\":10287:10306   */\n      swap1\n      pop\n        /* \"#utility.yul\":9947:10312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10737   */\n    tag_81:\n        /* \"#utility.yul\":10484:10488   */\n      0x00\n        /* \"#utility.yul\":10522:10524   */\n      0x20\n        /* \"#utility.yul\":10511:10520   */\n      dup3\n        /* \"#utility.yul\":10507:10525   */\n      add\n        /* \"#utility.yul\":10499:10525   */\n      swap1\n      pop\n        /* \"#utility.yul\":10571:10580   */\n      dup2\n        /* \"#utility.yul\":10565:10569   */\n      dup2\n        /* \"#utility.yul\":10561:10581   */\n      sub\n        /* \"#utility.yul\":10557:10558   */\n      0x00\n        /* \"#utility.yul\":10546:10555   */\n      dup4\n        /* \"#utility.yul\":10542:10559   */\n      add\n        /* \"#utility.yul\":10535:10582   */\n      mstore\n        /* \"#utility.yul\":10599:10730   */\n      tag_261\n        /* \"#utility.yul\":10725:10729   */\n      dup2\n        /* \"#utility.yul\":10599:10730   */\n      tag_152\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10591:10730   */\n      swap1\n      pop\n        /* \"#utility.yul\":10318:10737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10743:10902   */\n    tag_153:\n        /* \"#utility.yul\":10883:10894   */\n      0x49434f206973206f6e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10871:10877   */\n      dup3\n        /* \"#utility.yul\":10867:10881   */\n      add\n        /* \"#utility.yul\":10860:10895   */\n      mstore\n        /* \"#utility.yul\":10743:10902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10908:11273   */\n    tag_154:\n        /* \"#utility.yul\":11050:11053   */\n      0x00\n        /* \"#utility.yul\":11071:11137   */\n      tag_264\n        /* \"#utility.yul\":11135:11136   */\n      0x09\n        /* \"#utility.yul\":11130:11133   */\n      dup4\n        /* \"#utility.yul\":11071:11137   */\n      tag_136\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11064:11137   */\n      swap2\n      pop\n        /* \"#utility.yul\":11146:11239   */\n      tag_265\n        /* \"#utility.yul\":11235:11238   */\n      dup3\n        /* \"#utility.yul\":11146:11239   */\n      tag_153\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":11264:11266   */\n      0x20\n        /* \"#utility.yul\":11259:11262   */\n      dup3\n        /* \"#utility.yul\":11255:11267   */\n      add\n        /* \"#utility.yul\":11248:11267   */\n      swap1\n      pop\n        /* \"#utility.yul\":10908:11273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11279:11698   */\n    tag_85:\n        /* \"#utility.yul\":11445:11449   */\n      0x00\n        /* \"#utility.yul\":11483:11485   */\n      0x20\n        /* \"#utility.yul\":11472:11481   */\n      dup3\n        /* \"#utility.yul\":11468:11486   */\n      add\n        /* \"#utility.yul\":11460:11486   */\n      swap1\n      pop\n        /* \"#utility.yul\":11532:11541   */\n      dup2\n        /* \"#utility.yul\":11526:11530   */\n      dup2\n        /* \"#utility.yul\":11522:11542   */\n      sub\n        /* \"#utility.yul\":11518:11519   */\n      0x00\n        /* \"#utility.yul\":11507:11516   */\n      dup4\n        /* \"#utility.yul\":11503:11520   */\n      add\n        /* \"#utility.yul\":11496:11543   */\n      mstore\n        /* \"#utility.yul\":11560:11691   */\n      tag_267\n        /* \"#utility.yul\":11686:11690   */\n      dup2\n        /* \"#utility.yul\":11560:11691   */\n      tag_154\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":11552:11691   */\n      swap1\n      pop\n        /* \"#utility.yul\":11279:11698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11704:12146   */\n    tag_89:\n        /* \"#utility.yul\":11853:11857   */\n      0x00\n        /* \"#utility.yul\":11891:11893   */\n      0x60\n        /* \"#utility.yul\":11880:11889   */\n      dup3\n        /* \"#utility.yul\":11876:11894   */\n      add\n        /* \"#utility.yul\":11868:11894   */\n      swap1\n      pop\n        /* \"#utility.yul\":11904:11975   */\n      tag_269\n        /* \"#utility.yul\":11972:11973   */\n      0x00\n        /* \"#utility.yul\":11961:11970   */\n      dup4\n        /* \"#utility.yul\":11957:11974   */\n      add\n        /* \"#utility.yul\":11948:11954   */\n      dup7\n        /* \"#utility.yul\":11904:11975   */\n      tag_128\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":11985:12057   */\n      tag_270\n        /* \"#utility.yul\":12053:12055   */\n      0x20\n        /* \"#utility.yul\":12042:12051   */\n      dup4\n        /* \"#utility.yul\":12038:12056   */\n      add\n        /* \"#utility.yul\":12029:12035   */\n      dup6\n        /* \"#utility.yul\":11985:12057   */\n      tag_128\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":12067:12139   */\n      tag_271\n        /* \"#utility.yul\":12135:12137   */\n      0x40\n        /* \"#utility.yul\":12124:12133   */\n      dup4\n        /* \"#utility.yul\":12120:12138   */\n      add\n        /* \"#utility.yul\":12111:12117   */\n      dup5\n        /* \"#utility.yul\":12067:12139   */\n      tag_130\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11704:12146   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12152:12381   */\n    tag_155:\n        /* \"#utility.yul\":12292:12326   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":12288:12289   */\n      0x00\n        /* \"#utility.yul\":12280:12286   */\n      dup3\n        /* \"#utility.yul\":12276:12290   */\n      add\n        /* \"#utility.yul\":12269:12327   */\n      mstore\n        /* \"#utility.yul\":12361:12373   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12356:12358   */\n      0x20\n        /* \"#utility.yul\":12348:12354   */\n      dup3\n        /* \"#utility.yul\":12344:12359   */\n      add\n        /* \"#utility.yul\":12337:12374   */\n      mstore\n        /* \"#utility.yul\":12152:12381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:12753   */\n    tag_156:\n        /* \"#utility.yul\":12529:12532   */\n      0x00\n        /* \"#utility.yul\":12550:12617   */\n      tag_274\n        /* \"#utility.yul\":12614:12616   */\n      0x2a\n        /* \"#utility.yul\":12609:12612   */\n      dup4\n        /* \"#utility.yul\":12550:12617   */\n      tag_136\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":12543:12617   */\n      swap2\n      pop\n        /* \"#utility.yul\":12626:12719   */\n      tag_275\n        /* \"#utility.yul\":12715:12718   */\n      dup3\n        /* \"#utility.yul\":12626:12719   */\n      tag_155\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":12744:12746   */\n      0x40\n        /* \"#utility.yul\":12739:12742   */\n      dup3\n        /* \"#utility.yul\":12735:12747   */\n      add\n        /* \"#utility.yul\":12728:12747   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12759:13178   */\n    tag_98:\n        /* \"#utility.yul\":12925:12929   */\n      0x00\n        /* \"#utility.yul\":12963:12965   */\n      0x20\n        /* \"#utility.yul\":12952:12961   */\n      dup3\n        /* \"#utility.yul\":12948:12966   */\n      add\n        /* \"#utility.yul\":12940:12966   */\n      swap1\n      pop\n        /* \"#utility.yul\":13012:13021   */\n      dup2\n        /* \"#utility.yul\":13006:13010   */\n      dup2\n        /* \"#utility.yul\":13002:13022   */\n      sub\n        /* \"#utility.yul\":12998:12999   */\n      0x00\n        /* \"#utility.yul\":12987:12996   */\n      dup4\n        /* \"#utility.yul\":12983:13000   */\n      add\n        /* \"#utility.yul\":12976:13023   */\n      mstore\n        /* \"#utility.yul\":13040:13171   */\n      tag_277\n        /* \"#utility.yul\":13166:13170   */\n      dup2\n        /* \"#utility.yul\":13040:13171   */\n      tag_156\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":13032:13171   */\n      swap1\n      pop\n        /* \"#utility.yul\":12759:13178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13184:13409   */\n    tag_157:\n        /* \"#utility.yul\":13324:13358   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13320:13321   */\n      0x00\n        /* \"#utility.yul\":13312:13318   */\n      dup3\n        /* \"#utility.yul\":13308:13322   */\n      add\n        /* \"#utility.yul\":13301:13359   */\n      mstore\n        /* \"#utility.yul\":13393:13401   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13388:13390   */\n      0x20\n        /* \"#utility.yul\":13380:13386   */\n      dup3\n        /* \"#utility.yul\":13376:13391   */\n      add\n        /* \"#utility.yul\":13369:13402   */\n      mstore\n        /* \"#utility.yul\":13184:13409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13415:13781   */\n    tag_158:\n        /* \"#utility.yul\":13557:13560   */\n      0x00\n        /* \"#utility.yul\":13578:13645   */\n      tag_280\n        /* \"#utility.yul\":13642:13644   */\n      0x26\n        /* \"#utility.yul\":13637:13640   */\n      dup4\n        /* \"#utility.yul\":13578:13645   */\n      tag_136\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":13571:13645   */\n      swap2\n      pop\n        /* \"#utility.yul\":13654:13747   */\n      tag_281\n        /* \"#utility.yul\":13743:13746   */\n      dup3\n        /* \"#utility.yul\":13654:13747   */\n      tag_157\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":13772:13774   */\n      0x40\n        /* \"#utility.yul\":13767:13770   */\n      dup3\n        /* \"#utility.yul\":13763:13775   */\n      add\n        /* \"#utility.yul\":13756:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13415:13781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13787:14206   */\n    tag_105:\n        /* \"#utility.yul\":13953:13957   */\n      0x00\n        /* \"#utility.yul\":13991:13993   */\n      0x20\n        /* \"#utility.yul\":13980:13989   */\n      dup3\n        /* \"#utility.yul\":13976:13994   */\n      add\n        /* \"#utility.yul\":13968:13994   */\n      swap1\n      pop\n        /* \"#utility.yul\":14040:14049   */\n      dup2\n        /* \"#utility.yul\":14034:14038   */\n      dup2\n        /* \"#utility.yul\":14030:14050   */\n      sub\n        /* \"#utility.yul\":14026:14027   */\n      0x00\n        /* \"#utility.yul\":14015:14024   */\n      dup4\n        /* \"#utility.yul\":14011:14028   */\n      add\n        /* \"#utility.yul\":14004:14051   */\n      mstore\n        /* \"#utility.yul\":14068:14199   */\n      tag_283\n        /* \"#utility.yul\":14194:14198   */\n      dup2\n        /* \"#utility.yul\":14068:14199   */\n      tag_158\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":14060:14199   */\n      swap1\n      pop\n        /* \"#utility.yul\":13787:14206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14212:14391   */\n    tag_159:\n        /* \"#utility.yul\":14352:14383   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14348:14349   */\n      0x00\n        /* \"#utility.yul\":14340:14346   */\n      dup3\n        /* \"#utility.yul\":14336:14350   */\n      add\n        /* \"#utility.yul\":14329:14384   */\n      mstore\n        /* \"#utility.yul\":14212:14391   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14397:14763   */\n    tag_160:\n        /* \"#utility.yul\":14539:14542   */\n      0x00\n        /* \"#utility.yul\":14560:14627   */\n      tag_286\n        /* \"#utility.yul\":14624:14626   */\n      0x1d\n        /* \"#utility.yul\":14619:14622   */\n      dup4\n        /* \"#utility.yul\":14560:14627   */\n      tag_136\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":14553:14627   */\n      swap2\n      pop\n        /* \"#utility.yul\":14636:14729   */\n      tag_287\n        /* \"#utility.yul\":14725:14728   */\n      dup3\n        /* \"#utility.yul\":14636:14729   */\n      tag_159\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":14754:14756   */\n      0x20\n        /* \"#utility.yul\":14749:14752   */\n      dup3\n        /* \"#utility.yul\":14745:14757   */\n      add\n        /* \"#utility.yul\":14738:14757   */\n      swap1\n      pop\n        /* \"#utility.yul\":14397:14763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14769:15188   */\n    tag_110:\n        /* \"#utility.yul\":14935:14939   */\n      0x00\n        /* \"#utility.yul\":14973:14975   */\n      0x20\n        /* \"#utility.yul\":14962:14971   */\n      dup3\n        /* \"#utility.yul\":14958:14976   */\n      add\n        /* \"#utility.yul\":14950:14976   */\n      swap1\n      pop\n        /* \"#utility.yul\":15022:15031   */\n      dup2\n        /* \"#utility.yul\":15016:15020   */\n      dup2\n        /* \"#utility.yul\":15012:15032   */\n      sub\n        /* \"#utility.yul\":15008:15009   */\n      0x00\n        /* \"#utility.yul\":14997:15006   */\n      dup4\n        /* \"#utility.yul\":14993:15010   */\n      add\n        /* \"#utility.yul\":14986:15033   */\n      mstore\n        /* \"#utility.yul\":15050:15181   */\n      tag_289\n        /* \"#utility.yul\":15176:15180   */\n      dup2\n        /* \"#utility.yul\":15050:15181   */\n      tag_160\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":15042:15181   */\n      swap1\n      pop\n        /* \"#utility.yul\":14769:15188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15194:15292   */\n    tag_161:\n        /* \"#utility.yul\":15245:15251   */\n      0x00\n        /* \"#utility.yul\":15279:15284   */\n      dup2\n        /* \"#utility.yul\":15273:15285   */\n      mload\n        /* \"#utility.yul\":15263:15285   */\n      swap1\n      pop\n        /* \"#utility.yul\":15194:15292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15298:15445   */\n    tag_162:\n        /* \"#utility.yul\":15399:15410   */\n      0x00\n        /* \"#utility.yul\":15436:15439   */\n      dup2\n        /* \"#utility.yul\":15421:15439   */\n      swap1\n      pop\n        /* \"#utility.yul\":15298:15445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15451:15758   */\n    tag_163:\n        /* \"#utility.yul\":15519:15520   */\n      0x00\n        /* \"#utility.yul\":15529:15642   */\n    tag_293:\n        /* \"#utility.yul\":15543:15549   */\n      dup4\n        /* \"#utility.yul\":15540:15541   */\n      dup2\n        /* \"#utility.yul\":15537:15550   */\n      lt\n        /* \"#utility.yul\":15529:15642   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":15628:15629   */\n      dup1\n        /* \"#utility.yul\":15623:15626   */\n      dup3\n        /* \"#utility.yul\":15619:15630   */\n      add\n        /* \"#utility.yul\":15613:15631   */\n      mload\n        /* \"#utility.yul\":15609:15610   */\n      dup2\n        /* \"#utility.yul\":15604:15607   */\n      dup5\n        /* \"#utility.yul\":15600:15611   */\n      add\n        /* \"#utility.yul\":15593:15632   */\n      mstore\n        /* \"#utility.yul\":15565:15567   */\n      0x20\n        /* \"#utility.yul\":15562:15563   */\n      dup2\n        /* \"#utility.yul\":15558:15568   */\n      add\n        /* \"#utility.yul\":15553:15568   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15642   */\n      jump(tag_293)\n    tag_295:\n        /* \"#utility.yul\":15660:15666   */\n      dup4\n        /* \"#utility.yul\":15657:15658   */\n      dup2\n        /* \"#utility.yul\":15654:15667   */\n      gt\n        /* \"#utility.yul\":15651:15752   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":15740:15741   */\n      0x00\n        /* \"#utility.yul\":15731:15737   */\n      dup5\n        /* \"#utility.yul\":15726:15729   */\n      dup5\n        /* \"#utility.yul\":15722:15738   */\n      add\n        /* \"#utility.yul\":15715:15742   */\n      mstore\n        /* \"#utility.yul\":15651:15752   */\n    tag_296:\n        /* \"#utility.yul\":15500:15758   */\n      pop\n        /* \"#utility.yul\":15451:15758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15764:16137   */\n    tag_164:\n        /* \"#utility.yul\":15868:15871   */\n      0x00\n        /* \"#utility.yul\":15896:15934   */\n      tag_298\n        /* \"#utility.yul\":15928:15933   */\n      dup3\n        /* \"#utility.yul\":15896:15934   */\n      tag_161\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":15950:16038   */\n      tag_299\n        /* \"#utility.yul\":16031:16037   */\n      dup2\n        /* \"#utility.yul\":16026:16029   */\n      dup6\n        /* \"#utility.yul\":15950:16038   */\n      tag_162\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":15943:16038   */\n      swap4\n      pop\n        /* \"#utility.yul\":16047:16099   */\n      tag_300\n        /* \"#utility.yul\":16092:16098   */\n      dup2\n        /* \"#utility.yul\":16087:16090   */\n      dup6\n        /* \"#utility.yul\":16080:16084   */\n      0x20\n        /* \"#utility.yul\":16073:16078   */\n      dup7\n        /* \"#utility.yul\":16069:16085   */\n      add\n        /* \"#utility.yul\":16047:16099   */\n      tag_163\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":16124:16130   */\n      dup1\n        /* \"#utility.yul\":16119:16122   */\n      dup5\n        /* \"#utility.yul\":16115:16131   */\n      add\n        /* \"#utility.yul\":16108:16131   */\n      swap2\n      pop\n        /* \"#utility.yul\":15872:16137   */\n      pop\n        /* \"#utility.yul\":15764:16137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16143:16414   */\n    tag_112:\n        /* \"#utility.yul\":16273:16276   */\n      0x00\n        /* \"#utility.yul\":16295:16388   */\n      tag_302\n        /* \"#utility.yul\":16384:16387   */\n      dup3\n        /* \"#utility.yul\":16375:16381   */\n      dup5\n        /* \"#utility.yul\":16295:16388   */\n      tag_164\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":16288:16388   */\n      swap2\n      pop\n        /* \"#utility.yul\":16405:16408   */\n      dup2\n        /* \"#utility.yul\":16398:16408   */\n      swap1\n      pop\n        /* \"#utility.yul\":16143:16414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16420:16519   */\n    tag_165:\n        /* \"#utility.yul\":16472:16478   */\n      0x00\n        /* \"#utility.yul\":16506:16511   */\n      dup2\n        /* \"#utility.yul\":16500:16512   */\n      mload\n        /* \"#utility.yul\":16490:16512   */\n      swap1\n      pop\n        /* \"#utility.yul\":16420:16519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16525:16627   */\n    tag_166:\n        /* \"#utility.yul\":16566:16572   */\n      0x00\n        /* \"#utility.yul\":16617:16619   */\n      0x1f\n        /* \"#utility.yul\":16613:16620   */\n      not\n        /* \"#utility.yul\":16608:16610   */\n      0x1f\n        /* \"#utility.yul\":16601:16606   */\n      dup4\n        /* \"#utility.yul\":16597:16611   */\n      add\n        /* \"#utility.yul\":16593:16621   */\n      and\n        /* \"#utility.yul\":16583:16621   */\n      swap1\n      pop\n        /* \"#utility.yul\":16525:16627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16633:16997   */\n    tag_167:\n        /* \"#utility.yul\":16721:16724   */\n      0x00\n        /* \"#utility.yul\":16749:16788   */\n      tag_306\n        /* \"#utility.yul\":16782:16787   */\n      dup3\n        /* \"#utility.yul\":16749:16788   */\n      tag_165\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":16804:16875   */\n      tag_307\n        /* \"#utility.yul\":16868:16874   */\n      dup2\n        /* \"#utility.yul\":16863:16866   */\n      dup6\n        /* \"#utility.yul\":16804:16875   */\n      tag_136\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":16797:16875   */\n      swap4\n      pop\n        /* \"#utility.yul\":16884:16936   */\n      tag_308\n        /* \"#utility.yul\":16929:16935   */\n      dup2\n        /* \"#utility.yul\":16924:16927   */\n      dup6\n        /* \"#utility.yul\":16917:16921   */\n      0x20\n        /* \"#utility.yul\":16910:16915   */\n      dup7\n        /* \"#utility.yul\":16906:16922   */\n      add\n        /* \"#utility.yul\":16884:16936   */\n      tag_163\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":16961:16990   */\n      tag_309\n        /* \"#utility.yul\":16983:16989   */\n      dup2\n        /* \"#utility.yul\":16961:16990   */\n      tag_166\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":16956:16959   */\n      dup5\n        /* \"#utility.yul\":16952:16991   */\n      add\n        /* \"#utility.yul\":16945:16991   */\n      swap2\n      pop\n        /* \"#utility.yul\":16725:16997   */\n      pop\n        /* \"#utility.yul\":16633:16997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17003:17316   */\n    tag_125:\n        /* \"#utility.yul\":17116:17120   */\n      0x00\n        /* \"#utility.yul\":17154:17156   */\n      0x20\n        /* \"#utility.yul\":17143:17152   */\n      dup3\n        /* \"#utility.yul\":17139:17157   */\n      add\n        /* \"#utility.yul\":17131:17157   */\n      swap1\n      pop\n        /* \"#utility.yul\":17203:17212   */\n      dup2\n        /* \"#utility.yul\":17197:17201   */\n      dup2\n        /* \"#utility.yul\":17193:17213   */\n      sub\n        /* \"#utility.yul\":17189:17190   */\n      0x00\n        /* \"#utility.yul\":17178:17187   */\n      dup4\n        /* \"#utility.yul\":17174:17191   */\n      add\n        /* \"#utility.yul\":17167:17214   */\n      mstore\n        /* \"#utility.yul\":17231:17309   */\n      tag_311\n        /* \"#utility.yul\":17304:17308   */\n      dup2\n        /* \"#utility.yul\":17295:17301   */\n      dup5\n        /* \"#utility.yul\":17231:17309   */\n      tag_167\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":17223:17309   */\n      swap1\n      pop\n        /* \"#utility.yul\":17003:17316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff0cd9cfff8760ade8802bfa2000e81d067d168839916fc2ccfb01a2f15f9a9464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1542": {
									"entryPoint": null,
									"id": 1542,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2568:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:9",
														"type": ""
													}
												],
												"src": "545:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:9",
														"type": ""
													}
												],
												"src": "694:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "853:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "863:7:9",
														"type": ""
													}
												],
												"src": "826:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:9"
															},
															"nodeType": "YulIf",
															"src": "981:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:9",
														"type": ""
													}
												],
												"src": "928:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:9",
														"type": ""
													}
												],
												"src": "1056:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:692:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:33:9"
															},
															"nodeType": "YulIf",
															"src": "1343:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1473:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1517:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1611:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1656:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1750:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1795:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1889:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1934:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1279:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1290:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1310:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1318:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1326:6:9",
														"type": ""
													}
												],
												"src": "1205:820:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2079:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2069:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2173:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2176:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2166:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2190:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2031:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2265:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2275:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2298:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2280:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2275:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2309:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2332:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2314:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2314:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2309:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2509:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2419:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2412:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2405:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2405:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2427:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2434:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2502:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2430:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2430:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2424:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2424:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2401:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:105:9"
															},
															"nodeType": "YulIf",
															"src": "2398:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2539:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2554:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2557:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2539:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2248:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2251:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2257:7:9",
														"type": ""
													}
												],
												"src": "2217:348:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b506040516200168a3803806200168a8339818101604052810190620000379190620001cf565b600160008190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400008462000096919062000270565b6001819055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050670de0b6b3a7640000816200011a919062000270565b60038190555050505050620002d1565b600080fd5b6000819050919050565b62000144816200012f565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000197826200016a565b9050919050565b620001a9816200018a565b8114620001b557600080fd5b50565b600081519050620001c9816200019e565b92915050565b60008060008060808587031215620001ec57620001eb6200012a565b5b6000620001fc8782880162000153565b94505060206200020f87828801620001b8565b93505060406200022287828801620001b8565b9250506060620002358782880162000153565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200027d826200012f565b91506200028a836200012f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620002c657620002c562000241565b5b828202905092915050565b60805160a05161138562000305600039600061013f01526000818161030e015281816103b3015261058e01526113856000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c3a174411161005b578063c3a17441146100ef578063c54e44eb1461010b578063d7997f7e14610129578063dc55920f1461013357610088565b80636385f2fb1461008d57806376d812ea146100ab5780637ff9b596146100b5578063c2db2c42146100d3575b600080fd5b61009561013d565b6040516100a29190610ad2565b60405180910390f35b6100b3610161565b005b6100bd61020d565b6040516100ca9190610b06565b60405180910390f35b6100ed60048036038101906100e89190610b52565b610213565b005b61010960048036038101906101049190610b7f565b6104c1565b005b61011361058c565b6040516101209190610ad2565b60405180910390f35b6101316105b0565b005b61013b6106df565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101bb57600080fd5b6000600260146101000a81548160ff0219169083151502179055507f71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc60405161020390610c1c565b60405180910390a1565b60015481565b600260005403610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90610c88565b60405180910390fd5b600260008190555060011515600260149054906101000a900460ff161515146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610cf4565b60405180910390fd5b6000816004546102c69190610d43565b9050600354811061030c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610de5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610367929190610e05565b6020604051808303816000875af1158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610e66565b506103f83330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078b909392919063ffffffff16565b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104479190610d43565b9250508190555081600460008282546104609190610d43565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fda4cadf0d4383cb43c8249e3cc678f6690bdbaa01421c99fd9b14edac62cde80836040516104ad9190610b06565b60405180910390a250600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051b57600080fd5b670de0b6b3a76400008261052f9190610e93565b600181905550670de0b6b3a7640000816105499190610e93565b6003819055507f314bf1ccc32c608a6175053b0da1933b3a745b3f799011003a4c39aab0c518a38282604051610580929190610eed565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002600054036105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610c88565b60405180910390fd5b600260008190555060001515600260149054906101000a900460ff16151514610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90610f88565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc90610ff4565b60405180910390fd5b6001600081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073957600080fd5b6001600260146101000a81548160ff0219169083151502179055507f71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc60405161078190611060565b60405180910390a1565b61080e846323b872dd60e01b8585856040516024016107ac93929190611080565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610814565b50505050565b6000610876826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108db9092919063ffffffff16565b90506000815111156108d657808060200190518101906108969190610e66565b6108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc90611129565b60405180910390fd5b5b505050565b60606108ea84846000856108f3565b90509392505050565b606082471015610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f906111bb565b60405180910390fd5b61094185610a07565b610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790611227565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516109a991906112c1565b60006040518083038185875af1925050503d80600081146109e6576040519150601f19603f3d011682016040523d82523d6000602084013e6109eb565b606091505b50915091506109fb828286610a2a565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610a3a57829050610a8a565b600083511115610a4d5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a81919061132d565b60405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abc82610a91565b9050919050565b610acc81610ab1565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b6000819050919050565b610b0081610aed565b82525050565b6000602082019050610b1b6000830184610af7565b92915050565b600080fd5b610b2f81610aed565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600060208284031215610b6857610b67610b21565b5b6000610b7684828501610b3d565b91505092915050565b60008060408385031215610b9657610b95610b21565b5b6000610ba485828601610b3d565b9250506020610bb585828601610b3d565b9150509250929050565b600082825260208201905092915050565b7f49434f2069732070617573656400000000000000000000000000000000000000600082015250565b6000610c06600d83610bbf565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610c72601f83610bbf565b9150610c7d82610c3c565b602082019050919050565b60006020820190508181036000830152610ca181610c65565b9050919050565b7f49444f20686173206e6f74207374617274656400000000000000000000000000600082015250565b6000610cde601383610bbf565b9150610ce982610ca8565b602082019050919050565b60006020820190508181036000830152610d0d81610cd1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4e82610aed565b9150610d5983610aed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8e57610d8d610d14565b5b828201905092915050565b7f416c6c20746f6b656e7320686173206265656e20736f6c640000000000000000600082015250565b6000610dcf601883610bbf565b9150610dda82610d99565b602082019050919050565b60006020820190508181036000830152610dfe81610dc2565b9050919050565b6000604082019050610e1a6000830185610ac3565b610e276020830184610af7565b9392505050565b60008115159050919050565b610e4381610e2e565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b600060208284031215610e7c57610e7b610b21565b5b6000610e8a84828501610e51565b91505092915050565b6000610e9e82610aed565b9150610ea983610aed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee257610ee1610d14565b5b828202905092915050565b6000604082019050610f026000830185610af7565b610f0f6020830184610af7565b9392505050565b7f49444f2048617320206e6f7420656e6465642c20636c61696d20756e6176616960008201527f6c61626c65000000000000000000000000000000000000000000000000000000602082015250565b6000610f72602583610bbf565b9150610f7d82610f16565b604082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b7f796f752064696420000000000000000000000000000000000000000000000000600082015250565b6000610fde600883610bbf565b9150610fe982610fa8565b602082019050919050565b6000602082019050818103600083015261100d81610fd1565b9050919050565b7f49434f206973206f6e0000000000000000000000000000000000000000000000600082015250565b600061104a600983610bbf565b915061105582611014565b602082019050919050565b600060208201905081810360008301526110798161103d565b9050919050565b60006060820190506110956000830186610ac3565b6110a26020830185610ac3565b6110af6040830184610af7565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611113602a83610bbf565b915061111e826110b7565b604082019050919050565b6000602082019050818103600083015261114281611106565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006111a5602683610bbf565b91506111b082611149565b604082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611211601d83610bbf565b915061121c826111db565b602082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561127b578082015181840152602081019050611260565b8381111561128a576000848401525b50505050565b600061129b82611247565b6112a58185611252565b93506112b581856020860161125d565b80840191505092915050565b60006112cd8284611290565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006112ff826112d8565b6113098185610bbf565b935061131981856020860161125d565b611322816112e3565b840191505092915050565b6000602082019050818103600083015261134781846112f4565b90509291505056fea2646970667358221220ff0cd9cfff8760ade8802bfa2000e81d067d168839916fc2ccfb01a2f15f9a9464736f6c634300080d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x168A CODESIZE SUB DUP1 PUSH3 0x168A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP5 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH3 0x11A SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x2D1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x144 DUP2 PUSH3 0x12F JUMP JUMPDEST DUP2 EQ PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x164 DUP2 PUSH3 0x139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x197 DUP3 PUSH3 0x16A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A9 DUP2 PUSH3 0x18A JUMP JUMPDEST DUP2 EQ PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C9 DUP2 PUSH3 0x19E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1EC JUMPI PUSH3 0x1EB PUSH3 0x12A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FC DUP8 DUP3 DUP9 ADD PUSH3 0x153 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x20F DUP8 DUP3 DUP9 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x222 DUP8 DUP3 DUP9 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x235 DUP8 DUP3 DUP9 ADD PUSH3 0x153 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x27D DUP3 PUSH3 0x12F JUMP JUMPDEST SWAP2 POP PUSH3 0x28A DUP4 PUSH3 0x12F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C5 PUSH3 0x241 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1385 PUSH3 0x305 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x13F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x30E ADD MSTORE DUP2 DUP2 PUSH2 0x3B3 ADD MSTORE PUSH2 0x58E ADD MSTORE PUSH2 0x1385 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3A17441 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC3A17441 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xD7997F7E EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xDC55920F EQ PUSH2 0x133 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6385F2FB EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x76D812EA EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC2DB2C42 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC PUSH1 0x40 MLOAD PUSH2 0x203 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP1 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP3 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP PUSH2 0x3F8 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA4CADF0D4383CB43C8249E3CC678F6690BDBAA01421C99FD9B14EDAC62CDE80 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x314BF1CCC32C608A6175053B0DA1933B3A745B3F799011003A4C39AAB0C518A3 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x580 SWAP3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC PUSH1 0x40 MLOAD PUSH2 0x781 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x80E DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x814 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8D6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x896 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8EA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x941 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9FB DUP3 DUP3 DUP7 PUSH2 0xA2A JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA3A JUMPI DUP3 SWAP1 POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xA4D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACC DUP2 PUSH2 0xAB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB00 DUP2 PUSH2 0xAED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2F DUP2 PUSH2 0xAED JUMP JUMPDEST DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4C DUP2 PUSH2 0xB26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP5 DUP3 DUP6 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA4 DUP6 DUP3 DUP7 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBB5 DUP6 DUP3 DUP7 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2069732070617573656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 PUSH1 0xD DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC35 DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC72 PUSH1 0x1F DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC7D DUP3 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA1 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49444F20686173206E6F74207374617274656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE PUSH1 0x13 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCE9 DUP3 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD0D DUP2 PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD4E DUP3 PUSH2 0xAED JUMP JUMPDEST SWAP2 POP PUSH2 0xD59 DUP4 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xD14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E7320686173206265656E20736F6C640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCF PUSH1 0x18 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFE DUP2 PUSH2 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE60 DUP2 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP5 DUP3 DUP6 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9E DUP3 PUSH2 0xAED JUMP JUMPDEST SWAP2 POP PUSH2 0xEA9 DUP4 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0xF0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x49444F2048617320206E6F7420656E6465642C20636C61696D20756E61766169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C61626C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF72 PUSH1 0x25 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xF7D DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA1 DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F752064696420000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDE PUSH1 0x8 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xFE9 DUP3 PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F6E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A PUSH1 0x9 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1079 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1095 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x10A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x10AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1113 PUSH1 0x2A DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x111E DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1142 DUP2 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A5 PUSH1 0x26 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x11B0 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1211 PUSH1 0x1D DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x121C DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1240 DUP2 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x127B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1260 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x128A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12A5 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CD DUP3 DUP5 PUSH2 0x1290 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FF DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1309 DUP2 DUP6 PUSH2 0xBBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125D JUMP JUMPDEST PUSH2 0x1322 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1347 DUP2 DUP5 PUSH2 0x12F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC 0xD9 0xCF SELFDESTRUCT DUP8 PUSH1 0xAD 0xE8 DUP1 0x2B STATICCALL KECCAK256 STOP 0xE8 SAR MOD PUSH30 0x168839916FC2CCFB01A2F15F9A9464736F6C634300080D00330000000000 ",
							"sourceMap": "1245:2174:8:-:0;;;1857:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;1957:10:8;1949:5;;:18;;;;;;;;;;;;;;;;;;2005:8;1991:11;:22;;;;:::i;:::-;1978:10;:35;;;;2031:6;2024:13;;;;;;;;;;2055:5;2048:12;;;;;;;;;;2098:8;2084:11;:22;;;;:::i;:::-;2071:10;:35;;;;1857:257;;;;1245:2174;;88:117:9;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:180::-;2079:77;2076:1;2069:88;2176:4;2173:1;2166:15;2200:4;2197:1;2190:15;2217:348;2257:7;2280:20;2298:1;2280:20;:::i;:::-;2275:25;;2314:20;2332:1;2314:20;:::i;:::-;2309:25;;2502:1;2434:66;2430:74;2427:1;2424:81;2419:1;2412:9;2405:17;2401:105;2398:131;;;2509:18;;:::i;:::-;2398:131;2557:1;2554;2550:9;2539:20;;2217:348;;;;:::o;1245:2174:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BeginIDO_1689": {
									"entryPoint": 1759,
									"id": 1689,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DAZ_1471": {
									"entryPoint": 317,
									"id": 1471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StopIDO_1708": {
									"entryPoint": 353,
									"id": 1708,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_1469": {
									"entryPoint": 1420,
									"id": 1469,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1044": {
									"entryPoint": 2068,
									"id": 1044,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimPurchasedToken_1634": {
									"entryPoint": 1456,
									"id": 1634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@editIco_1670": {
									"entryPoint": 1217,
									"id": 1670,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_1204": {
									"entryPoint": 2291,
									"id": 1204,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1134": {
									"entryPoint": 2267,
									"id": 1134,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_1063": {
									"entryPoint": 2567,
									"id": 1063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@purchaseToken_1611": {
									"entryPoint": 531,
									"id": 1611,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_822": {
									"entryPoint": 1931,
									"id": 822,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@tokenPrice_1473": {
									"entryPoint": 525,
									"id": 1473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_1339": {
									"entryPoint": 2602,
									"id": 1339,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17319:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:9",
														"type": ""
													}
												],
												"src": "139:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:9",
														"type": ""
													}
												],
												"src": "241:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:9",
														"type": ""
													}
												],
												"src": "365:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:9",
														"type": ""
													}
												],
												"src": "593:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:9",
														"type": ""
													}
												],
												"src": "676:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:9",
														"type": ""
													}
												],
												"src": "800:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:9",
														"type": ""
													}
												],
												"src": "1028:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:9"
															},
															"nodeType": "YulIf",
															"src": "1408:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:9",
														"type": ""
													}
												],
												"src": "1355:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:9",
														"type": ""
													}
												],
												"src": "1483:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:9"
															},
															"nodeType": "YulIf",
															"src": "1704:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:9",
														"type": ""
													}
												],
												"src": "1628:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2092:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2094:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2067:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:32:9"
															},
															"nodeType": "YulIf",
															"src": "2056:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2185:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2229:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2264:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2275:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2260:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2260:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2284:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2239:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2229:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2312:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2327:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2331:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2357:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2392:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2403:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2388:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2388:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2412:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2367:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2367:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2357:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2008:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2019:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2031:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2039:6:9",
														"type": ""
													}
												],
												"src": "1963:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2556:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2561:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2549:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2577:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2596:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2601:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2577:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2511:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2516:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2527:11:9",
														"type": ""
													}
												],
												"src": "2443:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2724:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:14:9"
																	},
																	{
																		"hexValue": "49434f20697320706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2758:15:9",
																		"type": "",
																		"value": "ICO is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2735:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2735:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2716:6:9",
														"type": ""
													}
												],
												"src": "2618:163:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2933:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2943:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3009:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3014:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2950:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2943:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3115:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d",
																	"nodeType": "YulIdentifier",
																	"src": "3026:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3026:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3128:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3139:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3144:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3135:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2921:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2929:3:9",
														"type": ""
													}
												],
												"src": "2787:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3340:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3352:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3363:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3340:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3398:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3406:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3402:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3432:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3566:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3440:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3432:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3310:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3325:4:9",
														"type": ""
													}
												],
												"src": "3159:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3690:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3712:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3724:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3682:6:9",
														"type": ""
													}
												],
												"src": "3584:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3917:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3927:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3993:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3998:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3934:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4099:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4010:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4112:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4123:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4128:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4112:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3905:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3913:3:9",
														"type": ""
													}
												],
												"src": "3771:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4324:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4336:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4324:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4382:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4367:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4390:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4396:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4360:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4416:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4550:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4424:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4416:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4294:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4309:4:9",
														"type": ""
													}
												],
												"src": "4143:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4674:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4696:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:14:9"
																	},
																	{
																		"hexValue": "49444f20686173206e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4708:21:9",
																		"type": "",
																		"value": "IDO has not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4685:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4666:6:9",
														"type": ""
													}
												],
												"src": "4568:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4889:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4899:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4965:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4906:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4899:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5071:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563",
																	"nodeType": "YulIdentifier",
																	"src": "4982:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4982:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5095:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5100:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5091:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5084:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4877:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4885:3:9",
														"type": ""
													}
												],
												"src": "4743:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5296:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5296:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5343:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5362:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5358:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5332:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5332:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5388:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5522:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5396:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5388:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5266:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5281:4:9",
														"type": ""
													}
												],
												"src": "5115:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5568:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5585:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5588:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5578:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5578:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5675:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5675:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5709:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5540:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5780:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5803:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5785:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5780:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5814:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5837:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5819:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5814:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5977:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5979:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5979:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5979:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5898:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5905:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5973:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5901:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5895:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5895:81:9"
															},
															"nodeType": "YulIf",
															"src": "5892:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6009:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6020:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6023:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6016:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5757:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5760:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5766:3:9",
														"type": ""
													}
												],
												"src": "5726:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6143:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6165:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6173:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6161:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6161:14:9"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e7320686173206265656e20736f6c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6177:26:9",
																		"type": "",
																		"value": "All tokens has been sold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6154:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6154:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6135:6:9",
														"type": ""
													}
												],
												"src": "6037:174:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6373:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6439:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:9",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6380:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6373:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6545:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4",
																	"nodeType": "YulIdentifier",
																	"src": "6456:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6558:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6569:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6574:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6565:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6351:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:9",
														"type": ""
													}
												],
												"src": "6217:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6760:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6770:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6782:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6778:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6770:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6828:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6813:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6836:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6806:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6806:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6862:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6996:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6870:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6862:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6740:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6755:4:9",
														"type": ""
													}
												],
												"src": "6589:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7140:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7150:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7162:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7173:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7150:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7230:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7243:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7254:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7239:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7186:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7186:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7311:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7267:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7267:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7267:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7104:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7116:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7124:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7135:4:9",
														"type": ""
													}
												],
												"src": "7014:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7394:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7404:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7429:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7422:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7422:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7415:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7415:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7404:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7376:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7386:7:9",
														"type": ""
													}
												],
												"src": "7352:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7488:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7542:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7551:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7554:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7544:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7544:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7544:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7511:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7533:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7518:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7518:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7508:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7508:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7501:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:40:9"
															},
															"nodeType": "YulIf",
															"src": "7498:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7481:5:9",
														"type": ""
													}
												],
												"src": "7448:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7630:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7640:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7655:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7649:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7640:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7695:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7671:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7671:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7608:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7616:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7624:5:9",
														"type": ""
													}
												],
												"src": "7570:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7787:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7833:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7835:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7835:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7835:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7808:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7804:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7804:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7829:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:32:9"
															},
															"nodeType": "YulIf",
															"src": "7797:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7926:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7941:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7945:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7970:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8013:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8024:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8009:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8009:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8033:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7980:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7980:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7970:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7757:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7768:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7780:6:9",
														"type": ""
													}
												],
												"src": "7713:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8112:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8122:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8145:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8127:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8122:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8156:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8179:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8161:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8161:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8156:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8354:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8356:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8356:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8266:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8259:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8259:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8252:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8252:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8274:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8281:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8349:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8277:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8277:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8271:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8271:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:105:9"
															},
															"nodeType": "YulIf",
															"src": "8245:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8386:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8401:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8404:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8386:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8095:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8098:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8104:7:9",
														"type": ""
													}
												],
												"src": "8064:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8544:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8554:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8566:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8562:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8554:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8634:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8658:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8643:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8590:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8715:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8728:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8739:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8724:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8671:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8671:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8508:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8520:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8528:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8539:4:9",
														"type": ""
													}
												],
												"src": "8418:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8862:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8884:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8892:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8880:14:9"
																	},
																	{
																		"hexValue": "49444f2048617320206e6f7420656e6465642c20636c61696d20756e61766169",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8896:34:9",
																		"type": "",
																		"value": "IDO Has  not ended, claim unavai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8873:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8952:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8960:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8948:15:9"
																	},
																	{
																		"hexValue": "6c61626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8965:7:9",
																		"type": "",
																		"value": "lable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8941:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8941:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8854:6:9",
														"type": ""
													}
												],
												"src": "8756:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9132:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9142:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9208:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9213:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9149:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9142:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9314:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2",
																	"nodeType": "YulIdentifier",
																	"src": "9225:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9225:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9327:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9338:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9343:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9334:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9120:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9128:3:9",
														"type": ""
													}
												],
												"src": "8986:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9529:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9539:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9547:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9547:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9586:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9597:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9605:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9575:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9631:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9765:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9639:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9639:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9631:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9509:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9524:4:9",
														"type": ""
													}
												],
												"src": "9358:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9889:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9911:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9919:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9907:14:9"
																	},
																	{
																		"hexValue": "796f752064696420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9923:10:9",
																		"type": "",
																		"value": "you did "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9900:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9900:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9900:34:9"
														}
													]
												},
												"name": "store_literal_in_memory_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9881:6:9",
														"type": ""
													}
												],
												"src": "9783:158:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10093:219:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10103:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10169:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10110:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10110:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10103:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10274:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24",
																	"nodeType": "YulIdentifier",
																	"src": "10185:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10185:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10185:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10287:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10298:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10303:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10294:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10294:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10287:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10081:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10089:3:9",
														"type": ""
													}
												],
												"src": "9947:365:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10489:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10499:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10511:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10522:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10507:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10499:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10546:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10557:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10542:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10565:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10571:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10561:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10535:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10535:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10535:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10591:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10725:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10599:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10599:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10591:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10469:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10484:4:9",
														"type": ""
													}
												],
												"src": "10318:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10849:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10871:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10879:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10867:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10867:14:9"
																	},
																	{
																		"hexValue": "49434f206973206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10883:11:9",
																		"type": "",
																		"value": "ICO is on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10860:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10860:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10860:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10841:6:9",
														"type": ""
													}
												],
												"src": "10743:159:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11054:219:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11064:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11130:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11135:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11071:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11071:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11064:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11235:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc",
																	"nodeType": "YulIdentifier",
																	"src": "11146:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11146:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11146:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11248:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11259:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11264:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11255:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11248:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11042:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11050:3:9",
														"type": ""
													}
												],
												"src": "10908:365:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11450:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11460:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11472:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11483:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11468:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11468:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11460:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11507:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11518:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11503:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11503:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11526:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11496:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11496:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11552:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11686:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11560:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11560:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11552:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11430:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11445:4:9",
														"type": ""
													}
												],
												"src": "11279:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11858:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11868:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11880:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11891:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11876:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11876:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11868:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11948:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11972:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11957:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11904:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11904:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11904:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12029:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12042:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12053:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12038:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12038:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11985:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12111:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12124:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12135:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12120:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12067:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12067:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12067:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11814:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11826:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11834:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11842:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11853:4:9",
														"type": ""
													}
												],
												"src": "11704:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12258:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12280:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12288:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12276:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12292:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12269:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12269:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12348:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12356:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12344:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12344:15:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12361:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12337:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12337:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12337:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12250:6:9",
														"type": ""
													}
												],
												"src": "12152:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12533:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12543:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12609:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12614:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12550:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12550:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12543:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12715:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "12626:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12626:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12626:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12728:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12739:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12735:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12728:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12521:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12529:3:9",
														"type": ""
													}
												],
												"src": "12387:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12930:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12940:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12952:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12948:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12940:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12987:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12998:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12983:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13006:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13012:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13002:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12976:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12976:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12976:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13032:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13166:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13040:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13032:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12910:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12925:4:9",
														"type": ""
													}
												],
												"src": "12759:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13290:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13312:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13320:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13308:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13308:14:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13324:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13301:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13301:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13301:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13380:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13388:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13376:15:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13393:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13369:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13369:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13369:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13282:6:9",
														"type": ""
													}
												],
												"src": "13184:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13561:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13571:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13637:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13642:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13578:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13571:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13743:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "13654:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13654:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13654:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13756:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13767:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13772:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13763:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13763:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13756:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13549:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13557:3:9",
														"type": ""
													}
												],
												"src": "13415:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13958:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13968:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13980:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13991:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13976:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13976:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13968:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14015:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14026:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14011:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14011:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14034:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14040:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14030:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14030:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14004:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14060:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14194:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14068:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14068:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14060:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13938:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13953:4:9",
														"type": ""
													}
												],
												"src": "13787:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14318:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14340:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14348:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14336:14:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14352:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14329:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14329:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14329:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14310:6:9",
														"type": ""
													}
												],
												"src": "14212:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14543:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14553:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14619:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14624:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14560:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14560:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14553:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14725:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "14636:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14636:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14636:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14738:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14749:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14754:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14745:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14745:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14738:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14539:3:9",
														"type": ""
													}
												],
												"src": "14397:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14940:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14950:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14962:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14973:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14958:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14950:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14997:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15008:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14993:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14993:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15016:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15022:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15012:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15012:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14986:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14986:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15042:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15176:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15050:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15050:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15042:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14920:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14935:4:9",
														"type": ""
													}
												],
												"src": "14769:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15252:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15263:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15279:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15273:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15263:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15235:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15245:6:9",
														"type": ""
													}
												],
												"src": "15194:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15411:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15421:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15436:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15421:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15383:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15388:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15399:11:9",
														"type": ""
													}
												],
												"src": "15298:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15500:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15510:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15519:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15514:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15579:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15604:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15609:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15600:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15600:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15623:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15628:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15619:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15619:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15613:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15613:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15593:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15593:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15593:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15540:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15543:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15537:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15537:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15551:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15553:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15562:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15565:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15558:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15558:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15553:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15533:3:9",
																"statements": []
															},
															"src": "15529:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15676:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15726:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15731:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15722:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15722:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15740:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15715:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15715:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15715:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15657:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15660:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15654:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:13:9"
															},
															"nodeType": "YulIf",
															"src": "15651:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15482:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15487:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15492:6:9",
														"type": ""
													}
												],
												"src": "15451:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15872:265:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15882:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15928:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15896:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15896:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15886:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15943:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16026:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16031:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15950:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15943:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16073:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16080:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16069:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16069:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16087:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16092:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16047:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16047:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16047:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16108:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16119:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16124:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16115:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16115:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16108:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15853:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15860:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15868:3:9",
														"type": ""
													}
												],
												"src": "15764:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16277:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16288:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16375:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16384:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16295:79:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16288:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16398:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16405:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16256:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16262:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16273:3:9",
														"type": ""
													}
												],
												"src": "16143:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16479:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16490:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16506:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16500:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16500:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16490:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16462:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16472:6:9",
														"type": ""
													}
												],
												"src": "16420:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16573:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16583:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16601:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16608:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16597:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16597:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16617:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16613:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16613:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16593:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16593:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16583:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16556:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16566:6:9",
														"type": ""
													}
												],
												"src": "16525:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16725:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16735:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16782:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16749:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16749:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16739:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16797:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16863:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16868:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16804:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16804:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16797:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16910:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16917:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16906:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16906:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16924:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16929:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16884:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16884:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16884:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16945:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16956:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16983:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16961:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16961:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16952:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16945:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16706:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16713:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16721:3:9",
														"type": ""
													}
												],
												"src": "16633:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17121:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17131:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17143:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17154:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17139:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17139:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17131:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17178:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17189:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17174:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17174:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17197:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17203:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17193:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17193:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17167:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17167:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17167:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17223:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17295:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17304:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17231:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17231:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17223:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17093:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17105:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17116:4:9",
														"type": ""
													}
												],
												"src": "17003:313:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563(memPtr) {\n\n        mstore(add(memPtr, 0), \"IDO has not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"All tokens has been sold\")\n\n    }\n\n    function abi_encode_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"IDO Has  not ended, claim unavai\")\n\n        mstore(add(memPtr, 32), \"lable\")\n\n    }\n\n    function abi_encode_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24(memPtr) {\n\n        mstore(add(memPtr, 0), \"you did \")\n\n    }\n\n    function abi_encode_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO is on\")\n\n    }\n\n    function abi_encode_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1469": [
									{
										"length": 32,
										"start": 782
									},
									{
										"length": 32,
										"start": 947
									},
									{
										"length": 32,
										"start": 1422
									}
								],
								"1471": [
									{
										"length": 32,
										"start": 319
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063c3a174411161005b578063c3a17441146100ef578063c54e44eb1461010b578063d7997f7e14610129578063dc55920f1461013357610088565b80636385f2fb1461008d57806376d812ea146100ab5780637ff9b596146100b5578063c2db2c42146100d3575b600080fd5b61009561013d565b6040516100a29190610ad2565b60405180910390f35b6100b3610161565b005b6100bd61020d565b6040516100ca9190610b06565b60405180910390f35b6100ed60048036038101906100e89190610b52565b610213565b005b61010960048036038101906101049190610b7f565b6104c1565b005b61011361058c565b6040516101209190610ad2565b60405180910390f35b6101316105b0565b005b61013b6106df565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101bb57600080fd5b6000600260146101000a81548160ff0219169083151502179055507f71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc60405161020390610c1c565b60405180910390a1565b60015481565b600260005403610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90610c88565b60405180910390fd5b600260008190555060011515600260149054906101000a900460ff161515146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610cf4565b60405180910390fd5b6000816004546102c69190610d43565b9050600354811061030c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610de5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610367929190610e05565b6020604051808303816000875af1158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610e66565b506103f83330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661078b909392919063ffffffff16565b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104479190610d43565b9250508190555081600460008282546104609190610d43565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fda4cadf0d4383cb43c8249e3cc678f6690bdbaa01421c99fd9b14edac62cde80836040516104ad9190610b06565b60405180910390a250600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051b57600080fd5b670de0b6b3a76400008261052f9190610e93565b600181905550670de0b6b3a7640000816105499190610e93565b6003819055507f314bf1ccc32c608a6175053b0da1933b3a745b3f799011003a4c39aab0c518a38282604051610580929190610eed565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002600054036105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610c88565b60405180910390fd5b600260008190555060001515600260149054906101000a900460ff16151514610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90610f88565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc90610ff4565b60405180910390fd5b6001600081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073957600080fd5b6001600260146101000a81548160ff0219169083151502179055507f71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc60405161078190611060565b60405180910390a1565b61080e846323b872dd60e01b8585856040516024016107ac93929190611080565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610814565b50505050565b6000610876826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108db9092919063ffffffff16565b90506000815111156108d657808060200190518101906108969190610e66565b6108d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc90611129565b60405180910390fd5b5b505050565b60606108ea84846000856108f3565b90509392505050565b606082471015610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f906111bb565b60405180910390fd5b61094185610a07565b610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790611227565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516109a991906112c1565b60006040518083038185875af1925050503d80600081146109e6576040519150601f19603f3d011682016040523d82523d6000602084013e6109eb565b606091505b50915091506109fb828286610a2a565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610a3a57829050610a8a565b600083511115610a4d5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a81919061132d565b60405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abc82610a91565b9050919050565b610acc81610ab1565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b6000819050919050565b610b0081610aed565b82525050565b6000602082019050610b1b6000830184610af7565b92915050565b600080fd5b610b2f81610aed565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600060208284031215610b6857610b67610b21565b5b6000610b7684828501610b3d565b91505092915050565b60008060408385031215610b9657610b95610b21565b5b6000610ba485828601610b3d565b9250506020610bb585828601610b3d565b9150509250929050565b600082825260208201905092915050565b7f49434f2069732070617573656400000000000000000000000000000000000000600082015250565b6000610c06600d83610bbf565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610c72601f83610bbf565b9150610c7d82610c3c565b602082019050919050565b60006020820190508181036000830152610ca181610c65565b9050919050565b7f49444f20686173206e6f74207374617274656400000000000000000000000000600082015250565b6000610cde601383610bbf565b9150610ce982610ca8565b602082019050919050565b60006020820190508181036000830152610d0d81610cd1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4e82610aed565b9150610d5983610aed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8e57610d8d610d14565b5b828201905092915050565b7f416c6c20746f6b656e7320686173206265656e20736f6c640000000000000000600082015250565b6000610dcf601883610bbf565b9150610dda82610d99565b602082019050919050565b60006020820190508181036000830152610dfe81610dc2565b9050919050565b6000604082019050610e1a6000830185610ac3565b610e276020830184610af7565b9392505050565b60008115159050919050565b610e4381610e2e565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b600060208284031215610e7c57610e7b610b21565b5b6000610e8a84828501610e51565b91505092915050565b6000610e9e82610aed565b9150610ea983610aed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee257610ee1610d14565b5b828202905092915050565b6000604082019050610f026000830185610af7565b610f0f6020830184610af7565b9392505050565b7f49444f2048617320206e6f7420656e6465642c20636c61696d20756e6176616960008201527f6c61626c65000000000000000000000000000000000000000000000000000000602082015250565b6000610f72602583610bbf565b9150610f7d82610f16565b604082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b7f796f752064696420000000000000000000000000000000000000000000000000600082015250565b6000610fde600883610bbf565b9150610fe982610fa8565b602082019050919050565b6000602082019050818103600083015261100d81610fd1565b9050919050565b7f49434f206973206f6e0000000000000000000000000000000000000000000000600082015250565b600061104a600983610bbf565b915061105582611014565b602082019050919050565b600060208201905081810360008301526110798161103d565b9050919050565b60006060820190506110956000830186610ac3565b6110a26020830185610ac3565b6110af6040830184610af7565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611113602a83610bbf565b915061111e826110b7565b604082019050919050565b6000602082019050818103600083015261114281611106565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006111a5602683610bbf565b91506111b082611149565b604082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611211601d83610bbf565b915061121c826111db565b602082019050919050565b6000602082019050818103600083015261124081611204565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561127b578082015181840152602081019050611260565b8381111561128a576000848401525b50505050565b600061129b82611247565b6112a58185611252565b93506112b581856020860161125d565b80840191505092915050565b60006112cd8284611290565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006112ff826112d8565b6113098185610bbf565b935061131981856020860161125d565b611322816112e3565b840191505092915050565b6000602082019050818103600083015261134781846112f4565b90509291505056fea2646970667358221220ff0cd9cfff8760ade8802bfa2000e81d067d168839916fc2ccfb01a2f15f9a9464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3A17441 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC3A17441 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xD7997F7E EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xDC55920F EQ PUSH2 0x133 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6385F2FB EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x76D812EA EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC2DB2C42 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x161 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x113 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC PUSH1 0x40 MLOAD PUSH2 0x203 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP1 PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP3 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP PUSH2 0x3F8 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA4CADF0D4383CB43C8249E3CC678F6690BDBAA01421C99FD9B14EDAC62CDE80 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x314BF1CCC32C608A6175053B0DA1933B3A745B3F799011003A4C39AAB0C518A3 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x580 SWAP3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CC SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC PUSH1 0x40 MLOAD PUSH2 0x781 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x80E DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x814 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8D6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x896 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8EA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x941 DUP6 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9FB DUP3 DUP3 DUP7 PUSH2 0xA2A JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA3A JUMPI DUP3 SWAP1 POP PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xA4D JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACC DUP2 PUSH2 0xAB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB00 DUP2 PUSH2 0xAED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2F DUP2 PUSH2 0xAED JUMP JUMPDEST DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4C DUP2 PUSH2 0xB26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP5 DUP3 DUP6 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA4 DUP6 DUP3 DUP7 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBB5 DUP6 DUP3 DUP7 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2069732070617573656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 PUSH1 0xD DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC35 DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC72 PUSH1 0x1F DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC7D DUP3 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA1 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49444F20686173206E6F74207374617274656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDE PUSH1 0x13 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCE9 DUP3 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD0D DUP2 PUSH2 0xCD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD4E DUP3 PUSH2 0xAED JUMP JUMPDEST SWAP2 POP PUSH2 0xD59 DUP4 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xD14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E7320686173206265656E20736F6C640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCF PUSH1 0x18 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFE DUP2 PUSH2 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xE2E JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE60 DUP2 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0xB21 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP5 DUP3 DUP6 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9E DUP3 PUSH2 0xAED JUMP JUMPDEST SWAP2 POP PUSH2 0xEA9 DUP4 PUSH2 0xAED JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0xD14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0xF0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x49444F2048617320206E6F7420656E6465642C20636C61696D20756E61766169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C61626C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF72 PUSH1 0x25 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xF7D DUP3 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA1 DUP2 PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F752064696420000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDE PUSH1 0x8 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0xFE9 DUP3 PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49434F206973206F6E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A PUSH1 0x9 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1079 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1095 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x10A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x10AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAF7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1113 PUSH1 0x2A DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x111E DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1142 DUP2 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A5 PUSH1 0x26 DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x11B0 DUP3 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1211 PUSH1 0x1D DUP4 PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP PUSH2 0x121C DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1240 DUP2 PUSH2 0x1204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x127B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1260 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x128A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B DUP3 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x12A5 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CD DUP3 DUP5 PUSH2 0x1290 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FF DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1309 DUP2 DUP6 PUSH2 0xBBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125D JUMP JUMPDEST PUSH2 0x1322 DUP2 PUSH2 0x12E3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1347 DUP2 DUP5 PUSH2 0x12F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC 0xD9 0xCF SELFDESTRUCT DUP8 PUSH1 0xAD 0xE8 DUP1 0x2B STATICCALL KECCAK256 STOP 0xE8 SAR MOD PUSH30 0x168839916FC2CCFB01A2F15F9A9464736F6C634300080D00330000000000 ",
							"sourceMap": "1245:2174:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3258:150;;;:::i;:::-;;1403:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2122:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2837:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1332:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:197;;;:::i;:::-;;3104:146;;;:::i;:::-;;1368:28;;;:::o;3258:150::-;3317:5;;;;;;;;;;;3303:19;;:10;:19;;;3295:28;;;;;;3349:5;3336:10;;:18;;;;;;;;;;;;;;;;;;3370:30;;;;;;:::i;:::-;;;;;;;;3258:150::o;1403:22::-;;;;:::o;2122:502::-;1744:1:0;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2213:4:8::1;2199:18;;:10;;;;;;;;;;;:18;;;2191:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2252:13;2282:7;2268:11;;:21;;;;:::i;:::-;2252:37;;2316:10;;2308:5;:18;2300:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2373:4;2366:20;;;2395:4;2402:7;2366:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2421:65;2451:10;2471:4;2478:7;2428:4;2421:29;;;;:65;;;;;;:::i;:::-;2522:7;2497:8;:20;2506:10;2497:20;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2555:7;2540:11;;:22;;;;;;;:::i;:::-;;;;;;;;2596:10;2580:36;;;2608:7;2580:36;;;;;;:::i;:::-;;;;;;;;2180:444;1701:1:0::0;2628:7;:22;;;;2122:502:8;:::o;2837:259::-;2932:5;;;;;;;;;;;2918:19;;:10;:19;;;2910:28;;;;;;2978:8;2964:11;:22;;;;:::i;:::-;2951:10;:35;;;;3024:8;3010:11;:22;;;;:::i;:::-;2997:10;:35;;;;3050:36;3061:11;3074;3050:36;;;;;;;:::i;:::-;;;;;;;;2837:259;;:::o;1332:29::-;;;:::o;2632:197::-;1744:1:0;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2718:5:8::1;2704:19;;:10;;;;;;;;;;;:19;;;2696:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2807:1;2784:8;:20;2793:10;2784:20;;;;;;;;;;;;;;;;:24;2776:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1701:1:0::0;2628:7;:22;;;;2632:197:8:o;3104:146::-;3164:5;;;;;;;;;;;3150:19;;:10;:19;;;3142:28;;;;;;3196:4;3183:10;;:17;;;;;;;;;;;;;;;;;;3216:26;;;;;;:::i;:::-;;;;;;;;3104:146::o;974:241:5:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3861:223:6:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:742::-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:126:9:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:474::-;2031:6;2039;2088:2;2076:9;2067:7;2063:23;2059:32;2056:119;;;2094:79;;:::i;:::-;2056:119;2214:1;2239:53;2284:7;2275:6;2264:9;2260:22;2239:53;:::i;:::-;2229:63;;2185:117;2341:2;2367:53;2412:7;2403:6;2392:9;2388:22;2367:53;:::i;:::-;2357:63;;2312:118;1963:474;;;;;:::o;2443:169::-;2527:11;2561:6;2556:3;2549:19;2601:4;2596:3;2592:14;2577:29;;2443:169;;;;:::o;2618:163::-;2758:15;2754:1;2746:6;2742:14;2735:39;2618:163;:::o;2787:366::-;2929:3;2950:67;3014:2;3009:3;2950:67;:::i;:::-;2943:74;;3026:93;3115:3;3026:93;:::i;:::-;3144:2;3139:3;3135:12;3128:19;;2787:366;;;:::o;3159:419::-;3325:4;3363:2;3352:9;3348:18;3340:26;;3412:9;3406:4;3402:20;3398:1;3387:9;3383:17;3376:47;3440:131;3566:4;3440:131;:::i;:::-;3432:139;;3159:419;;;:::o;3584:181::-;3724:33;3720:1;3712:6;3708:14;3701:57;3584:181;:::o;3771:366::-;3913:3;3934:67;3998:2;3993:3;3934:67;:::i;:::-;3927:74;;4010:93;4099:3;4010:93;:::i;:::-;4128:2;4123:3;4119:12;4112:19;;3771:366;;;:::o;4143:419::-;4309:4;4347:2;4336:9;4332:18;4324:26;;4396:9;4390:4;4386:20;4382:1;4371:9;4367:17;4360:47;4424:131;4550:4;4424:131;:::i;:::-;4416:139;;4143:419;;;:::o;4568:169::-;4708:21;4704:1;4696:6;4692:14;4685:45;4568:169;:::o;4743:366::-;4885:3;4906:67;4970:2;4965:3;4906:67;:::i;:::-;4899:74;;4982:93;5071:3;4982:93;:::i;:::-;5100:2;5095:3;5091:12;5084:19;;4743:366;;;:::o;5115:419::-;5281:4;5319:2;5308:9;5304:18;5296:26;;5368:9;5362:4;5358:20;5354:1;5343:9;5339:17;5332:47;5396:131;5522:4;5396:131;:::i;:::-;5388:139;;5115:419;;;:::o;5540:180::-;5588:77;5585:1;5578:88;5685:4;5682:1;5675:15;5709:4;5706:1;5699:15;5726:305;5766:3;5785:20;5803:1;5785:20;:::i;:::-;5780:25;;5819:20;5837:1;5819:20;:::i;:::-;5814:25;;5973:1;5905:66;5901:74;5898:1;5895:81;5892:107;;;5979:18;;:::i;:::-;5892:107;6023:1;6020;6016:9;6009:16;;5726:305;;;;:::o;6037:174::-;6177:26;6173:1;6165:6;6161:14;6154:50;6037:174;:::o;6217:366::-;6359:3;6380:67;6444:2;6439:3;6380:67;:::i;:::-;6373:74;;6456:93;6545:3;6456:93;:::i;:::-;6574:2;6569:3;6565:12;6558:19;;6217:366;;;:::o;6589:419::-;6755:4;6793:2;6782:9;6778:18;6770:26;;6842:9;6836:4;6832:20;6828:1;6817:9;6813:17;6806:47;6870:131;6996:4;6870:131;:::i;:::-;6862:139;;6589:419;;;:::o;7014:332::-;7135:4;7173:2;7162:9;7158:18;7150:26;;7186:71;7254:1;7243:9;7239:17;7230:6;7186:71;:::i;:::-;7267:72;7335:2;7324:9;7320:18;7311:6;7267:72;:::i;:::-;7014:332;;;;;:::o;7352:90::-;7386:7;7429:5;7422:13;7415:21;7404:32;;7352:90;;;:::o;7448:116::-;7518:21;7533:5;7518:21;:::i;:::-;7511:5;7508:32;7498:60;;7554:1;7551;7544:12;7498:60;7448:116;:::o;7570:137::-;7624:5;7655:6;7649:13;7640:22;;7671:30;7695:5;7671:30;:::i;:::-;7570:137;;;;:::o;7713:345::-;7780:6;7829:2;7817:9;7808:7;7804:23;7800:32;7797:119;;;7835:79;;:::i;:::-;7797:119;7955:1;7980:61;8033:7;8024:6;8013:9;8009:22;7980:61;:::i;:::-;7970:71;;7926:125;7713:345;;;;:::o;8064:348::-;8104:7;8127:20;8145:1;8127:20;:::i;:::-;8122:25;;8161:20;8179:1;8161:20;:::i;:::-;8156:25;;8349:1;8281:66;8277:74;8274:1;8271:81;8266:1;8259:9;8252:17;8248:105;8245:131;;;8356:18;;:::i;:::-;8245:131;8404:1;8401;8397:9;8386:20;;8064:348;;;;:::o;8418:332::-;8539:4;8577:2;8566:9;8562:18;8554:26;;8590:71;8658:1;8647:9;8643:17;8634:6;8590:71;:::i;:::-;8671:72;8739:2;8728:9;8724:18;8715:6;8671:72;:::i;:::-;8418:332;;;;;:::o;8756:224::-;8896:34;8892:1;8884:6;8880:14;8873:58;8965:7;8960:2;8952:6;8948:15;8941:32;8756:224;:::o;8986:366::-;9128:3;9149:67;9213:2;9208:3;9149:67;:::i;:::-;9142:74;;9225:93;9314:3;9225:93;:::i;:::-;9343:2;9338:3;9334:12;9327:19;;8986:366;;;:::o;9358:419::-;9524:4;9562:2;9551:9;9547:18;9539:26;;9611:9;9605:4;9601:20;9597:1;9586:9;9582:17;9575:47;9639:131;9765:4;9639:131;:::i;:::-;9631:139;;9358:419;;;:::o;9783:158::-;9923:10;9919:1;9911:6;9907:14;9900:34;9783:158;:::o;9947:365::-;10089:3;10110:66;10174:1;10169:3;10110:66;:::i;:::-;10103:73;;10185:93;10274:3;10185:93;:::i;:::-;10303:2;10298:3;10294:12;10287:19;;9947:365;;;:::o;10318:419::-;10484:4;10522:2;10511:9;10507:18;10499:26;;10571:9;10565:4;10561:20;10557:1;10546:9;10542:17;10535:47;10599:131;10725:4;10599:131;:::i;:::-;10591:139;;10318:419;;;:::o;10743:159::-;10883:11;10879:1;10871:6;10867:14;10860:35;10743:159;:::o;10908:365::-;11050:3;11071:66;11135:1;11130:3;11071:66;:::i;:::-;11064:73;;11146:93;11235:3;11146:93;:::i;:::-;11264:2;11259:3;11255:12;11248:19;;10908:365;;;:::o;11279:419::-;11445:4;11483:2;11472:9;11468:18;11460:26;;11532:9;11526:4;11522:20;11518:1;11507:9;11503:17;11496:47;11560:131;11686:4;11560:131;:::i;:::-;11552:139;;11279:419;;;:::o;11704:442::-;11853:4;11891:2;11880:9;11876:18;11868:26;;11904:71;11972:1;11961:9;11957:17;11948:6;11904:71;:::i;:::-;11985:72;12053:2;12042:9;12038:18;12029:6;11985:72;:::i;:::-;12067;12135:2;12124:9;12120:18;12111:6;12067:72;:::i;:::-;11704:442;;;;;;:::o;12152:229::-;12292:34;12288:1;12280:6;12276:14;12269:58;12361:12;12356:2;12348:6;12344:15;12337:37;12152:229;:::o;12387:366::-;12529:3;12550:67;12614:2;12609:3;12550:67;:::i;:::-;12543:74;;12626:93;12715:3;12626:93;:::i;:::-;12744:2;12739:3;12735:12;12728:19;;12387:366;;;:::o;12759:419::-;12925:4;12963:2;12952:9;12948:18;12940:26;;13012:9;13006:4;13002:20;12998:1;12987:9;12983:17;12976:47;13040:131;13166:4;13040:131;:::i;:::-;13032:139;;12759:419;;;:::o;13184:225::-;13324:34;13320:1;13312:6;13308:14;13301:58;13393:8;13388:2;13380:6;13376:15;13369:33;13184:225;:::o;13415:366::-;13557:3;13578:67;13642:2;13637:3;13578:67;:::i;:::-;13571:74;;13654:93;13743:3;13654:93;:::i;:::-;13772:2;13767:3;13763:12;13756:19;;13415:366;;;:::o;13787:419::-;13953:4;13991:2;13980:9;13976:18;13968:26;;14040:9;14034:4;14030:20;14026:1;14015:9;14011:17;14004:47;14068:131;14194:4;14068:131;:::i;:::-;14060:139;;13787:419;;;:::o;14212:179::-;14352:31;14348:1;14340:6;14336:14;14329:55;14212:179;:::o;14397:366::-;14539:3;14560:67;14624:2;14619:3;14560:67;:::i;:::-;14553:74;;14636:93;14725:3;14636:93;:::i;:::-;14754:2;14749:3;14745:12;14738:19;;14397:366;;;:::o;14769:419::-;14935:4;14973:2;14962:9;14958:18;14950:26;;15022:9;15016:4;15012:20;15008:1;14997:9;14993:17;14986:47;15050:131;15176:4;15050:131;:::i;:::-;15042:139;;14769:419;;;:::o;15194:98::-;15245:6;15279:5;15273:12;15263:22;;15194:98;;;:::o;15298:147::-;15399:11;15436:3;15421:18;;15298:147;;;;:::o;15451:307::-;15519:1;15529:113;15543:6;15540:1;15537:13;15529:113;;;15628:1;15623:3;15619:11;15613:18;15609:1;15604:3;15600:11;15593:39;15565:2;15562:1;15558:10;15553:15;;15529:113;;;15660:6;15657:1;15654:13;15651:101;;;15740:1;15731:6;15726:3;15722:16;15715:27;15651:101;15500:258;15451:307;;;:::o;15764:373::-;15868:3;15896:38;15928:5;15896:38;:::i;:::-;15950:88;16031:6;16026:3;15950:88;:::i;:::-;15943:95;;16047:52;16092:6;16087:3;16080:4;16073:5;16069:16;16047:52;:::i;:::-;16124:6;16119:3;16115:16;16108:23;;15872:265;15764:373;;;;:::o;16143:271::-;16273:3;16295:93;16384:3;16375:6;16295:93;:::i;:::-;16288:100;;16405:3;16398:10;;16143:271;;;;:::o;16420:99::-;16472:6;16506:5;16500:12;16490:22;;16420:99;;;:::o;16525:102::-;16566:6;16617:2;16613:7;16608:2;16601:5;16597:14;16593:28;16583:38;;16525:102;;;:::o;16633:364::-;16721:3;16749:39;16782:5;16749:39;:::i;:::-;16804:71;16868:6;16863:3;16804:71;:::i;:::-;16797:78;;16884:52;16929:6;16924:3;16917:4;16910:5;16906:16;16884:52;:::i;:::-;16961:29;16983:6;16961:29;:::i;:::-;16956:3;16952:39;16945:46;;16725:272;16633:364;;;;:::o;17003:313::-;17116:4;17154:2;17143:9;17139:18;17131:26;;17203:9;17197:4;17193:20;17189:1;17178:9;17174:17;17167:47;17231:78;17304:4;17295:6;17231:78;:::i;:::-;17223:86;;17003:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "999400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BeginIDO()": "28499",
								"DAZ()": "infinite",
								"StopIDO()": "28456",
								"USDT()": "infinite",
								"claimPurchasedToken()": "33872",
								"editIco(uint256,uint256)": "infinite",
								"purchaseToken(uint256)": "infinite",
								"tokenPrice()": "2474"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1957,
									"end": 1967,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1954,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1949,
									"end": 1954,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2013,
									"name": "PUSH",
									"source": 8,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1991,
									"end": 2002,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1991,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2013,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 2013,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 2013,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 2013,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2037,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2037,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2055,
									"end": 2060,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2106,
									"name": "PUSH",
									"source": 8,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2084,
									"end": 2095,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2084,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2081,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2071,
									"end": 2106,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2106,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 2114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2031,
									"end": 2211,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2031,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2079,
									"end": 2156,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2069,
									"end": 2157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2176,
									"end": 2180,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2173,
									"end": 2174,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2166,
									"end": 2181,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2200,
									"end": 2204,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2197,
									"end": 2198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2190,
									"end": 2205,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2257,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2298,
									"end": 2299,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2280,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2280,
									"end": 2300,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2280,
									"end": 2300,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2280,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2275,
									"end": 2300,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2275,
									"end": 2300,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2314,
									"end": 2334,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2314,
									"end": 2334,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2314,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2334,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2334,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2503,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2434,
									"end": 2500,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2430,
									"end": 2504,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2424,
									"end": 2505,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2419,
									"end": 2420,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2421,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2405,
									"end": 2422,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2506,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2529,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2529,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2398,
									"end": 2529,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2529,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2398,
									"end": 2529,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2557,
									"end": 2558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2559,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2559,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2559,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2565,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1471"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1469"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3419,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff0cd9cfff8760ade8802bfa2000e81d067d168839916fc2ccfb01a2f15f9a9464736f6c634300080d0033",
									".code": [
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "C3A17441"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "C3A17441"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "C54E44EB"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "D7997F7E"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "DC55920F"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "6385F2FB"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "76D812EA"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "7FF9B596"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "C2DB2C42"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3419,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1471"
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1396,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3313,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3408,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1425,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2279,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2268,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2326,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2316,
											"end": 2326,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2300,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1469"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2451,
											"end": 2461,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2475,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1469"
										},
										{
											"begin": 2421,
											"end": 2450,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2421,
											"end": 2450,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2421,
											"end": 2450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2421,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2505,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2516,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 2551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH",
											"source": 8,
											"value": "DA4CADF0D4383CB43C8249E3CC678F6690BDBAA01421C99FD9B14EDAC62CDE80"
										},
										{
											"begin": 2608,
											"end": 2615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2616,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2624,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2918,
											"end": 2937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2918,
											"end": 2937,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2937,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2910,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 2986,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2951,
											"end": 2986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2986,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3032,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3010,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3007,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2997,
											"end": 3032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3032,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "PUSH",
											"source": 8,
											"value": "314BF1CCC32C608A6175053B0DA1933B3A745B3F799011003A4C39AAB0C518A3"
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 3096,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1469"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2704,
											"end": 2723,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2696,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2792,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2803,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2808,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2776,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2829,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3160,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3169,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3142,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "PUSH",
											"source": 8,
											"value": "71002079AB3DE7FEB03EE30C84BAF1D2350D4FFE16709D3DACB5E1037A0FE1CC"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3250,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2085,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2091,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2556,
											"end": 2559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2618,
											"end": 2781,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2618,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "49434F2069732070617573656400000000000000000000000000000000000000"
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2781,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3014,
											"end": 3016,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3009,
											"end": 3012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2950,
											"end": 3017,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3017,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2950,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3115,
											"end": 3118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2787,
											"end": 3153,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3340,
											"end": 3366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3440,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3440,
											"end": 3571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3440,
											"end": 3571,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3440,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3578,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3765,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3584,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 3757,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3765,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3913,
											"end": 3916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3993,
											"end": 3996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3934,
											"end": 4001,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4001,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3934,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 4001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 4001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4099,
											"end": 4102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4010,
											"end": 4103,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4103,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4010,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 4137,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4406,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4550,
											"end": 4554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4424,
											"end": 4555,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4424,
											"end": 4555,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4424,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4568,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4568,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4729,
											"name": "PUSH",
											"source": 9,
											"value": "49444F20686173206E6F74207374617274656400000000000000000000000000"
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4730,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4965,
											"end": 4968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4906,
											"end": 4973,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4906,
											"end": 4973,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4906,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 4973,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 4973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5071,
											"end": 5074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4982,
											"end": 5075,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4982,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5084,
											"end": 5103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5084,
											"end": 5103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 5109,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5378,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5339,
											"end": 5356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5396,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5396,
											"end": 5527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5396,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5396,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5115,
											"end": 5534,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5540,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5540,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5665,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5675,
											"end": 5690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5714,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5819,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5814,
											"end": 5839,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5814,
											"end": 5839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5901,
											"end": 5975,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 5899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5895,
											"end": 5976,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5892,
											"end": 5999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5999,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5892,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6009,
											"end": 6025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 6031,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6037,
											"end": 6211,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6037,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6203,
											"name": "PUSH",
											"source": 9,
											"value": "416C6C20746F6B656E7320686173206265656E20736F6C640000000000000000"
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6161,
											"end": 6175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6154,
											"end": 6204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6037,
											"end": 6211,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 6380,
											"end": 6447,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6380,
											"end": 6447,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6380,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6456,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6456,
											"end": 6549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6456,
											"end": 6549,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6456,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6574,
											"end": 6576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6583,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6826,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6870,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6870,
											"end": 7001,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6870,
											"end": 7001,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6870,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 7001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 7001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 7008,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7175,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7239,
											"end": 7256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7236,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 7186,
											"end": 7257,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7186,
											"end": 7257,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7186,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7320,
											"end": 7338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7267,
											"end": 7339,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7267,
											"end": 7339,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 7267,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7346,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7386,
											"end": 7393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7429,
											"end": 7434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7422,
											"end": 7435,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7415,
											"end": 7436,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 7436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 7436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7442,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7448,
											"end": 7564,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7448,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7533,
											"end": 7538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7518,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7540,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7498,
											"end": 7558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7556,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7558,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7498,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7564,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7624,
											"end": 7629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7695,
											"end": 7700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7671,
											"end": 7701,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7671,
											"end": 7701,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7671,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7707,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7829,
											"end": 7831,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 7827,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7832,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7797,
											"end": 7916,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7797,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7797,
											"end": 7916,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7835,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 7835,
											"end": 7914,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7835,
											"end": 7914,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7835,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7797,
											"end": 7916,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7797,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 7956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8033,
											"end": 8040,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7980,
											"end": 8041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7980,
											"end": 8041,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7980,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7970,
											"end": 8041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7970,
											"end": 8041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7926,
											"end": 8051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 8058,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8156,
											"end": 8181,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8156,
											"end": 8181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8347,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8351,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8352,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8259,
											"end": 8268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8269,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8353,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8376,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8245,
											"end": 8376,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8376,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8245,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8397,
											"end": 8406,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8412,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8643,
											"end": 8660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8737,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8756,
											"end": 8980,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8756,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8930,
											"name": "PUSH",
											"source": 9,
											"value": "49444F2048617320206E6F7420656E6465642C20636C61696D20756E61766169"
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8880,
											"end": 8894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "PUSH",
											"source": 9,
											"value": "6C61626C65000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8960,
											"end": 8962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8952,
											"end": 8958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 8963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8941,
											"end": 8973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9128,
											"end": 9131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 9213,
											"end": 9215,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 9208,
											"end": 9211,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 9149,
											"end": 9216,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9149,
											"end": 9216,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 9149,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9225,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 9314,
											"end": 9317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9225,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 9225,
											"end": 9318,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9225,
											"end": 9318,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 9225,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9345,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9327,
											"end": 9346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9327,
											"end": 9346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9352,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9639,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9639,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 9639,
											"end": 9770,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9639,
											"end": 9770,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 9639,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9631,
											"end": 9770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9631,
											"end": 9770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9777,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9783,
											"end": 9941,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 9783,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9923,
											"end": 9933,
											"name": "PUSH",
											"source": 9,
											"value": "796F752064696420000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9941,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10169,
											"end": 10172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10110,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10110,
											"end": 10176,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10176,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10110,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10103,
											"end": 10176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10103,
											"end": 10176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 10185,
											"end": 10278,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10185,
											"end": 10278,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10185,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10305,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10294,
											"end": 10306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10511,
											"end": 10520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10580,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10561,
											"end": 10581,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10557,
											"end": 10558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10555,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10542,
											"end": 10559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10535,
											"end": 10582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 10725,
											"end": 10729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 10599,
											"end": 10730,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10599,
											"end": 10730,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 10599,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10318,
											"end": 10737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10743,
											"end": 10902,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10743,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 10894,
											"name": "PUSH",
											"source": 9,
											"value": "49434F206973206F6E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 10877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 10881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10860,
											"end": 10895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10743,
											"end": 10902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10743,
											"end": 10902,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11071,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11135,
											"end": 11136,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11130,
											"end": 11133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11071,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 11071,
											"end": 11137,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11071,
											"end": 11137,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11071,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11064,
											"end": 11137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11064,
											"end": 11137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11235,
											"end": 11238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11146,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 11146,
											"end": 11239,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11146,
											"end": 11239,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11146,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11264,
											"end": 11266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11259,
											"end": 11262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11255,
											"end": 11267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11248,
											"end": 11267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11248,
											"end": 11267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10908,
											"end": 11273,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11445,
											"end": 11449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11485,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11472,
											"end": 11481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11460,
											"end": 11486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11532,
											"end": 11541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11522,
											"end": 11542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11496,
											"end": 11543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11686,
											"end": 11690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 11560,
											"end": 11691,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11560,
											"end": 11691,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11560,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11698,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11891,
											"end": 11893,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11868,
											"end": 11894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11868,
											"end": 11894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11904,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11961,
											"end": 11970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11957,
											"end": 11974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11948,
											"end": 11954,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11904,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11904,
											"end": 11975,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11904,
											"end": 11975,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11904,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12053,
											"end": 12055,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12042,
											"end": 12051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12029,
											"end": 12035,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12135,
											"end": 12137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12124,
											"end": 12133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12117,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 12067,
											"end": 12139,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12067,
											"end": 12139,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12067,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 12146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12152,
											"end": 12381,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 12152,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12326,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12269,
											"end": 12327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12373,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12344,
											"end": 12359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12381,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12614,
											"end": 12616,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12609,
											"end": 12612,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12550,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12543,
											"end": 12617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12543,
											"end": 12617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 12715,
											"end": 12718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 12626,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12744,
											"end": 12746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12728,
											"end": 12747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12728,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12753,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12948,
											"end": 12966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13012,
											"end": 13021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13002,
											"end": 13022,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 12999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12983,
											"end": 13000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 13023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 13040,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13032,
											"end": 13171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13032,
											"end": 13171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12759,
											"end": 13178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13184,
											"end": 13409,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 13184,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13324,
											"end": 13358,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13320,
											"end": 13321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13308,
											"end": 13322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13301,
											"end": 13359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13393,
											"end": 13401,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13388,
											"end": 13390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13380,
											"end": 13386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13376,
											"end": 13391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13369,
											"end": 13402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13409,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13557,
											"end": 13560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13578,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 13642,
											"end": 13644,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 13637,
											"end": 13640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13578,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 13578,
											"end": 13645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13578,
											"end": 13645,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 13578,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13654,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 13743,
											"end": 13746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13654,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 13654,
											"end": 13747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13654,
											"end": 13747,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 13654,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13772,
											"end": 13774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13763,
											"end": 13775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13756,
											"end": 13775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13756,
											"end": 13775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13781,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 13957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 13989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13976,
											"end": 13994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13968,
											"end": 13994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13968,
											"end": 13994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14030,
											"end": 14050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14026,
											"end": 14027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14015,
											"end": 14024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14011,
											"end": 14028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14004,
											"end": 14051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 14194,
											"end": 14198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 14068,
											"end": 14199,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14068,
											"end": 14199,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 14068,
											"end": 14199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14060,
											"end": 14199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14060,
											"end": 14199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13787,
											"end": 14206,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14212,
											"end": 14391,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 14212,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14352,
											"end": 14383,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14348,
											"end": 14349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14212,
											"end": 14391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14212,
											"end": 14391,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14539,
											"end": 14542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14560,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 14624,
											"end": 14626,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14619,
											"end": 14622,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14560,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 14560,
											"end": 14627,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14560,
											"end": 14627,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 14560,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14636,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 14725,
											"end": 14728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14636,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 14636,
											"end": 14729,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14636,
											"end": 14729,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 14636,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14754,
											"end": 14756,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14749,
											"end": 14752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14745,
											"end": 14757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14397,
											"end": 14763,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 14939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14973,
											"end": 14975,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14962,
											"end": 14971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14958,
											"end": 14976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14950,
											"end": 14976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14950,
											"end": 14976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15016,
											"end": 15020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15032,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14993,
											"end": 15010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15050,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 15176,
											"end": 15180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15050,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 15050,
											"end": 15181,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15050,
											"end": 15181,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 15050,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15042,
											"end": 15181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15042,
											"end": 15181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14769,
											"end": 15188,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15245,
											"end": 15251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15279,
											"end": 15284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15273,
											"end": 15285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15263,
											"end": 15285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15263,
											"end": 15285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15292,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15298,
											"end": 15445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15519,
											"end": 15520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15543,
											"end": 15549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15540,
											"end": 15541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15537,
											"end": 15550,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15623,
											"end": 15626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15613,
											"end": 15631,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15609,
											"end": 15610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15600,
											"end": 15611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15565,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15562,
											"end": 15563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15558,
											"end": 15568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15553,
											"end": 15568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15553,
											"end": 15568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 15529,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15660,
											"end": 15666,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15657,
											"end": 15658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15654,
											"end": 15667,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15752,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 15651,
											"end": 15752,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15740,
											"end": 15741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 15729,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15722,
											"end": 15738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15715,
											"end": 15742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15752,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 15651,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15500,
											"end": 15758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15758,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15868,
											"end": 15871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 15928,
											"end": 15933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 15896,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15950,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 16031,
											"end": 16037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16026,
											"end": 16029,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15950,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 15950,
											"end": 16038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15950,
											"end": 16038,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 15950,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15943,
											"end": 16038,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15943,
											"end": 16038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16047,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 16092,
											"end": 16098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16087,
											"end": 16090,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16080,
											"end": 16084,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16073,
											"end": 16078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16047,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 16047,
											"end": 16099,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16047,
											"end": 16099,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 16047,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16124,
											"end": 16130,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16115,
											"end": 16131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16108,
											"end": 16131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16108,
											"end": 16131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15872,
											"end": 16137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 16137,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16295,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 16384,
											"end": 16387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16381,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16295,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 16295,
											"end": 16388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16295,
											"end": 16388,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 16295,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16288,
											"end": 16388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16288,
											"end": 16388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16405,
											"end": 16408,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16414,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16472,
											"end": 16478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16500,
											"end": 16512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16490,
											"end": 16512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16490,
											"end": 16512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16420,
											"end": 16519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16566,
											"end": 16572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16617,
											"end": 16619,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16613,
											"end": 16620,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16608,
											"end": 16610,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16601,
											"end": 16606,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16597,
											"end": 16611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16593,
											"end": 16621,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16583,
											"end": 16621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16583,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16627,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16721,
											"end": 16724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16749,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 16782,
											"end": 16787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16749,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 16749,
											"end": 16788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16749,
											"end": 16788,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 16749,
											"end": 16788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16804,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 16868,
											"end": 16874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16863,
											"end": 16866,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16804,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 16804,
											"end": 16875,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16804,
											"end": 16875,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 16804,
											"end": 16875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16797,
											"end": 16875,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16797,
											"end": 16875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16884,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 16929,
											"end": 16935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16924,
											"end": 16927,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16917,
											"end": 16921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16910,
											"end": 16915,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16906,
											"end": 16922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16884,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 16884,
											"end": 16936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16884,
											"end": 16936,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 16884,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 16983,
											"end": 16989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16956,
											"end": 16959,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16952,
											"end": 16991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16725,
											"end": 16997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16633,
											"end": 16997,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17116,
											"end": 17120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17156,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17143,
											"end": 17152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17139,
											"end": 17157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17131,
											"end": 17157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17131,
											"end": 17157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17203,
											"end": 17212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17189,
											"end": 17190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17178,
											"end": 17187,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17174,
											"end": 17191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17167,
											"end": 17214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 17304,
											"end": 17308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17295,
											"end": 17301,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 17231,
											"end": 17309,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17231,
											"end": 17309,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 17231,
											"end": 17309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17223,
											"end": 17309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17223,
											"end": 17309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17003,
											"end": 17316,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BeginIDO()": "dc55920f",
							"DAZ()": "6385f2fb",
							"StopIDO()": "76d812ea",
							"USDT()": "c54e44eb",
							"claimPurchasedToken()": "d7997f7e",
							"editIco(uint256,uint256)": "c3a17441",
							"purchaseToken(uint256)": "c2db2c42",
							"tokenPrice()": "7ff9b596"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_IUSDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_IDAZ\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetSale\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"icoAlert\",\"type\":\"string\"}],\"name\":\"ICOStartAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTokenprice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"icoUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"latestPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BeginIDO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAZ\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StopIDO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPurchasedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetSale\",\"type\":\"uint256\"}],\"name\":\"editIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ico.sol\":\"Amestarter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ico.sol\":{\"keccak256\":\"0xf17210a206255bfab41dfd3c0aa3443e5408a70e97c27c65fd8aca8da12ed274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b132b1325589af3038b13641c3dc2537f3e7958d626322d2ff6032cd4a9e4a74\",\"dweb:/ipfs/QmcfnF88Jo1WxYoT1jFD5LmY2AhmCT9j2BC9rbkdqEDPGj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1473,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1475,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1477,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "IDOStarted",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 1479,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "targetSale",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1481,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "totalRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1485,
								"contract": "contracts/ico.sol:Amestarter",
								"label": "purchase",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDAZ": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ico.sol\":\"IDAZ\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ico.sol\":{\"keccak256\":\"0xf17210a206255bfab41dfd3c0aa3443e5408a70e97c27c65fd8aca8da12ed274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b132b1325589af3038b13641c3dc2537f3e7958d626322d2ff6032cd4a9e4a74\",\"dweb:/ipfs/QmcfnF88Jo1WxYoT1jFD5LmY2AhmCT9j2BC9rbkdqEDPGj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IKRC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ico.sol\":\"IKRC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ico.sol\":{\"keccak256\":\"0xf17210a206255bfab41dfd3c0aa3443e5408a70e97c27c65fd8aca8da12ed274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b132b1325589af3038b13641c3dc2537f3e7958d626322d2ff6032cd4a9e4a74\",\"dweb:/ipfs/QmcfnF88Jo1WxYoT1jFD5LmY2AhmCT9j2BC9rbkdqEDPGj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUSDT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ico.sol\":\"IUSDT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ico.sol\":{\"keccak256\":\"0xf17210a206255bfab41dfd3c0aa3443e5408a70e97c27c65fd8aca8da12ed274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b132b1325589af3038b13641c3dc2537f3e7958d626322d2ff6032cd4a9e4a74\",\"dweb:/ipfs/QmcfnF88Jo1WxYoT1jFD5LmY2AhmCT9j2BC9rbkdqEDPGj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1362
						],
						"ERC20": [
							625
						],
						"IERC20": [
							703
						],
						"IERC20Metadata": [
							728
						]
					},
					"id": 626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 42,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 626,
							"sourceUnit": 704,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 626,
							"sourceUnit": 729,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 44,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 626,
							"sourceUnit": 1363,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 46,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1362,
										"src": "1421:7:1"
									},
									"id": 47,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:1"
								},
								{
									"baseName": {
										"id": 48,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1430:6:1"
									},
									"id": 49,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:1"
								},
								{
									"baseName": {
										"id": 50,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "1438:14:1"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 45,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 625,
							"linearizedBaseContracts": [
								625,
								728,
								703,
								1362
							],
							"name": "ERC20",
							"nameLocation": "1412:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "1459:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 54,
										"keyType": {
											"id": 52,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 53,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "1511:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 60,
										"keyType": {
											"id": 56,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 59,
											"keyType": {
												"id": 57,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 58,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 63,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "1585:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 65,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "1620:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 64,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "1646:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 66,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2034:57:1",
										"statements": [
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "2044:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 76,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "2052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:1"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 80,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "2077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 84,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2011:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 71,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:1"
									},
									"scope": 625,
									"src": "1978:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2225:29:1",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2235:12:1"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 87,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:1"
									},
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2210:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 88,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:1"
									},
									"scope": 625,
									"src": "2156:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2438:31:1",
										"statements": [
											{
												"expression": {
													"id": 101,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "2455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 100,
												"id": 102,
												"nodeType": "Return",
												"src": "2448:14:1"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:1"
									},
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2423:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:1"
									},
									"scope": 625,
									"src": "2367:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3158:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 110,
												"id": 112,
												"nodeType": "Return",
												"src": "3168:9:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 107,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3151:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 108,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:1"
									},
									"scope": 625,
									"src": "3093:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3314:36:1",
										"statements": [
											{
												"expression": {
													"id": 121,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 63,
													"src": "3331:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 122,
												"nodeType": "Return",
												"src": "3324:19:1"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:1"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:1"
									},
									"scope": 625,
									"src": "3244:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										660
									],
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3491:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 133,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3508:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 135,
													"indexExpression": {
														"id": 134,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 132,
												"id": 136,
												"nodeType": "Return",
												"src": "3501:25:1"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:1"
									},
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3427:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:1"
									},
									"scope": 625,
									"src": "3408:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										670
									],
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "3814:104:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "3824:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 149,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 151,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "3840:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 155,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "3872:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3879:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3883:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 154,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 148,
												"id": 161,
												"nodeType": "Return",
												"src": "3900:11:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:1"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3747:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:1"
									},
									"scope": 625,
									"src": "3729:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										680
									],
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "4074:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 174,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "4091:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 176,
														"indexExpression": {
															"id": 175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "4103:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 178,
													"indexExpression": {
														"id": 177,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4110:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 173,
												"id": 179,
												"nodeType": "Return",
												"src": "4084:34:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:1"
									},
									"scope": 625,
									"src": "3976:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										690
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "4522:108:1",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "4532:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 192,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 194,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "4548:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "4579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "4586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 200,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "4570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 191,
												"id": 204,
												"nodeType": "Return",
												"src": "4612:11:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:1"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "4516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:1"
									},
									"scope": 625,
									"src": "4433:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										702
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "5325:153:1",
										"statements": [
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "5335:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 219,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 221,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "5353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 224,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "5375:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "5439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5443:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 230,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "5423:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 218,
												"id": 237,
												"nodeType": "Return",
												"src": "5460:11:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:1"
									},
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5245:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:1"
									},
									"scope": 625,
									"src": "5192:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "5967:140:1",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "5977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 249,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 251,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "5993:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "6024:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "6031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 258,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "6050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 259,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "6057:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 257,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "6040:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 261,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 254,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "6015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 248,
												"id": 266,
												"nodeType": "Return",
												"src": "6089:11:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5917:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "5961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:1"
									},
									"scope": 625,
									"src": "5873:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "6693:328:1",
										"statements": [
											{
												"assignments": [
													279
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "6703:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 278,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 282,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 280,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "6719:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:1"
											},
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "6741:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"arguments": [
														{
															"id": 286,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "6778:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "6785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "6768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "6811:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "6831:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:1"
											},
											{
												"id": 305,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 298,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "6931:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "6938:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 300,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "6947:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 301,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6966:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "6922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 304,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 277,
												"id": 307,
												"nodeType": "Return",
												"src": "7003:11:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6638:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "6687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:1"
									},
									"scope": 625,
									"src": "6594:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "7583:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "7601:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 321,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "7679:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 331,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "7767:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "7773:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "7777:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "7746:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:1"
											},
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "7795:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"baseExpression": {
														"id": 347,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "7817:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 349,
													"indexExpression": {
														"id": 348,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "7827:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "7850:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 353,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "7865:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:1"
											},
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:1",
												"statements": [
													{
														"expression": {
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 358,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "7948:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 360,
																"indexExpression": {
																	"id": 359,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "7958:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 361,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "7966:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 362,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "7980:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 367,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "8006:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 369,
														"indexExpression": {
															"id": 368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "8016:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 370,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "8023:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 374,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8054:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "8060:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "8064:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8045:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "EmitStatement",
												"src": "8040:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "8102:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "8108:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "8112:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 379,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "8082:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "7503:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "7525:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "7545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:1"
									},
									"scope": 625,
									"src": "7475:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "8467:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8485:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "8553:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:1"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "8613:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 414,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "8629:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:1"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 417,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "8645:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 419,
														"indexExpression": {
															"id": 418,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8655:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 420,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "8667:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8709:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8718:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8688:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "EmitStatement",
												"src": "8683:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8768:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8777:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "8736:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:1"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "8417:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "8434:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:1"
									},
									"scope": 625,
									"src": "8402:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "9176:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "9194:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "9285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "9306:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "9264:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:1"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "9324:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"baseExpression": {
														"id": 471,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "9349:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 473,
													"indexExpression": {
														"id": 472,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "9359:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "9385:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 477,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "9403:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:1"
											},
											{
												"id": 490,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:1",
												"statements": [
													{
														"expression": {
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "9482:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"id": 483,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9492:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 485,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "9503:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 486,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "9520:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 489,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "9546:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9562:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 496,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "9593:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "9614:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "9584:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "EmitStatement",
												"src": "9579:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "9652:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "9673:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "9632:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:1"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "9126:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "9143:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:1"
									},
									"scope": 625,
									"src": "9111:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "10223:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "10241:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "10319:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 536,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:1"
											},
											{
												"expression": {
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 544,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "10390:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 547,
															"indexExpression": {
																"id": 545,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "10402:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 548,
														"indexExpression": {
															"id": 546,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "10409:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 549,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "10420:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "10450:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "10457:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10466:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "10441:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "EmitStatement",
												"src": "10436:37:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "10137:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "10160:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "10185:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:1"
									},
									"scope": 625,
									"src": "10110:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10881:321:1",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "10891:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"arguments": [
														{
															"id": 572,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "10928:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "10935:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 571,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "10918:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 576,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "10957:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 577,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10953:243:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10996:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 584,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "11018:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 585,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "11038:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 583,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:1"
														},
														{
															"id": 598,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 591,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "11129:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 592,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "11136:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 593,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "11145:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 594,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "11164:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 590,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 559,
																			"src": "11120:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10795:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10818:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10843:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:1"
									},
									"scope": 625,
									"src": "10761:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "11905:2:1",
										"statements": []
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "11825:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "11847:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "11867:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:1"
									},
									"scope": 625,
									"src": "11786:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "12613:2:1",
										"statements": []
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12533:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12555:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12575:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:1"
									},
									"scope": 625,
									"src": "12495:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 626,
							"src": "1403:11214:1",
							"usedErrors": []
						}
					],
					"src": "105:12513:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 628,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 637,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 646,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 703,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 703,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 703,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 703,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 703,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 703,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 704,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							703
						],
						"IERC20Metadata": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 729,
							"sourceUnit": 704,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "305:6:3"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728,
								703
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 728,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 728,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 724,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 728,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 729,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							764
						]
					},
					"id": 765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 764,
							"linearizedBaseContracts": [
								764
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1494:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1542:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1568:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 741,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1585:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 743,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1604:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 745,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:4"
									},
									"scope": 764,
									"src": "1446:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1950:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1988:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:4"
									},
									"scope": 764,
									"src": "1934:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:4"
									},
									"scope": 764,
									"src": "2189:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 765,
							"src": "620:1631:4",
							"usedErrors": []
						}
					],
					"src": "114:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1340
						],
						"IERC20": [
							703
						],
						"IERC20Permit": [
							764
						],
						"SafeERC20": [
							1045
						]
					},
					"id": 1046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1046,
							"sourceUnit": 704,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1046,
							"sourceUnit": 765,
							"src": "164:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 769,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1046,
							"sourceUnit": 1341,
							"src": "211:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 770,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1045,
							"linearizedBaseContracts": [
								1045
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 773,
									"libraryName": {
										"id": 771,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "737:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:5",
									"typeName": {
										"id": 772,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "865:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "895:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 787,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "925:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$703",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "925:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 790,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "950:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 791,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "954:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 785,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 783,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "875:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "875:86:5"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 774,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "794:6:5"
													},
													"referencedDeclaration": 703,
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "816:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "836:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:5"
									},
									"scope": 1045,
									"src": "763:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1102:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1132:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 812,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "1162:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$703",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 702,
																		"src": "1162:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 815,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "1191:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 816,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "1197:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 817,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1201:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 810,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 808,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1112:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1009:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 797,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "1009:6:5"
													},
													"referencedDeclaration": 703,
													"src": "1009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1031:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1053:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1073:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:5"
									},
									"scope": 1045,
									"src": "974:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1581:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 834,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "1830:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 842,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1045",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1045",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 840,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "1877:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 838,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "1846:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$703",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 680,
																				"src": "1846:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2001:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 857,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "2031:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$703",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 690,
																		"src": "2031:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 860,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "2055:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "2064:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 855,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 853,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1981:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:5"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1505:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 824,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "1505:6:5"
													},
													"referencedDeclaration": 703,
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1552:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:5"
									},
									"scope": 1045,
									"src": "1475:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "2200:194:5",
										"statements": [
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "2210:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 876,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 882,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1045",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1045",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 884,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2264:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 878,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "2233:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$703",
																	"typeString": "contract IERC20"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 680,
															"src": "2233:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 886,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2275:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "2310:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 893,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "2340:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$703",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 690,
																		"src": "2340:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 896,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "2364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 897,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "2373:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 891,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$703",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 889,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2290:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:5"
											}
										]
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2124:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 867,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "2124:6:5"
													},
													"referencedDeclaration": 703,
													"src": "2124:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2146:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:5"
									},
									"scope": 1045,
									"src": "2084:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "2516:370:5",
										"statements": [
											{
												"id": 948,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:5",
												"statements": [
													{
														"assignments": [
															913
														],
														"declarations": [
															{
																"constant": false,
																"id": 913,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 948,
																"src": "2550:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 912,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 922,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 918,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1045",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1045",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 916,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 920,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "2604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 914,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2573:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$703",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 680,
																"src": "2573:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 924,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "2634:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 925,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "2650:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 923,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 929,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:5"
													},
													{
														"assignments": [
															931
														],
														"declarations": [
															{
																"constant": false,
																"id": 931,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 948,
																"src": "2715:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 935,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "2738:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "2753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 937,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$703",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 940,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "2822:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$703",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 690,
																				"src": "2822:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 943,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "2846:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 944,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "2855:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 938,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$703",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 936,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "2772:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 947,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:5"
													}
												]
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 903,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "2440:6:5"
													},
													"referencedDeclaration": 703,
													"src": "2440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2462:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2487:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:5"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:5"
									},
									"scope": 1045,
									"src": "2400:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3107:257:5",
										"statements": [
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "3117:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"arguments": [
														{
															"id": 974,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3152:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3139:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$764",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "3139:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 980,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3181:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "3188:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "3197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 983,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3204:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 984,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3214:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 985,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3217:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 986,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "3220:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 977,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$764",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 749,
														"src": "3168:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:5"
											},
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "3232:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"id": 993,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 991,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3253:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$764",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "3253:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 997,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3290:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 998,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "3304:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:5"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2921:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$764",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 951,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 764,
														"src": "2921:12:5"
													},
													"referencedDeclaration": 764,
													"src": "2921:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$764",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2972:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3020:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3046:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 962,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3082:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:5"
									},
									"scope": 1045,
									"src": "2892:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "3817:636:5",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "4166:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1015,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1025,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4220:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1019,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "4200:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$703",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$703",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1134,
														"src": "4192:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1026,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4275:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "4271:176:5",
												"trueBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "4298:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1033,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "4370:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1035,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1034,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1036,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1031,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1030,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1040,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$703",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1009,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1008,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "3776:6:5"
													},
													"referencedDeclaration": 703,
													"src": "3776:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$703",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3790:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:5"
									},
									"scope": 1045,
									"src": "3747:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1046,
							"src": "707:3748:5",
							"usedErrors": []
						}
					],
					"src": "115:4341:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1048,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1056,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1061,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1340,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1074,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1340",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1340",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1072,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1077,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													1083,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1082,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1090,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1084,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1086,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1340,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1107,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1114,
															1134
														],
														"referencedDeclaration": 1134,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1112,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1340,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1130,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1126,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1154,
															1204
														],
														"referencedDeclaration": 1204,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1132,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 1340,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1146,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1154,
															1204
														],
														"referencedDeclaration": 1204,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1152,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 1340,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1171,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1340",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1340",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1169,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1174,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1181,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1180,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													1187,
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"id": 1194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1190,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1199,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1200,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1197,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1202,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 1340,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1214,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1221,
															1256
														],
														"referencedDeclaration": 1256,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1219,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 1340,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1235,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1234,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													1241,
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1240,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1242,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"id": 1246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1251,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1252,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1249,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1254,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 1340,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1267,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1266,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1308
														],
														"referencedDeclaration": 1308,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1271,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 1340,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1287,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1286,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													1293,
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1303,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1304,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1301,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1306,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 1340,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "7721:582:6",
										"statements": [
											{
												"condition": {
													"id": 1320,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1311,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "7792:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1324,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1334,
																"nodeType": "Block",
																"src": "8234:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1331,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1315,
																					"src": "8259:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1330,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1333,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:6"
																	}
																]
															},
															"id": 1335,
															"nodeType": "IfStatement",
															"src": "7872:415:6",
															"trueBody": {
																"id": 1329,
																"nodeType": "Block",
																"src": "7899:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1313,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1313,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1328,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "7731:566:6",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 1321,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1319,
															"id": 1322,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 1340,
									"src": "7561:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1341,
							"src": "194:8111:6",
							"usedErrors": []
						}
					],
					"src": "101:8205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1362
						]
					},
					"id": 1363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1362,
							"linearizedBaseContracts": [
								1362
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1348,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1347,
												"id": 1350,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1362,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1357,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1359,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1362,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1363,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"contracts/ico.sol": {
				"ast": {
					"absolutePath": "contracts/ico.sol",
					"exportedSymbols": {
						"Address": [
							1340
						],
						"Amestarter": [
							1709
						],
						"Context": [
							1362
						],
						"ERC20": [
							625
						],
						"IDAZ": [
							1461
						],
						"IERC20": [
							703
						],
						"IERC20Metadata": [
							728
						],
						"IERC20Permit": [
							764
						],
						"IKRC20": [
							1385
						],
						"IUSDT": [
							1423
						],
						"ReentrancyGuard": [
							39
						],
						"SafeERC20": [
							1045
						]
					},
					"id": 1710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1710,
							"sourceUnit": 40,
							"src": "59:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1710,
							"sourceUnit": 626,
							"src": "123:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1710,
							"sourceUnit": 1046,
							"src": "180:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1368,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "267:6:8"
									},
									"id": 1369,
									"nodeType": "InheritanceSpecifier",
									"src": "267:6:8"
								}
							],
							"canonicalName": "IKRC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								703
							],
							"name": "IKRC20",
							"nameLocation": "257:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "290:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:8"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "320:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:15:8"
									},
									"scope": 1385,
									"src": "281:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "352:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:8"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "384:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:8"
									},
									"scope": 1385,
									"src": "343:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "416:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:8"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "450:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1381,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "450:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:7:8"
									},
									"scope": 1385,
									"src": "407:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1710,
							"src": "247:213:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUSDT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1423,
							"linearizedBaseContracts": [
								1423
							],
							"name": "IUSDT",
							"nameLocation": "474:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "496:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:8"
									},
									"scope": 1423,
									"src": "487:36:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "540:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "549:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:9:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:8"
									},
									"scope": 1423,
									"src": "531:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "584:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "601:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "593:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "613:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "605:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:27:8"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "638:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:6:8"
									},
									"scope": 1423,
									"src": "575:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "661:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "692:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "684:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "715:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "707:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "736:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "728:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:75:8"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "767:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:6:8"
									},
									"scope": 1423,
									"src": "652:121:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "790:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "806:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "798:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "818:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "810:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:27:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "843:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "843:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:6:8"
									},
									"scope": 1423,
									"src": "781:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1710,
							"src": "464:388:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAZ",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1461,
							"linearizedBaseContracts": [
								1461
							],
							"name": "IDAZ",
							"nameLocation": "864:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "885:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:8"
									},
									"scope": 1461,
									"src": "876:36:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "929:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "938:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:9:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:0:8"
									},
									"scope": 1461,
									"src": "920:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "973:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "990:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "982:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1002:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "994:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:27:8"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1027:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1027:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:6:8"
									},
									"scope": 1461,
									"src": "964:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1050:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1081:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1073:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1104:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1096:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1125:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1117:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:75:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1156:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:6:8"
									},
									"scope": 1461,
									"src": "1041:121:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1179:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1195:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1187:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1207:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1199:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:27:8"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1232:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:6:8"
									},
									"scope": 1461,
									"src": "1170:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1710,
							"src": "854:387:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1462,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "1268:15:8"
									},
									"id": 1463,
									"nodeType": "InheritanceSpecifier",
									"src": "1268:15:8"
								}
							],
							"canonicalName": "Amestarter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1709,
							"linearizedBaseContracts": [
								1709,
								39
							],
							"name": "Amestarter",
							"nameLocation": "1254:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1467,
									"libraryName": {
										"id": 1464,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1045,
										"src": "1303:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1297:27:8",
									"typeName": {
										"id": 1466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1465,
											"name": "IKRC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1385,
											"src": "1317:6:8"
										},
										"referencedDeclaration": 1385,
										"src": "1317:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKRC20_$1385",
											"typeString": "contract IKRC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 1469,
									"mutability": "immutable",
									"name": "USDT",
									"nameLocation": "1357:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1332:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1468,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1332:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6385f2fb",
									"id": 1471,
									"mutability": "immutable",
									"name": "DAZ",
									"nameLocation": "1393:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1368:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1470,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 1473,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "1415:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1403:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1472,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1403:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1475,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1448:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1432:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1432:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1477,
									"mutability": "mutable",
									"name": "IDOStarted",
									"nameLocation": "1465:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1460:15:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1476,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1460:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1479,
									"mutability": "mutable",
									"name": "targetSale",
									"nameLocation": "1490:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1482:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1482:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1481,
									"mutability": "mutable",
									"name": "totalRaised",
									"nameLocation": "1515:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1507:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1507:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1485,
									"mutability": "mutable",
									"name": "purchase",
									"nameLocation": "1591:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "1555:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1484,
										"keyType": {
											"id": 1482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1563:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1555:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1574:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "da4cadf0d4383cb43c8249e3cc678f6690bdbaa01421c99fd9b14edac62cde80",
									"id": 1491,
									"name": "latestPurchased",
									"nameLocation": "1628:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1670:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1654:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1691:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1686:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1686:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:61:8"
									},
									"src": "1622:83:8"
								},
								{
									"anonymous": false,
									"eventSelector": "314bf1ccc32c608a6175053b0da1933b3a745b3f799011003a4c39aab0c518a3",
									"id": 1497,
									"name": "icoUpdate",
									"nameLocation": "1719:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTokenprice",
												"nameLocation": "1744:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1739:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": false,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1776:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1768:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:61:8"
									},
									"src": "1713:77:8"
								},
								{
									"anonymous": false,
									"eventSelector": "71002079ab3de7feb03ee30c84baf1d2350d4ffe16709d3dacb5e1037a0fe1cc",
									"id": 1501,
									"name": "ICOStartAlert",
									"nameLocation": "1802:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "icoAlert",
												"nameLocation": "1833:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1826:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1826:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:33:8"
									},
									"src": "1796:53:8"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "1938:176:8",
										"statements": [
											{
												"expression": {
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1512,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "1949:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1513,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1957:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1957:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1949:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "1949:18:8"
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1517,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "1978:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "_tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "1991:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2005:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2011:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2005:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1991:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1978:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "1978:35:8"
											},
											{
												"expression": {
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1525,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "2024:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1526,
														"name": "_IUSDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "2031:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2024:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "2024:13:8"
											},
											{
												"expression": {
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1529,
														"name": "DAZ",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2048:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1530,
														"name": "_IDAZ",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "2055:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2048:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2048:12:8"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1533,
														"name": "targetSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "2071:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1534,
															"name": "_targetSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "2084:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2104:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2098:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "2084:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2071:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "2071:35:8"
											}
										]
									},
									"id": 1542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "1874:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1869:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1869:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "_IUSDT",
												"nameLocation": "1895:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1887:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "_IDAZ",
												"nameLocation": "1911:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1903:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_targetSale",
												"nameLocation": "1926:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1918:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:70:8"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1938:0:8"
									},
									"scope": 1709,
									"src": "1857:257:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "2180:444:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1550,
																"name": "IDOStarted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "2199:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2213:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2199:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49444f20686173206e6f742073746172746564",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563",
																"typeString": "literal_string \"IDO has not started\""
															},
															"value": "IDO has not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37dadc7225861e71a8aa44d6f9a35cbca986d7992a021b6f44357066f494563",
																"typeString": "literal_string \"IDO has not started\""
															}
														],
														"id": 1549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2191:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "2191:50:8"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2260:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "2252:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2252:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1558,
														"name": "totalRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2268:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1559,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2282:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2268:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2252:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "2308:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1564,
																"name": "targetSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "2316:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2308:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e7320686173206265656e20736f6c64",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4",
																"typeString": "literal_string \"All tokens has been sold\""
															},
															"value": "All tokens has been sold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fdea627d6667d45d081c6e2a8e79f2a59f72b4f5fb7a8a7e31a49eeb74731e4",
																"typeString": "literal_string \"All tokens has been sold\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "2300:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1575,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2395:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Amestarter_$1709",
																		"typeString": "contract Amestarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Amestarter_$1709",
																		"typeString": "contract Amestarter"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2387:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2387:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2402:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1570,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "2373:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1569,
																"name": "IKRC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "2366:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKRC20_$1385_$",
																	"typeString": "type(contract IKRC20)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2366:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKRC20_$1385",
																"typeString": "contract IKRC20"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "2366:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2366:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1584,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2451:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2451:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1588,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2471:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Amestarter_$1709",
																		"typeString": "contract Amestarter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Amestarter_$1709",
																		"typeString": "contract Amestarter"
																	}
																],
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2463:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2463:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2463:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1590,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2478:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1581,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "2428:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1580,
																"name": "IKRC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "2421:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IKRC20_$1385_$",
																	"typeString": "type(contract IKRC20)"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2421:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKRC20_$1385",
																"typeString": "contract IKRC20"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 822,
														"src": "2421:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$703_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$703_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2421:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2421:65:8"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1593,
															"name": "purchase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "2497:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1596,
														"indexExpression": {
															"expression": {
																"id": 1594,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2506:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2506:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2497:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1597,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2497:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "2497:32:8"
											},
											{
												"expression": {
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1600,
														"name": "totalRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2540:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1601,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2555:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2540:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "2540:22:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1605,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2596:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2596:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2608:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1604,
														"name": "latestPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "2580:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2580:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "EmitStatement",
												"src": "2575:41:8"
											}
										]
									},
									"functionSelector": "c2db2c42",
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1546,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2168:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2168:12:8"
										}
									],
									"name": "purchaseToken",
									"nameLocation": "2131:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2150:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2145:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2145:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:14:8"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:0:8"
									},
									"scope": 1709,
									"src": "2122:502:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "2685:144:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1617,
																"name": "IDOStarted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "2704:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2718:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2704:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49444f2048617320206e6f7420656e6465642c20636c61696d20756e617661696c61626c65",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2725:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2",
																"typeString": "literal_string \"IDO Has  not ended, claim unavailable\""
															},
															"value": "IDO Has  not ended, claim unavailable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_065d87ab6105c36f4b7fa7c5ad74f26e87f3ecc8ebc2d031b9d765bee5dcffc2",
																"typeString": "literal_string \"IDO Has  not ended, claim unavailable\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2696:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "2696:69:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1624,
																	"name": "purchase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "2784:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1627,
																"indexExpression": {
																	"expression": {
																		"id": 1625,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2793:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2793:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2784:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2807:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2784:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f752064696420",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24",
																"typeString": "literal_string \"you did \""
															},
															"value": "you did "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b4c141dc96df50489fe8d20d71a692c07903dffc1ac1035585fe277e1aa2c24",
																"typeString": "literal_string \"you did \""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2776:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2776:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "2776:45:8"
											}
										]
									},
									"functionSelector": "d7997f7e",
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2672:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2672:12:8"
										}
									],
									"name": "claimPurchasedToken",
									"nameLocation": "2641:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2660:2:8"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2685:0:8"
									},
									"scope": 1709,
									"src": "2632:197:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2899:197:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1642,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2918:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2918:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1644,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "2932:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2918:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2910:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2910:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "2910:28:8"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1648,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "2951:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1649,
															"name": "_tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "2964:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2978:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2984:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2978:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "2964:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2951:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "2951:35:8"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1656,
														"name": "targetSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "2997:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1657,
															"name": "_targetSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3010:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3030:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3024:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3010:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2997:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "2997:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1665,
															"name": "_tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3061:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1666,
															"name": "_targetSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "3074:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1664,
														"name": "icoUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3050:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "3045:41:8"
											}
										]
									},
									"functionSelector": "c3a17441",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "editIco",
									"nameLocation": "2846:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "2859:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2854:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2854:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "_targetSale",
												"nameLocation": "2880:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "2872:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2872:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:39:8"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2899:0:8"
									},
									"scope": 1709,
									"src": "2837:259:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "3131:119:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1674,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3150:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3150:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1676,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "3164:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3150:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3142:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "3142:28:8"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1680,
														"name": "IDOStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "3183:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3196:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3183:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "3183:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "49434f206973206f6e",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3230:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc",
																"typeString": "literal_string \"ICO is on\""
															},
															"value": "ICO is on"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_031d62c103bd32fdd7bd7c7dfb23497e1797a63480be865c1464e75336f991fc",
																"typeString": "literal_string \"ICO is on\""
															}
														],
														"id": 1684,
														"name": "ICOStartAlert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3216:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3216:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "EmitStatement",
												"src": "3211:31:8"
											}
										]
									},
									"functionSelector": "dc55920f",
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BeginIDO",
									"nameLocation": "3113:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:8"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3131:0:8"
									},
									"scope": 1709,
									"src": "3104:146:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "3284:124:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1693,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3303:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3303:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1695,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "3317:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3303:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3295:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3295:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "3295:28:8"
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1699,
														"name": "IDOStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "3336:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3336:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "3336:18:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "49434f20697320706175736564",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3384:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d",
																"typeString": "literal_string \"ICO is paused\""
															},
															"value": "ICO is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_2fdcb35ad3425ca72c463097060bede3613840139a4c3a752abb1d4a22f5a71d",
																"typeString": "literal_string \"ICO is paused\""
															}
														],
														"id": 1703,
														"name": "ICOStartAlert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3370:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3370:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "EmitStatement",
												"src": "3365:35:8"
											}
										]
									},
									"functionSelector": "76d812ea",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StopIDO",
									"nameLocation": "3267:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:2:8"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3284:0:8"
									},
									"scope": 1709,
									"src": "3258:150:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1710,
							"src": "1245:2174:8",
							"usedErrors": []
						}
					],
					"src": "33:3386:8"
				},
				"id": 8
			}
		}
	}
}