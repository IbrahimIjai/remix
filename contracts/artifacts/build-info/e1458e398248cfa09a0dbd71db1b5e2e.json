{
	"id": "e1458e398248cfa09a0dbd71db1b5e2e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/testtoken.sol": {
				"content": "// // SPDX-License-Identifier: MIT\r\n// pragma solidity ^0.8.13;\r\n// // import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; \r\n// //  import  \"@openzeppelin/co\"\r\n// //  import \"hardhat/console.sol\"; \r\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\n//  contract TestToken is ERC20 { \r\n//      constructor(uint256 _supply) ERC20(\"tTether USD\", \"tUSDT\") { \r\n//          _mint(msg.sender, _supply * (10**decimals())); \r\n//      } \r\n//  }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"errors": [
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"\n--> contracts/testtoken.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/testtoken.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/testtoken.sol": {
				"ast": {
					"absolutePath": "contracts/testtoken.sol",
					"exportedSymbols": {},
					"id": 1,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [],
					"src": "482:0:0"
				},
				"id": 0
			}
		}
	}
}